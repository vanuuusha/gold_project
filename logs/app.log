2025-04-27 23:50:54.167 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:50:54.763 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:52:42.909 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:53:07.775 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:53:39.679 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:53:41.487 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:53:53.672 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:53:54.259 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:54:20.125 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:54:39.941 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:55:01.874 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:55:29.757 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:55:29.761 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:55:42.624 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:55:42.628 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:56:56.722 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:56:56.724 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:57:00.475 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:57:00.478 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:30.563 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:30.566 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:40.401 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:40.403 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:46.510 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:46.513 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:47.084 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:47.087 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-27 23:58:49.805 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:32.325 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:00:32.328 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:00:42.128 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:00:42.133 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:00:43.203 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:55.382 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:56.664 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:57.039 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:57.308 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:57.558 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:57.777 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:57.987 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:00:59.816 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-01-28 01:00:00      2744.7      2749.7     2742.8       2744.8
1       gold 2025-01-28 02:00:00      2744.5      2745.2     2741.9       2742.8
2       gold 2025-01-28 03:00:00      2742.9      2745.4     2740.8       2741.7
3       gold 2025-01-28 04:00:00      2741.7      2744.8     2741.4       2744.8
4       gold 2025-01-28 05:00:00      2746.2      2748.7     2744.7       2744.9
2025-04-28 00:01:01.913 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-01-28 01:00:00      2744.7      2749.7     2742.8       2744.8
1       gold 2025-01-28 02:00:00      2744.5      2745.2     2741.9       2742.8
2       gold 2025-01-28 03:00:00      2742.9      2745.4     2740.8       2741.7
3       gold 2025-01-28 04:00:00      2741.7      2744.8     2741.4       2744.8
4       gold 2025-01-28 05:00:00      2746.2      2748.7     2744.7       2744.9
2025-04-28 00:01:22.532 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-01-28 01:00:00      2744.7      2749.7     2742.8       2744.8
1       gold 2025-01-28 02:00:00      2744.5      2745.2     2741.9       2742.8
2       gold 2025-01-28 03:00:00      2742.9      2745.4     2740.8       2741.7
3       gold 2025-01-28 04:00:00      2741.7      2744.8     2741.4       2744.8
4       gold 2025-01-28 05:00:00      2746.2      2748.7     2744.7       2744.9
2025-04-28 00:01:26.134 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-01-28 01:00:00      2744.7      2749.7     2742.8       2744.8
1       gold 2025-01-28 02:00:00      2744.5      2745.2     2741.9       2742.8
2       gold 2025-01-28 03:00:00      2742.9      2745.4     2740.8       2741.7
3       gold 2025-01-28 04:00:00      2741.7      2744.8     2741.4       2744.8
4       gold 2025-01-28 05:00:00      2746.2      2748.7     2744.7       2744.9
2025-04-28 00:01:30.267 | INFO     | views.visual_dashboard:update_dashboard:524 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-01-28 01:00:00      2744.7      2749.7     2742.8       2744.8
1       gold 2025-01-28 02:00:00      2744.5      2745.2     2741.9       2742.8
2       gold 2025-01-28 03:00:00      2742.9      2745.4     2740.8       2741.7
3       gold 2025-01-28 04:00:00      2741.7      2744.8     2741.4       2744.8
4       gold 2025-01-28 05:00:00      2746.2      2748.7     2744.7       2744.9
2025-04-28 00:02:56.504 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:02:56.506 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:02:59.278 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:02:59.280 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:09.120 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:09.123 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:10.905 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:10.908 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:19.076 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:21.604 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:24.105 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:24.617 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:24.909 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:25.249 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:25.711 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:03:42.878 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:42.881 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:03:45.141 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:04:10.713 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:10.716 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:17.498 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:17.500 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:18.417 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:04:49.447 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:49.450 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:04:51.113 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:05.287 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:05.289 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:07.238 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:11.116 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:11.843 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:12.449 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:13.570 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:18.020 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:19.103 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:19.106 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:19.154 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:25.317 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:26.004 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:30.459 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:48.984 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:48.986 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:52.373 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:54.830 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:05:58.812 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:05:58.814 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:12.596 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:12.598 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:15.353 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:15.356 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:17.034 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:06:19.320 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:06:19.983 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:06:20.522 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:06:44.963 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:44.965 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:45.563 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:45.567 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:06:46.659 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:14.960 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:14.963 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:16.758 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:16.760 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:21.193 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:26.313 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:27.049 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:27.598 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:34.588 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:34.591 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:09:36.010 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:37.142 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:37.609 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:37.851 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:42.977 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:49.460 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:50.008 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:50.464 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:51.323 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:52.024 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:09:52.760 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:02.048 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:02.605 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:03.159 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:03.705 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:04.266 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:10:59.766 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:10:59.768 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:11:04.111 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:11:20.618 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:11:20.620 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:11:20.885 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:11:31.407 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:11:31.411 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:11:33.817 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:12:21.264 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:21.268 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:21.854 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:21.857 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:24.891 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:12:26.166 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:12:26.668 | INFO     | views.visual_dashboard:update_dashboard:527 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:12:32.696 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:32.698 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:35.443 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:35.445 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:12:58.402 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:13:03.975 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:13:15.163 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:13:18.780 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:13:21.187 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:13:27.781 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:16.629 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:16.633 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:33.449 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:33.452 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:43.300 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:43.303 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:46.169 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:46.170 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:46.174 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:46.180 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:46.180 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:46.181 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:46.185 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:46.373 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:46.981 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:46.981 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:46.984 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:46.989 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:46.990 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:46.990 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:46.994 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.021 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:47.499 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:47.499 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:47.503 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.507 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.508 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:47.509 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:47.513 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.538 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:47.984 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:47.984 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:47.988 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.994 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:47.994 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:47.995 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:47.999 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.025 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:48.394 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:48.394 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:48.398 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.404 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.405 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:48.406 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:48.410 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.434 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:48.735 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:48.735 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:48.739 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.743 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.744 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:48.744 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:48.748 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:48.772 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:49.887 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:49.887 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:49.892 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:49.898 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:49.899 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:49.899 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:49.903 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:49.929 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:51.395 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:51.395 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:51.399 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:51.407 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:51.408 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:51.408 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:51.413 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:51.436 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:52.040 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:52.041 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:52.045 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.052 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.053 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:52.053 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:52.057 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.082 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:52.559 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:52.560 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:52.563 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.569 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.569 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:52.569 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:52.573 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:52.597 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:53.079 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:53.079 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:53.083 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.089 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.090 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:53.090 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:53.095 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.119 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:53.600 | INFO     | views.visual_dashboard:get_price_data:410 - Retrieved data shape: (437, 5)
2025-04-28 00:14:53.600 | INFO     | views.visual_dashboard:get_price_data:411 - Data index: timestamp
2025-04-28 00:14:53.605 | INFO     | views.visual_dashboard:get_price_data:412 - DataFrame sample:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.611 | INFO     | views.visual_dashboard:update_dashboard:532 - DataFrame head before plotting:\n                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.612 | INFO     | views.visual_dashboard:create_time_series_chart:607 - Creating time series chart, df shape: (437, 5)
2025-04-28 00:14:53.612 | INFO     | views.visual_dashboard:create_time_series_chart:608 - DataFrame columns: Index(['metal_type', 'open_price', 'high_price', 'low_price', 'close_price'], dtype='object')
2025-04-28 00:14:53.617 | INFO     | views.visual_dashboard:create_time_series_chart:613 - First few rows of data:
                    metal_type  open_price  high_price  low_price  close_price
timestamp                                                                     
2025-03-30 22:00:00       gold      3118.8      3128.3     3091.0       3123.0
2025-03-30 23:00:00       gold      3123.2      3124.9     3094.7       3123.5
2025-03-31 00:00:00       gold      3123.4      3123.9     3086.0       3114.7
2025-03-31 01:00:00       gold      3114.8      3129.1     3087.0       3127.6
2025-03-31 02:00:00       gold      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:14:53.641 | INFO     | views.visual_dashboard:create_time_series_chart:650 - Time series chart created successfully
2025-04-28 00:14:57.194 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:14:57.196 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:15:00.972 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:15:00.974 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:16:23.927 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:16:23.929 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:16:43.243 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:16:44.974 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:16:45.492 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:16:45.784 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:16:54.156 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:16:54.158 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:16:56.082 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:18:19.305 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:18:19.308 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:18:34.152 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:18:34.156 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:18:36.155 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:18:43.066 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 01:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 02:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 03:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-29 04:00:00     4219.09     4229.21    4080.45      4130.84
4       gold 2025-03-29 05:00:00     4219.09     4229.21    4080.45      4130.84
2025-04-28 00:18:44.766 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:19:18.278 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:19:44.272 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:19:44.275 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:19:47.490 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:20:01.175 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:20:01.177 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:20:04.660 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:20:08.219 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:20:08.827 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:20:09.273 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:20:31.208 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:20:31.210 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:20:32.405 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:21:53.308 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:21:53.310 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:22:08.099 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:22:08.102 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:22:57.049 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:22:57.052 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:23:02.818 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:23:02.820 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:23:05.006 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:23:05.007 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:23:05.007 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-30 22:00:00'), 'open_price': 3118.8, 'high_price': 3128.3, 'low_price': 3091.0, 'close_price': 3123.0}
2025-04-28 00:23:15.061 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:23:15.062 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:23:15.062 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-30 22:00:00'), 'open_price': 3118.8, 'high_price': 3128.3, 'low_price': 3091.0, 'close_price': 3123.0}
2025-04-28 00:23:18.258 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 01:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 02:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 03:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-29 04:00:00     4219.09     4229.21    4080.45      4130.84
4       gold 2025-03-29 05:00:00     4219.09     4229.21    4080.45      4130.84
2025-04-28 00:23:18.259 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:23:18.259 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-29 01:00:00'), 'open_price': 4219.09, 'high_price': 4229.21, 'low_price': 4080.45, 'close_price': 4130.84}
2025-04-28 00:23:33.775 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:23:33.778 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:23:35.215 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:23:35.215 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:23:35.216 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-30 22:00:00'), 'open_price': 3118.8, 'high_price': 3128.3, 'low_price': 3091.0, 'close_price': 3123.0}
2025-04-28 00:23:56.584 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:23:56.585 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:23:56.585 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-30 22:00:00'), 'open_price': 3118.8, 'high_price': 3128.3, 'low_price': 3091.0, 'close_price': 3123.0}
2025-04-28 00:24:41.116 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:24:41.119 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:24:41.714 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:24:41.717 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:24:43.548 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:24:43.549 | INFO     | views.visual_dashboard:create_time_series_chart:610 - DataFrame columns before plotting: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 00:24:43.549 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame first row: {'metal_type': 'gold', 'timestamp': Timestamp('2025-03-30 22:00:00'), 'open_price': 3118.8, 'high_price': 3128.3, 'low_price': 3091.0, 'close_price': 3123.0}
2025-04-28 00:25:37.753 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:25:37.758 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:25:49.533 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:25:49.535 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:25:50.840 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:25:50.846 | INFO     | views.visual_dashboard:create_time_series_chart:618 - Plotting data for gold:
2025-04-28 00:25:50.846 | INFO     | views.visual_dashboard:create_time_series_chart:619 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 00:25:50.846 | INFO     | views.visual_dashboard:create_time_series_chart:620 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 00:26:00.364 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:26:00.367 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 00:26:01.073 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 00:26:01.079 | INFO     | views.visual_dashboard:create_time_series_chart:618 - Plotting data for gold:
2025-04-28 00:26:01.079 | INFO     | views.visual_dashboard:create_time_series_chart:619 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 00:26:01.079 | INFO     | views.visual_dashboard:create_time_series_chart:620 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:03:16.334 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:16.336 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:44.104 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:44.107 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:44.661 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:44.663 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:03:49.050 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:03:49.067 | INFO     | views.visual_dashboard:create_time_series_chart:618 - Plotting data for gold:
2025-04-28 20:03:49.068 | INFO     | views.visual_dashboard:create_time_series_chart:619 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:03:49.068 | INFO     | views.visual_dashboard:create_time_series_chart:620 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:07:52.185 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:07:52.188 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:08:23.023 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:08:23.025 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:08:37.775 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:08:37.777 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:08:49.635 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:08:49.636 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:08:49.636 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:08:49.640 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:08:49.646 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:08:49.647 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:08:49.647 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:08:49.663 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:11:21.067 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:11:21.069 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:11:29.066 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:11:29.067 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:11:29.067 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:11:29.071 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:11:29.075 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:11:29.075 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:11:29.075 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:11:29.091 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:11:43.911 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 21:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 22:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 23:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-30 00:00:00     4131.20     4175.45    4076.94      4119.00
4       gold 2025-03-30 01:00:00     4131.20     4175.45    4076.94      4119.00
2025-04-28 20:11:43.912 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (698, 6)
2025-04-28 20:11:43.912 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:11:43.915 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 21:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 22:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 23:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-30 00:00:00     4131.20     4175.45    4076.94      4119.00
4       gold 2025-03-30 01:00:00     4131.20     4175.45    4076.94      4119.00
2025-04-28 20:11:43.916 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:11:43.916 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-29 21:00:00'), Timestamp('2025-03-29 22:00:00'), Timestamp('2025-03-29 23:00:00')]
2025-04-28 20:11:43.917 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [4219.09, 4219.09, 4219.09]
2025-04-28 20:11:43.921 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:11:50.264 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:11:50.265 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:11:50.265 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:11:50.268 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:11:50.269 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:11:50.269 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:11:50.270 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:11:50.274 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:11:54.219 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 21:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 22:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 23:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-30 00:00:00     4131.20     4175.45    4076.94      4119.00
4       gold 2025-03-30 01:00:00     4131.20     4175.45    4076.94      4119.00
2025-04-28 20:11:54.220 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (698, 6)
2025-04-28 20:11:54.220 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:11:54.223 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-29 21:00:00     4219.09     4229.21    4080.45      4130.84
1       gold 2025-03-29 22:00:00     4219.09     4229.21    4080.45      4130.84
2       gold 2025-03-29 23:00:00     4219.09     4229.21    4080.45      4130.84
3       gold 2025-03-30 00:00:00     4131.20     4175.45    4076.94      4119.00
4       gold 2025-03-30 01:00:00     4131.20     4175.45    4076.94      4119.00
2025-04-28 20:11:54.225 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:11:54.225 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-29 21:00:00'), Timestamp('2025-03-29 22:00:00'), Timestamp('2025-03-29 23:00:00')]
2025-04-28 20:11:54.225 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [4219.09, 4219.09, 4219.09]
2025-04-28 20:11:54.230 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:12:29.966 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:29.967 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:12:29.967 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:12:29.971 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:29.973 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:12:29.973 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:12:29.973 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:12:29.977 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:12:34.478 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:12:34.480 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:12:35.034 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:12:35.036 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:12:36.763 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:36.764 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:12:36.764 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:12:36.769 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:36.773 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:12:36.773 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:12:36.773 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:12:36.785 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:12:46.805 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:46.806 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:51.792 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:51.793 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:51.793 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:12:51.794 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:12:57.790 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:57.791 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:12:57.791 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:12:57.794 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:12:57.795 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:12:57.796 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:12:57.796 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:12:57.799 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:13:02.500 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:13:02.501 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:13:02.501 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:13:02.505 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:13:02.507 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:13:02.507 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:13:02.507 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:13:02.512 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:17:57.764 | INFO     | views.visual_dashboard:update_dashboard:528 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:17:57.765 | INFO     | views.visual_dashboard:create_time_series_chart:610 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:17:57.765 | INFO     | views.visual_dashboard:create_time_series_chart:611 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:17:57.768 | INFO     | views.visual_dashboard:create_time_series_chart:612 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:17:57.770 | INFO     | views.visual_dashboard:create_time_series_chart:622 - Plotting data for gold:
2025-04-28 20:17:57.770 | INFO     | views.visual_dashboard:create_time_series_chart:623 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:17:57.770 | INFO     | views.visual_dashboard:create_time_series_chart:624 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:17:57.775 | INFO     | views.visual_dashboard:create_time_series_chart:664 - Time series chart created successfully
2025-04-28 20:22:33.948 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:22:33.950 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:22:58.634 | INFO     | views.visual_dashboard:update_dashboard:611 - DataFrame head before plotting:\n  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:22:58.634 | INFO     | views.visual_dashboard:create_time_series_chart:693 - Creating time series chart, df shape: (437, 6)
2025-04-28 20:22:58.634 | INFO     | views.visual_dashboard:create_time_series_chart:694 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price'],
      dtype='object')
2025-04-28 20:22:58.637 | INFO     | views.visual_dashboard:create_time_series_chart:695 - First few rows of data:
  metal_type           timestamp  open_price  high_price  low_price  close_price
0       gold 2025-03-30 22:00:00      3118.8      3128.3     3091.0       3123.0
1       gold 2025-03-30 23:00:00      3123.2      3124.9     3094.7       3123.5
2       gold 2025-03-31 00:00:00      3123.4      3123.9     3086.0       3114.7
3       gold 2025-03-31 01:00:00      3114.8      3129.1     3087.0       3127.6
4       gold 2025-03-31 02:00:00      3127.5      3140.2     3100.3       3138.8
2025-04-28 20:22:58.642 | INFO     | views.visual_dashboard:create_time_series_chart:705 - Plotting data for gold:
2025-04-28 20:22:58.643 | INFO     | views.visual_dashboard:create_time_series_chart:706 - X (first 3): [Timestamp('2025-03-30 22:00:00'), Timestamp('2025-03-30 23:00:00'), Timestamp('2025-03-31 00:00:00')]
2025-04-28 20:22:58.643 | INFO     | views.visual_dashboard:create_time_series_chart:707 - Y (first 3): [3118.8, 3123.2, 3123.4]
2025-04-28 20:22:58.658 | INFO     | views.visual_dashboard:create_time_series_chart:747 - Time series chart created successfully
2025-04-28 20:23:27.888 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:23:27.891 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:24:15.747 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:24:15.749 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:26:03.790 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:26:03.792 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:26:23.564 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:26:23.566 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:27:20.430 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:27:20.432 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:27:54.240 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:27:54.243 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:28:16.382 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:28:16.384 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:28:16.933 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:28:16.935 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:28:25.798 | INFO     | views.visual_dashboard:update_dashboard:996 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:28:25.838 | INFO     | views.visual_dashboard:update_dashboard:1033 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:28:25.859 | INFO     | views.visual_dashboard:create_time_series_chart:1117 - Creating time series chart, df shape: (437, 34)
2025-04-28 20:28:25.859 | INFO     | views.visual_dashboard:create_time_series_chart:1118 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:28:25.878 | INFO     | views.visual_dashboard:create_time_series_chart:1171 - Time series chart created successfully
2025-04-28 20:29:24.553 | INFO     | views.visual_dashboard:update_dashboard:996 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:29:24.572 | INFO     | views.visual_dashboard:update_dashboard:1033 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:29:24.596 | INFO     | views.visual_dashboard:create_time_series_chart:1117 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:29:24.597 | INFO     | views.visual_dashboard:create_time_series_chart:1118 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:29:24.601 | INFO     | views.visual_dashboard:create_time_series_chart:1171 - Time series chart created successfully
2025-04-28 20:30:32.221 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:30:32.223 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:30:57.014 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:30:57.017 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:31:15.838 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:31:15.840 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:31:32.639 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:31:32.642 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:32:10.601 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:10.625 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:10.646 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:10.647 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:10.664 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:11.524 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:11.537 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:11.552 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:11.553 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:11.559 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:19.880 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:32:19.882 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:32:20.441 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:32:20.443 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:32:22.916 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: dashboard-custom-date-range
2025-04-28 20:32:22.945 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:32:22.961 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (437, 34)
2025-04-28 20:32:22.962 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:22.984 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:23.316 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:32:23.330 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:23.344 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:23.344 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:23.348 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:27.623 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:27.638 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:27.653 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:27.653 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:27.657 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:28.341 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:28.354 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:28.369 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:28.369 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:28.374 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:28.912 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:28.927 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:28.941 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:28.942 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:28.947 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:29.442 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:32:29.456 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:29.471 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:29.472 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:29.476 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:30.971 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: source-dropdown
2025-04-28 20:32:30.984 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:32:30.998 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (437, 34)
2025-04-28 20:32:30.999 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:31.004 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:31.148 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:32:31.160 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:32:31.174 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (437, 34)
2025-04-28 20:32:31.174 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:31.180 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:32.965 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: source-dropdown
2025-04-28 20:32:32.981 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:32.996 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:32.996 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:33.044 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:33.184 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:32:33.201 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:33.217 | INFO     | views.visual_dashboard:create_time_series_chart:1126 - Creating time series chart, df shape: (698, 34)
2025-04-28 20:32:33.218 | INFO     | views.visual_dashboard:create_time_series_chart:1127 - DataFrame columns: Index(['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price',
       'close_price', 'sma_5', 'sma_10', 'sma_20', 'sma_50', 'sma_100',
       'sma_200', 'ema_5', 'ema_10', 'ema_20', 'ema_50', 'ema_100', 'ema_200',
       'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change',
       'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26',
       'macd_line', 'macd_signal', 'macd_histogram'],
      dtype='object')
2025-04-28 20:32:33.226 | INFO     | views.visual_dashboard:create_time_series_chart:1180 - Time series chart created successfully
2025-04-28 20:32:57.659 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:32:57.675 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:32:57.850 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:32:57.862 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:01.172 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:01.188 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:01.366 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:01.379 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:02.147 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:02.162 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:02.322 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:02.336 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:02.739 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:02.754 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:02.924 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:02.937 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:06.834 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:06.848 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:07.008 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:07.026 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:07.696 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:07.711 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:07.871 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:07.885 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:08.675 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 20:33:08.689 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:33:08.837 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:33:08.851 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:43.277 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:35:43.294 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:43.555 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:35:43.574 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:44.117 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:35:44.133 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:44.447 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:35:44.460 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:49.538 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:35:49.554 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:49.892 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:35:49.905 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:50.172 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:35:50.187 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:35:50.404 | INFO     | views.visual_dashboard:update_dashboard:1005 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:35:50.417 | INFO     | views.visual_dashboard:update_dashboard:1042 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:00.150 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:36:00.152 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:36:05.370 | INFO     | views.visual_dashboard:update_dashboard:1082 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:36:05.398 | INFO     | views.visual_dashboard:update_dashboard:1119 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:06.807 | INFO     | views.visual_dashboard:update_dashboard:1082 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:36:06.825 | INFO     | views.visual_dashboard:update_dashboard:1119 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:08.148 | INFO     | views.visual_dashboard:update_dashboard:1082 - Dashboard update triggered by: source-dropdown
2025-04-28 20:36:08.165 | INFO     | views.visual_dashboard:update_dashboard:1119 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:36:09.009 | INFO     | views.visual_dashboard:update_dashboard:1082 - Dashboard update triggered by: source-dropdown
2025-04-28 20:36:09.026 | INFO     | views.visual_dashboard:update_dashboard:1119 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:11.500 | INFO     | views.visual_dashboard:update_dashboard:1082 - Dashboard update triggered by: update-dashboard-button
2025-04-28 20:36:11.517 | INFO     | views.visual_dashboard:update_dashboard:1119 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:22.108 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:36:22.110 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:36:30.797 | INFO     | views.visual_dashboard:update_dashboard:1120 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:36:30.828 | INFO     | views.visual_dashboard:update_dashboard:1157 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:33.153 | INFO     | views.visual_dashboard:update_dashboard:1120 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:36:33.173 | INFO     | views.visual_dashboard:update_dashboard:1157 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:42.368 | INFO     | views.visual_dashboard:update_dashboard:1120 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:36:42.384 | INFO     | views.visual_dashboard:update_dashboard:1157 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:36:53.740 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:36:53.740 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:36:53.740 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:36:53.741 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:37:09.097 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:09.099 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:20.920 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:20.922 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:27.830 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:27.833 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:28.416 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:28.418 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:57.345 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:37:57.347 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:12.198 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:12.200 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:44.810 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:44.812 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:49.316 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:38:49.319 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:04.743 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:04.745 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:05.360 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:05.361 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:31.212 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:31.214 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:51.093 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:51.096 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:54.918 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:54.920 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:40:56.323 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:40:56.353 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:40:56.398 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:40:56.413 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:10.707 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:41:10.723 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:10.791 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:41:10.817 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:29.767 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:41:29.782 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:29.868 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:41:29.908 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:34.503 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:41:34.518 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:41:34.627 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:41:34.669 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:04.737 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:42:04.754 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:04.823 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:04.875 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:12.041 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: source-dropdown
2025-04-28 20:42:12.055 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:42:12.137 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:12.174 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:42:13.450 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:42:13.465 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:42:13.559 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:13.574 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:42:20.143 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: source-dropdown
2025-04-28 20:42:20.158 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:20.210 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:20.263 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:33.165 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:42:33.183 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:33.248 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:33.288 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:36.031 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: custom-indicators-store
2025-04-28 20:42:36.045 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:36.152 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:36.169 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:36.373 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: custom-indicators-store
2025-04-28 20:42:36.386 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:36.469 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:36.510 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:41.886 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:42:41.902 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:41.972 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:42.016 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:42.328 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:42:42.349 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:42.422 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:42.458 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:43.243 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:42:43.258 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:43.327 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:43.367 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:43.807 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:42:43.824 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:42:43.899 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:42:43.931 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 21:00:00'), 1: Timestamp('2025-03-29 22:00:00'), 2: Timestamp('2025-03-29 23:00:00'), 3: Timestamp('2025-03-30 00:00:00'), 4: Timestamp('2025-03-30 01:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4119.0, 4: 4119.0}}
2025-04-28 20:43:06.212 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: source-dropdown
2025-04-28 20:43:06.226 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:43:06.321 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:43:06.332 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:43:23.991 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: custom-indicators-store
2025-04-28 20:43:24.003 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:43:24.062 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:43:24.115 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:22.086 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:22.102 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:22.564 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:22.579 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:22.974 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:22.988 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:23.396 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:23.408 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:25.019 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:25.031 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:25.399 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:25.414 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:25.791 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:25.805 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:26.189 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:26.201 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:26.493 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:26.508 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:26.918 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:26.935 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:27.301 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:27.316 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:27.786 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:27.797 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:28.212 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:28.225 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:28.744 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:28.761 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:29.189 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:29.200 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:29.573 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:44:29.584 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:44:39.958 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 20:44:39.959 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 20:46:22.628 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:46:22.642 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:46:22.743 | INFO     | views.visual_dashboard:update_dashboard:1283 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:46:22.771 | INFO     | views.visual_dashboard:update_dashboard:1320 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:46:25.253 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:46:25.255 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:46:58.158 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:46:58.160 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:47:10.181 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:47:10.214 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:10.271 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:10.295 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:12.211 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:47:12.224 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:12.298 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:12.362 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:12.675 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:47:12.690 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:12.733 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:12.748 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:23.964 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:47:23.978 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:24.044 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:24.112 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:25.940 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:47:25.957 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:26.048 | INFO     | views.visual_dashboard:update_dashboard:1302 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:26.059 | INFO     | views.visual_dashboard:update_dashboard:1339 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:28.370 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:47:28.372 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:47:33.809 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 20:47:33.840 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:33.896 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:33.918 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:36.731 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:47:36.747 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:36.822 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:36.863 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:43.135 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: price-series-checklist
2025-04-28 20:47:43.153 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:47:43.228 | INFO     | views.visual_dashboard:update_dashboard:1342 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:47:43.280 | INFO     | views.visual_dashboard:update_dashboard:1379 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:48:02.375 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:02.378 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:16.233 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:16.235 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:49.147 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:49.149 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:57.918 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:48:57.920 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:49:35.922 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:49:35.925 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:50:02.812 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:50:02.814 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:50:22.693 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:50:22.695 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:52:50.982 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:52:50.984 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:52:51.604 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:52:51.606 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:52:53.975 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:52:54.001 | INFO     | views.visual_dashboard:update_dashboard:1392 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:52:54.066 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:52:54.139 | INFO     | views.visual_dashboard:update_dashboard:1392 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 20:53:04.318 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 20:53:04.339 | ERROR    | views.visual_dashboard:get_price_data:932 - Error getting price data: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
2025-04-28 20:53:04.399 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:53:04.412 | ERROR    | views.visual_dashboard:get_price_data:932 - Error getting price data: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
2025-04-28 20:53:49.828 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:53:49.833 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:54:17.311 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:54:17.339 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 20:54:17.347 | ERROR    | views.visual_dashboard:get_price_data:932 - Error getting price data: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
2025-04-28 20:54:17.364 | ERROR    | views.visual_dashboard:get_price_data:932 - Error getting price data: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
2025-04-28 20:54:17.439 | INFO     | views.visual_dashboard:update_dashboard:1353 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:54:17.451 | ERROR    | views.visual_dashboard:get_price_data:932 - Error getting price data: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
2025-04-28 20:54:21.902 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:54:21.905 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:55:05.848 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:55:05.851 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:59:20.994 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:59:20.996 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:59:21.582 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:59:21.584 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 20:59:24.860 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:59:24.861 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 20:59:24.861054, end_date=2025-04-28 20:59:24.861054, timeframe=1H
2025-04-28 20:59:24.892 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 20:59:24.895 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 20:59:24.895 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 20:59:24.895 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 20:59:24.932 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:59:24.932 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 20:59:24.932828, end_date=2025-04-28 20:59:24.932828, timeframe=1H
2025-04-28 20:59:24.948 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 20:59:24.950 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 20:59:24.951 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 20:59:24.951 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 20:59:25.112 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7561206a4ca0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 129059170264768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7561206a49d0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 129059170264768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 129059170264768)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 129059170264768)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 129059170264768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 48222)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x75611ff19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │    │                   │        └ ('127.0.0.1', 48222)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75611fc523b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560f08ccc10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75611fee13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560f08ccc10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7560f08ccc10>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7560f08ccc10>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7560f08c8dc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7560f0842f10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560f08c8430>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560f08c8430>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75611f70e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75611f70e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75611f70dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7560f14f84c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x75611f70e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7560f09d7480>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>
                   └ <function _invoke_callback at 0x75611f145ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7560f09891b0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1672, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7560f2316c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7560f24ed3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2479, in make_figure
    args = build_dataframe(args, constructor)
           │               │     └ <class 'plotly.graph_objs._scatter.Scatter'>
           │               └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_l...
           └ <function build_dataframe at 0x7560f24ed000>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1727, in build_dataframe
    df_output, wide_id_vars = process_args_into_dataframe(
                              └ <function process_args_into_dataframe at 0x7560f24ecf70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1328, in process_args_into_dataframe
    raise ValueError(err_msg)
                     └ "Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_pri...

ValueError: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
2025-04-28 20:59:25.110 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7561206a4ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129059195442880)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7561206a49d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129059195442880)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 129059195442880)>
    │    │        │    └ (<socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 129059195442880)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129059195442880)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 48274)
    │    │              └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x75611ff19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │    │                   │        └ ('127.0.0.1', 48274)
    │    │                   └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75611fc523b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ed766a40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75611fee13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ed766a40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7560ed766a40>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ed766a40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7560ed740c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7560f0843060>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560ed740af0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560ed740af0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x75611f70e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75611f70e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75611f70dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7560f14f84c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x75611f70e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7560f08bf6c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>
                   └ <function _invoke_callback at 0x75611f145ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7560f09891b0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1672, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7560f2316c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7560f24ed3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_l...
    └ <function apply_default_cascade at 0x7560f24ecb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_l...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7560f2444b30>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x75611f3b2d90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x75611f3b2d90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x75611f3b2e30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x75611f3b2d90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x75611f3b2e30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x75611f3db0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 20:59:32.786 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:59:32.786 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 20:59:32.786682, end_date=2025-04-28 20:59:32.786682, timeframe=1H
2025-04-28 20:59:32.804 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 20:59:32.806 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 20:59:32.806 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 20:59:32.806 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 20:59:32.931 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 20:59:32.949 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 20:59:32.949268, end_date=2025-04-28 20:59:32.949268, timeframe=1H
2025-04-28 20:59:32.862 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7561206a4ca0>
    └ <Thread(Thread-65 (process_request_thread), started daemon 129058666968768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7561206a49d0>
    └ <Thread(Thread-65 (process_request_thread), started daemon 129058666968768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-65 (process_request_thread), started daemon 129058666968768)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-65 (process_request_thread), started daemon 129058666968768)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>>
    └ <Thread(Thread-65 (process_request_thread), started daemon 129058666968768)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 55388)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x75611ff19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │    │                   │        └ ('127.0.0.1', 55388)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75611fc523b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560efc7fdc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75611fee13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560efc7fdc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7560efc7fdc0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7560efc7fdc0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7560efae9c60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7560efcdd0e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560efae9870>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560efae9870>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x75611f70e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75611f70e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75611f70dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7560f14f84c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x75611f70e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7560efa8e440>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>
                   └ <function _invoke_callback at 0x75611f145ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7560f09891b0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1672, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7560f2316c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7560f24ed3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2479, in make_figure
    args = build_dataframe(args, constructor)
           │               │     └ <class 'plotly.graph_objs._scatter.Scatter'>
           │               └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_l...
           └ <function build_dataframe at 0x7560f24ed000>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1727, in build_dataframe
    df_output, wide_id_vars = process_args_into_dataframe(
                              └ <function process_args_into_dataframe at 0x7560f24ecf70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1328, in process_args_into_dataframe
    raise ValueError(err_msg)
                     └ "Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_pri...

ValueError: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
2025-04-28 20:59:32.986 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 20:59:32.987 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 20:59:32.987 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 20:59:32.987 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 20:59:33.032 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7561206a4ca0>
    └ <Thread(Thread-71 (process_request_thread), started daemon 129059160823488)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7561206a49d0>
    └ <Thread(Thread-71 (process_request_thread), started daemon 129059160823488)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-71 (process_request_thread), started daemon 129059160823488)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-71 (process_request_thread), started daemon 129059160823488)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>>
    └ <Thread(Thread-71 (process_request_thread), started daemon 129059160823488)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 55436)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x75611ff19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │    │                   │        └ ('127.0.0.1', 55436)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75611fc523b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ef920e50>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75611fee13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ef920e50>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7560ef920e50>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7560f0864c10>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7560ef920e50>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7560efc6add0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7560ef907610>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560efc6ae60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7560f08312d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7560efc6ae60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75611f70e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75611f70e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75611f70dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7560f14f84c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x75611f70e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7560ef928980>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>
                   └ <function _invoke_callback at 0x75611f145ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7560f098bd90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7560f09891b0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1672, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7560f2316c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7560f24ed3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2479, in make_figure
    args = build_dataframe(args, constructor)
           │               │     └ <class 'plotly.graph_objs._scatter.Scatter'>
           │               └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_l...
           └ <function build_dataframe at 0x7560f24ed000>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1727, in build_dataframe
    df_output, wide_id_vars = process_args_into_dataframe(
                              └ <function process_args_into_dataframe at 0x7560f24ecf70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1328, in process_args_into_dataframe
    raise ValueError(err_msg)
                     └ "Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_pri...

ValueError: Value of 'y' is not the name of a column in 'data_frame'. Expected one of ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'sma_10', 'sma_20', 'sma_50', 'ema_10', 'ema_20', 'ema_50', 'bb_middle', 'bb_stddev', 'bb_upper', 'bb_lower', 'price_change', 'gain', 'loss', 'avg_gain', 'avg_loss', 'rs', 'rsi', 'ema_12', 'ema_26', 'macd_line', 'macd_signal', 'macd_histogram'] but received: volatility
2025-04-28 21:00:02.504 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:00:02.506 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:00:19.301 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:00:19.303 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:00:20.641 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:00:20.641 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:00:20.641420, end_date=2025-04-28 21:00:20.641420, timeframe=1H
2025-04-28 21:00:20.672 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:00:20.674 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:00:20.674 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:00:20.674 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:00:20.715 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:00:20.716 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:00:20.716433, end_date=2025-04-28 21:00:20.716433, timeframe=1H
2025-04-28 21:00:20.740 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:00:20.742 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:00:20.742 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:00:20.742 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:00:20.901 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70419eca4ca0>
    └ <Thread(Thread-30 (process_request_thread), started daemon 123426318571200)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70419eca49d0>
    └ <Thread(Thread-30 (process_request_thread), started daemon 123426318571200)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 123426318571200)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 123426318571200)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70416efff580>>
    └ <Thread(Thread-30 (process_request_thread), started daemon 123426318571200)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39308)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x70419e519900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70416efff580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70416efff580>
    │    │                   │        └ ('127.0.0.1', 39308)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70416efff580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70419e2823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70416efc30d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70419e4e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70416efc30d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70416efc30d0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x70416ee51f90>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70416efff580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70416efc30d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70416eec9120>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x70416eea7a00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70416eec9090>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x70416ee51f90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70416eec9090>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70419dd2a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70419dd2a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70419dd29fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70416fb144c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x70419dd2a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x70416ee11b40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x70416eeb8dc0>
                   └ <function _invoke_callback at 0x70419d74dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['low', 'open', 'high', 'close'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x70416eeb8dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x70416ef81360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1697, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x70417092ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x704170b013f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
    └ <function apply_default_cascade at 0x704170b00b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x704170a58b80>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x70419d98eed0>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x70419d98eed0>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x70419d98ef70>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x70419d98eed0>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x70419d98ef70>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x70419d9eb0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:01:30.832 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:01:30.833 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:01:30.833 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:01:30.833 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:01:34.425 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:34.426 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:34.426213, end_date=2025-04-28 21:01:34.426213, timeframe=1H
2025-04-28 21:01:34.441 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:34.443 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:34.443 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:34.443 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:34.510 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:34.510 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:34.510931, end_date=2025-04-28 21:01:34.510931, timeframe=1H
2025-04-28 21:01:34.556 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:34.577 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:34.577 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:34.578 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:37.168 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:01:37.168 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:37.168884, end_date=2025-04-28 21:01:37.168884, timeframe=1H
2025-04-28 21:01:37.187 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:37.188 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:37.188 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:37.188 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:37.267 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:37.273 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:37.273195, end_date=2025-04-28 21:01:37.273195, timeframe=1H
2025-04-28 21:01:37.307 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:37.308 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:37.308 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:37.308 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:37.603 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:01:37.604 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:37.604298, end_date=2025-04-28 21:01:37.604298, timeframe=1H
2025-04-28 21:01:37.625 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:37.626 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:37.626 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:37.627 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:37.687 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:37.687 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:37.687955, end_date=2025-04-28 21:01:37.687955, timeframe=1H
2025-04-28 21:01:37.737 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:37.740 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:37.741 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:37.743 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:38.155 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:01:38.155 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:38.155504, end_date=2025-04-28 21:01:38.155504, timeframe=1H
2025-04-28 21:01:38.172 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:38.177 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:38.178 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:38.178 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:38.258 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:38.268 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:38.268648, end_date=2025-04-28 21:01:38.268648, timeframe=1H
2025-04-28 21:01:38.302 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:38.304 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:38.304 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:38.304 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:41.656 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:01:41.656 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:41.656575, end_date=2025-04-28 21:01:41.656575, timeframe=1H
2025-04-28 21:01:41.674 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:41.677 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:41.677 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:41.677 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:41.733 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:41.733 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:41.733862, end_date=2025-04-28 21:01:41.733862, timeframe=1H
2025-04-28 21:01:41.786 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:41.789 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:41.789 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:41.789 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:45.208 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:45.209 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:45.209552, end_date=2025-04-28 21:01:45.209552, timeframe=1H
2025-04-28 21:01:45.224 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:45.227 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:45.227269, end_date=2025-04-28 21:01:45.227269, timeframe=1H
2025-04-28 21:01:45.236 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:45.238 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:45.238 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:45.238 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:45.280 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:45.286 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:45.286 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:45.286 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:45.307 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:45.319 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:45.319571, end_date=2025-04-28 21:01:45.319571, timeframe=1H
2025-04-28 21:01:45.405 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:45.435 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:45.438 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:45.446 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:48.225 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:48.225 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:48.225488, end_date=2025-04-28 21:01:48.225488, timeframe=1H
2025-04-28 21:01:48.244 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:48.249 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:48.249 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:48.249678, end_date=2025-04-28 21:01:48.249678, timeframe=1H
2025-04-28 21:01:48.252 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:48.253 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:48.253 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:48.273 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:48.277 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:48.278 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:48.283 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:48.347 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:48.355 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:48.355338, end_date=2025-04-28 21:01:48.355338, timeframe=1H
2025-04-28 21:01:48.411 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:48.429 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:48.446 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:48.466 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:53.093 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:53.094 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:53.094204, end_date=2025-04-28 21:01:53.094204, timeframe=1H
2025-04-28 21:01:53.109 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:53.113 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:53.113 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:53.113 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:53.194 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:53.199 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:53.199598, end_date=2025-04-28 21:01:53.199598, timeframe=1H
2025-04-28 21:01:53.234 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:53.235 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:53.235 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:53.235 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:55.537 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:55.537 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:55.537657, end_date=2025-04-28 21:01:55.537657, timeframe=1H
2025-04-28 21:01:55.553 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:55.556 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:55.557 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:55.557182, end_date=2025-04-28 21:01:55.557182, timeframe=1H
2025-04-28 21:01:55.558 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:55.560 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:55.560 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:55.587 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:55.593 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:55.622 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:55.631 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:55.668 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:55.677 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:55.677410, end_date=2025-04-28 21:01:55.677410, timeframe=1H
2025-04-28 21:01:55.752 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:55.757 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:55.757 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:55.757 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:55.965 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:55.967 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:55.967952, end_date=2025-04-28 21:01:55.967952, timeframe=1H
2025-04-28 21:01:55.968 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:55.970 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:55.970951, end_date=2025-04-28 21:01:55.970951, timeframe=1H
2025-04-28 21:01:56.008 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:56.010 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:56.011 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:56.012 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:56.013 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:56.013 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:56.013 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:56.016 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:56.050 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:56.063 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:56.063682, end_date=2025-04-28 21:01:56.063682, timeframe=1H
2025-04-28 21:01:56.174 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:56.181 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:56.181 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:56.181 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:56.985 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:56.986 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:56.986560, end_date=2025-04-28 21:01:56.986560, timeframe=1H
2025-04-28 21:01:57.004 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:57.005 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:57.005 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:57.006 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:57.068 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:57.069 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:57.068994, end_date=2025-04-28 21:01:57.068994, timeframe=1H
2025-04-28 21:01:57.114 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:57.116 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:57.117 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:57.117 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:57.685 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:57.685 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:57.685231, end_date=2025-04-28 21:01:57.685231, timeframe=1H
2025-04-28 21:01:57.700 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:57.702 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:57.702 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:57.702 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:57.707 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:57.708 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:57.708402, end_date=2025-04-28 21:01:57.708402, timeframe=1H
2025-04-28 21:01:57.779 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:57.790 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:57.793 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:57.792965, end_date=2025-04-28 21:01:57.792965, timeframe=1H
2025-04-28 21:01:57.796 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:57.800 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:57.802 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:57.866 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:57.870 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:57.874 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:57.874 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:58.449 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:58.450 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:58.450655, end_date=2025-04-28 21:01:58.450655, timeframe=1H
2025-04-28 21:01:58.470 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:58.471 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:58.471 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:58.471 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:58.561 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:58.569 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:58.569651, end_date=2025-04-28 21:01:58.569651, timeframe=1H
2025-04-28 21:01:58.590 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:58.603 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:58.603 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:58.603 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:58.784 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:58.784 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:58.784814, end_date=2025-04-28 21:01:58.784814, timeframe=1H
2025-04-28 21:01:58.805 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:58.806 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:58.807 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:58.807036, end_date=2025-04-28 21:01:58.807036, timeframe=1H
2025-04-28 21:01:58.819 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:58.823 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:58.823 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:58.839 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:58.849 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:58.852 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:58.853 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:58.872 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:58.885 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:58.885271, end_date=2025-04-28 21:01:58.885271, timeframe=1H
2025-04-28 21:01:59.029 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.049 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.051 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.054 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:59.057 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:59.060 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:59.060555, end_date=2025-04-28 21:01:59.060555, timeframe=1H
2025-04-28 21:01:59.087 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:01:59.110 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:59.110702, end_date=2025-04-28 21:01:59.110702, timeframe=1H
2025-04-28 21:01:59.150 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.182 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.183 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.184 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:59.189 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:59.206 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:59.206608, end_date=2025-04-28 21:01:59.206608, timeframe=1H
2025-04-28 21:01:59.273 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.278 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.284 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.286 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.316 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.317 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:59.296 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.326 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:59.824 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:01:59.824 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:59.824407, end_date=2025-04-28 21:01:59.824407, timeframe=1H
2025-04-28 21:01:59.842 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.844 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.844 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.844 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:01:59.932 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:01:59.935 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:01:59.935409, end_date=2025-04-28 21:01:59.935409, timeframe=1H
2025-04-28 21:01:59.958 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:01:59.961 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:01:59.962 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:01:59.962 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:02.790 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:02:02.791 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:02.790979, end_date=2025-04-28 21:02:02.790979, timeframe=1H
2025-04-28 21:02:02.807 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:02.808 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:02.808 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:02.808 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:02.867 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:02.867 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:02.867316, end_date=2025-04-28 21:02:02.867316, timeframe=1H
2025-04-28 21:02:02.907 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:02.918 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:02.918 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:02.918 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:04.070 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:02:04.072 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:02:04.100 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:02:04.101 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:04.101235, end_date=2025-04-28 21:02:04.101235, timeframe=1H
2025-04-28 21:02:04.131 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:04.132 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:04.132 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:04.132 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:04.149 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:04.163 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:04.163060, end_date=2025-04-28 21:02:04.163060, timeframe=1H
2025-04-28 21:02:04.191 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:04.193 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:04.193 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:04.194 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:04.366 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7d8f4d4a4ca0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138053519660736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7d8f4d4a49d0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138053519660736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 138053519660736)>
    │    │        │    └ (<socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 138053519660736)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7d8f1d61b550>>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138053519660736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39734)
    │    │              └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7d8f4cd19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d8f1d61b550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d8f1d61b550>
    │    │                   │        └ ('127.0.0.1', 39734)
    │    │                   └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d8f1d61b550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7d8f4ca523b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7d8f1c5993f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7d8f4cce13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7d8f1c5993f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7d8f1c5993f0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7d8f1d66df60>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d8f1d61b550>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7d8f1c5993f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7d8f1c54cc10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7d8f1d6a21f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7d8f1c54cb80>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7d8f1d66df60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7d8f1c54cb80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7d8f4c4f6830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7d8f4c4f6050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7d8f4c4f5fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7d8f1e2fc4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7d8f4c4f6200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7d8f1c5467c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10'], [], ['rsi'], {'m...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7d8f1d6b4ca0>
                   └ <function _invoke_callback at 0x7d8f4bf2dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10'], [], ['rsi'], {'m...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7d8f1d6b4ca0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7d8f1d7a1360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1697, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7d8f1f116c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7d8f1f2e53f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
    └ <function apply_default_cascade at 0x7d8f1f2e4b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7d8f1f2409a0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7d8f4c19ad90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7d8f4c19ad90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7d8f4c19ae30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7d8f4c19ad90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7d8f4c19ae30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7d8f4c1c30a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:02:05.230 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:02:05.230 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:05.230656, end_date=2025-04-28 21:02:05.230656, timeframe=1H
2025-04-28 21:02:05.248 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:05.250 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:05.250 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:05.250 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:05.302 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:05.312 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:05.312783, end_date=2025-04-28 21:02:05.312783, timeframe=1H
2025-04-28 21:02:05.346 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:05.358 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:05.358 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:05.360 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:06.194 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:02:06.194 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:06.194488, end_date=2025-04-28 21:02:06.194488, timeframe=1H
2025-04-28 21:02:06.210 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:06.212 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:06.213 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:06.213 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:06.302 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:06.302 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:06.302335, end_date=2025-04-28 21:02:06.302335, timeframe=1H
2025-04-28 21:02:06.335 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:06.336 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:06.336 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:06.336 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:51.412 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:02:51.412 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:51.412669, end_date=2025-04-28 21:02:51.412669, timeframe=1H
2025-04-28 21:02:51.484 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:51.492 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:51.492 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:51.492 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:51.544 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:51.544 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:51.544944, end_date=2025-04-28 21:02:51.544944, timeframe=1H
2025-04-28 21:02:51.571 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:51.588 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:51.589 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:51.589 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:52.105 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:02:52.105 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:52.105711, end_date=2025-04-28 21:02:52.105711, timeframe=1H
2025-04-28 21:02:52.120 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:52.121 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:52.124 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:52.124 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:52.203 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:52.217 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:52.217499, end_date=2025-04-28 21:02:52.217499, timeframe=1H
2025-04-28 21:02:52.247 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:52.266 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:52.266 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:52.266 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:52.517 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:02:52.518 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:52.518005, end_date=2025-04-28 21:02:52.518005, timeframe=1H
2025-04-28 21:02:52.537 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:52.538 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:52.538 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:52.538 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:52.626 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:52.626 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:52.626476, end_date=2025-04-28 21:02:52.626476, timeframe=1H
2025-04-28 21:02:52.659 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:52.660 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:52.660 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:52.660 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:53.507 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:02:53.507 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:53.507444, end_date=2025-04-28 21:02:53.507444, timeframe=1H
2025-04-28 21:02:53.523 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:53.524 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:53.527 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:53.527 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:53.585 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:53.586 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:53.586199, end_date=2025-04-28 21:02:53.586199, timeframe=1H
2025-04-28 21:02:53.640 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:53.643 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:53.645 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:53.645 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:54.387 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:02:54.387 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:54.387500, end_date=2025-04-28 21:02:54.387500, timeframe=1H
2025-04-28 21:02:54.407 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:54.409 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:54.409 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:54.409 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:02:54.462 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:02:54.467 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:02:54.467717, end_date=2025-04-28 21:02:54.467717, timeframe=1H
2025-04-28 21:02:54.520 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:02:54.528 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:02:54.528 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:02:54.528 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:20.343 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:03:20.346 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:03:39.780 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:03:39.780 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:39.780860, end_date=2025-04-28 21:03:39.780860, timeframe=1H
2025-04-28 21:03:39.815 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:39.818 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:39.818 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:39.818 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:39.881 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:39.881 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:39.881328, end_date=2025-04-28 21:03:39.881328, timeframe=1H
2025-04-28 21:03:39.896 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:39.898 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:39.898 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:39.898 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:40.057 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x791546da8ca0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 133131101271744)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x791546da89d0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 133131101271744)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 133131101271744)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 133131101271744)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x791517a67550>>
    └ <Thread(Thread-9 (process_request_thread), started daemon 133131101271744)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 33188)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x79154661d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x791517a67550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x791517a67550>
    │    │                   │        └ ('127.0.0.1', 33188)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x791517a67550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7915463563b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79151447dd20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7915465e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79151447dd20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x79151447dd20>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x791516f41f60>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x791517a67550>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x79151447dd20>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x791514473640>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x791516f97e60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x791514471c60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x791516f41f60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x791514471c60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x791545e12830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x791545e12050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x791545e11fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x791517bd4940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x791545e12200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x791515e1b240>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10', 'sma_20'], [], ['...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x791516fa4ca0>
                   └ <function _invoke_callback at 0x791545849ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10', 'sma_20'], [], ['...
           └ <function register_callbacks.<locals>.update_dashboard at 0x791516fa4ca0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7915179ed360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1697, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x791518a1ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x791518bf53f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
    └ <function apply_default_cascade at 0x791518bf4b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price  ...       ema_26  macd_line macd_sign...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x791518b4cb30>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x791545ab6d90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x791545ab6d90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x791545ab6e30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x791545ab6d90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x791545ab6e30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x791545adf0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:03:40.759 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:03:40.760 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:40.760212, end_date=2025-04-28 21:03:40.760212, timeframe=1H
2025-04-28 21:03:40.780 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:40.782 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:40.782 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:40.782 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:40.847 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:40.848 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:40.848691, end_date=2025-04-28 21:03:40.848691, timeframe=1H
2025-04-28 21:03:40.898 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:40.912 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:40.912 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:40.912 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:41.422 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:03:41.422 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:41.422774, end_date=2025-04-28 21:03:41.422774, timeframe=1H
2025-04-28 21:03:41.439 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:41.441 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:41.441 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:41.441 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:41.530 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:41.532 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:41.532475, end_date=2025-04-28 21:03:41.532475, timeframe=1H
2025-04-28 21:03:41.581 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:41.591 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:41.599 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:41.600 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:43.912 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:03:43.912 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:43.912903, end_date=2025-04-28 21:03:43.912903, timeframe=1H
2025-04-28 21:03:43.930 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:43.939 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:43.940 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:43.940 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:44.016 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:44.016 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:44.016586, end_date=2025-04-28 21:03:44.016586, timeframe=1H
2025-04-28 21:03:44.159 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:44.173 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:44.174 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:44.174 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:44.821 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:03:44.821 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:44.821379, end_date=2025-04-28 21:03:44.821379, timeframe=1H
2025-04-28 21:03:44.837 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:44.842 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:44.846 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:44.846 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:44.910 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:44.928 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:44.928659, end_date=2025-04-28 21:03:44.928659, timeframe=1H
2025-04-28 21:03:44.960 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:44.963 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:44.970 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:44.970 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:45.615 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:03:45.615 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:45.615220, end_date=2025-04-28 21:03:45.615220, timeframe=1H
2025-04-28 21:03:45.636 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:45.638 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:45.639 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:45.639 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:45.697 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:45.698 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:45.698413, end_date=2025-04-28 21:03:45.698413, timeframe=1H
2025-04-28 21:03:45.744 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:45.746 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:45.757 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:45.759 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:48.394 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:03:48.396 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:03:54.960 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:03:54.961 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:54.961415, end_date=2025-04-28 21:03:54.961415, timeframe=1H
2025-04-28 21:03:54.999 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:55.000 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:55.000 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:55.000 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:55.045 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:55.046 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:55.046110, end_date=2025-04-28 21:03:55.046110, timeframe=1H
2025-04-28 21:03:55.064 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:55.065 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:55.065 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:55.065 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:55.260 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x79b584fa8ca0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x79b584fa89d0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 133819638216384)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 133819638216384)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 56020)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x79b58481d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │    │                   │        └ ('127.0.0.1', 56020)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x79b5845c63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b555c8ffd0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x79b5847e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b555c8ffd0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x79b555c8ffd0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x79b555c8ffd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x79b55516b0a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x79b555192f80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b55516b130>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b55516b130>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x79b584066830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x79b584066050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x79b584065fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x79b555e34940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x79b584066200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x79b555ca99c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open'], ['sma_10', 'ema_10'], [], ['rs...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>
                   └ <function _invoke_callback at 0x79b583a89ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open'], ['sma_10', 'ema_10'], [], ['rs...
           └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1508, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x79b555c51360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1703, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x79b556c5ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x79b556e2d3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x79b556e2cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x79b556d889f0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x79b583d02c50>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x79b583d02c50>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x79b583d02cf0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x79b583d02c50>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x79b583d02cf0>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x79b583d270a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:03:55.629 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:03:55.629 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:55.629520, end_date=2025-04-28 21:03:55.629520, timeframe=1H
2025-04-28 21:03:55.648 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:55.650 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:55.653 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:55.653 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:55.694 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:55.695 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:55.695060, end_date=2025-04-28 21:03:55.695060, timeframe=1H
2025-04-28 21:03:55.734 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:55.736 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:55.741 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:55.754 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:57.150 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:03:57.151 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:57.151277, end_date=2025-04-28 21:03:57.151277, timeframe=1H
2025-04-28 21:03:57.168 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:57.169 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:57.169 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:57.169 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:57.234 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:57.238 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:57.238050, end_date=2025-04-28 21:03:57.238050, timeframe=1H
2025-04-28 21:03:57.286 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:57.287 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:57.289 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:57.289 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:57.728 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:03:57.728 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:57.728877, end_date=2025-04-28 21:03:57.728877, timeframe=1H
2025-04-28 21:03:57.741 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:57.743 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:57.743 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:57.743 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:03:57.900 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:03:57.912 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:03:57.912091, end_date=2025-04-28 21:03:57.912091, timeframe=1H
2025-04-28 21:03:57.953 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:03:57.959 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:03:57.959 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:03:57.959 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:01.145 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:04:01.145 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:01.145326, end_date=2025-04-28 21:04:01.145326, timeframe=1H
2025-04-28 21:04:01.163 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:01.167 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:01.167 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:01.167 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:01.198 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_histogram_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x79b584fa8ca0>
    └ <Thread(Thread-36 (process_request_thread), started daemon 133819714758336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x79b584fa89d0>
    └ <Thread(Thread-36 (process_request_thread), started daemon 133819714758336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 133819714758336)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 133819714758336)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>>
    └ <Thread(Thread-36 (process_request_thread), started daemon 133819714758336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 58182)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x79b58481d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │    │                   │        └ ('127.0.0.1', 58182)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x79b5845c63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54e4e8e20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x79b5847e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54e4e8e20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x79b54e4e8e20>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54e4e8e20>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x79b54e069510>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x79b54e1f0350>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b54e01dbd0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b54e01dbd0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x79b584066830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x79b584066050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x79b584065fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x79b555e34940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x79b584066200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x79b555ca99c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>
                   └ <function _invoke_callback at 0x79b583a89ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
           └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1491, in update_dashboard
    main_fig = create_histogram_chart(df)
                                      └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_histogram_chart' is not defined
2025-04-28 21:04:01.256 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:04:01.256 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:01.256769, end_date=2025-04-28 21:04:01.256769, timeframe=1H
2025-04-28 21:04:01.273 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:01.275 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:01.276 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:01.276 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:01.299 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_histogram_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x79b584fa8ca0>
    └ <Thread(Thread-42 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x79b584fa89d0>
    └ <Thread(Thread-42 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-42 (process_request_thread), started daemon 133819638216384)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-42 (process_request_thread), started daemon 133819638216384)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>>
    └ <Thread(Thread-42 (process_request_thread), started daemon 133819638216384)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 58256)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x79b58481d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │    │                   │        └ ('127.0.0.1', 58256)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x79b5845c63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54d98c2b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x79b5847e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54d98c2b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x79b54d98c2b0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x79b555ccb580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x79b54d98c2b0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x79b54d957eb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x79b54e1f0350>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b54d9557e0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x79b55514ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x79b54d9557e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x79b584066830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x79b584066050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x79b584065fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x79b555e34940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x79b584066200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x79b54d891180>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>
                   └ <function _invoke_callback at 0x79b583a89ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
           └ <function register_callbacks.<locals>.update_dashboard at 0x79b5551a8dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1491, in update_dashboard
    main_fig = create_histogram_chart(df)
                                      └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_histogram_chart' is not defined
2025-04-28 21:04:13.406 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:13.409 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:13.436 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:04:13.437 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:13.437150, end_date=2025-04-28 21:04:13.437150, timeframe=1H
2025-04-28 21:04:13.473 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:13.477 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:13.477 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:13.478 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:13.481 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:04:13.482 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:13.482012, end_date=2025-04-28 21:04:13.482012, timeframe=1H
2025-04-28 21:04:13.503 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:13.505 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:13.506 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:13.506 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:13.524 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_box_plot_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7823a68a4ca0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 132093684205248)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7823a68a49d0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 132093684205248)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 132093684205248)>
    │    │        │    └ (<socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 132093684205248)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 132093684205248)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 40664)
    │    │              └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7823a6119900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │    │                   │        └ ('127.0.0.1', 40664)
    │    │                   └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7823a5e823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x782376bbacb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7823a60e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x782376bbacb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x782376bbacb0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x782376bbacb0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x782376a6b910>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x782376a96f10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782376a6b880>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782376a6b880>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7823a592a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7823a592a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7823a5929fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x782377718940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7823a592a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x782376ac7a40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>
                   └ <function _invoke_callback at 0x7823a534dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1493, in update_dashboard
    main_fig = create_box_plot_chart(df)
                                     └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_box_plot_chart' is not defined
2025-04-28 21:04:13.590 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_box_plot_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7823a68a4ca0>
    └ <Thread(Thread-10 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7823a68a49d0>
    └ <Thread(Thread-10 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 132093455623872)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 132093455623872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>>
    └ <Thread(Thread-10 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 40702)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7823a6119900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │    │                   │        └ ('127.0.0.1', 40702)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7823a5e823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x782374955840>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7823a60e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x782374955840>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x782374955840>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x782374955840>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x782374920700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x782376a974c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374921000>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374921000>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7823a592a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7823a592a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7823a5929fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x782377718940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7823a592a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x782376abf240>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>
                   └ <function _invoke_callback at 0x7823a534dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1493, in update_dashboard
    main_fig = create_box_plot_chart(df)
                                     └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_box_plot_chart' is not defined
2025-04-28 21:04:19.045 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:04:19.045 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:19.045945, end_date=2025-04-28 21:04:19.045945, timeframe=1H
2025-04-28 21:04:19.063 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:19.066 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:19.067 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:19.067 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:19.093 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7823a68a4ca0>
    └ <Thread(Thread-13 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7823a68a49d0>
    └ <Thread(Thread-13 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 132093455623872)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 132093455623872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>>
    └ <Thread(Thread-13 (process_request_thread), started daemon 132093455623872)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 40730)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7823a6119900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │    │                   │        └ ('127.0.0.1', 40730)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7823a5e823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7823749560e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7823a60e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7823749560e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7823749560e0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7823749560e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x782376a6b130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x782376a974c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374920700>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374920700>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7823a592a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7823a592a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7823a5929fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x782377718940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7823a592a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x782376a56d00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>
                   └ <function _invoke_callback at 0x7823a534dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1495, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:04:19.187 | INFO     | views.visual_dashboard:update_dashboard:1362 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:04:19.188 | INFO     | views.visual_dashboard:update_dashboard:1424 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:19.188059, end_date=2025-04-28 21:04:19.188059, timeframe=1H
2025-04-28 21:04:19.202 | INFO     | views.visual_dashboard:get_price_data:936 - Returning dataframe with 623 rows
2025-04-28 21:04:19.203 | INFO     | views.visual_dashboard:update_dashboard:1465 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:19.203 | INFO     | views.visual_dashboard:update_dashboard:1466 - DataFrame shape: (623, 6)
2025-04-28 21:04:19.204 | INFO     | views.visual_dashboard:update_dashboard:1467 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:19.225 | ERROR    | views.visual_dashboard:update_dashboard:1526 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7823a68a4ca0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 132093464016576)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7823a68a49d0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 132093464016576)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 132093464016576)>
    │    │        │    └ (<socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 132093464016576)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>>
    └ <Thread(Thread-19 (process_request_thread), started daemon 132093464016576)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 40798)
    │    │              └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7823a6119900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │    │                   │        └ ('127.0.0.1', 40798)
    │    │                   └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7823a5e823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7823a5267eb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7823a60e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7823a5267eb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7823a5267eb0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x782376bf7580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7823a5267eb0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x782374920670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x782376a96650>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374921240>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x782376a49e40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x782374921240>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7823a592a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7823a592a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7823a5929fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x782377718940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7823a592a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x782374780f00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>
                   └ <function _invoke_callback at 0x7823a534dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x782376aa4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1495, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:04:45.354 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:45.357 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:53.189 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:53.191 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:04:54.763 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:04:54.763 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:54.763897, end_date=2025-04-28 21:04:54.763897, timeframe=1H
2025-04-28 21:04:54.792 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:04:54.794 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:54.794 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:04:54.795 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:54.821 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 136566991214272)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 136566991214272)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39784)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 39784)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a45ae30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a45ae30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c350a45ae30>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a45ae30>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c350996bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c35099973e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c350996b010>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c350996b010>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c35099ce6c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:04:55.183 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:04:55.184 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:04:55.184297, end_date=2025-04-28 21:04:55.184297, timeframe=1H
2025-04-28 21:04:55.201 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:04:55.203 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:04:55.203 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:04:55.203 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:04:55.232 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 136567007999680)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 136567007999680)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39854)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 39854)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a458be0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a458be0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c350a458be0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c350a458be0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c350996bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb7a1000>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c35099c4430>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c35099c4430>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c3509903240>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:05:00.810 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:00.811 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:00.811157, end_date=2025-04-28 21:05:00.811157, timeframe=1H
2025-04-28 21:05:00.833 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:00.836 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:00.836 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:00.837 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:00.924 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:00.924 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:00.924969, end_date=2025-04-28 21:05:00.924969, timeframe=1H
2025-04-28 21:05:00.938 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:00.940 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:00.940 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:00.940 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:01.082 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-32 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-32 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-32 (process_request_thread), started daemon 136567218755264)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-32 (process_request_thread), started daemon 136567218755264)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-32 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 54802)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 54802)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa7740a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa7740a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa7740a0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa7740a0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb646a70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb7a1000>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb646b00>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb646b00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c35099ef280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1511, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7c350a41d360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1706, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7c350b42ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7c350b6013f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x7c350b600b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7c350b558b30>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7c35384cac00>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7c35384cac00>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7c35384caca0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7c35384cac00>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7c35384caca0>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7c35384ef0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:05:13.468 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:13.469 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:13.469180, end_date=2025-04-28 21:05:13.469180, timeframe=1H
2025-04-28 21:05:13.484 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:13.486 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:13.486 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:13.486 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:13.507 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_histogram_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-43 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-43 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-43 (process_request_thread), started daemon 136566991214272)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-43 (process_request_thread), started daemon 136566991214272)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-43 (process_request_thread), started daemon 136566991214272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42944)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 42944)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb556830>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb556830>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb556830>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb556830>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb18dea0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb1205f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb18df30>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb18df30>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c34fb5401c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1494, in update_dashboard
    main_fig = create_histogram_chart(df)
                                      └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_histogram_chart' is not defined
2025-04-28 21:05:13.570 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:13.570 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:13.570879, end_date=2025-04-28 21:05:13.570879, timeframe=1H
2025-04-28 21:05:13.587 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:13.589 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:13.589 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:13.589 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:13.611 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_histogram_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-49 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-49 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-49 (process_request_thread), started daemon 136567007999680)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-49 (process_request_thread), started daemon 136567007999680)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-49 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42992)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 42992)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5548e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5548e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5548e0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5548e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fa291c60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb120820>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb184af0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb184af0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c350a7f6600>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'histogram', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'],...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1494, in update_dashboard
    main_fig = create_histogram_chart(df)
                                      └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_histogram_chart' is not defined
2025-04-28 21:05:19.032 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:19.032 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:19.032666, end_date=2025-04-28 21:05:19.032666, timeframe=1H
2025-04-28 21:05:19.051 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:19.054 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:19.054 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:19.054 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:19.083 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_box_plot_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-52 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-52 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-52 (process_request_thread), started daemon 136566975481536)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-52 (process_request_thread), started daemon 136566975481536)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-52 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 43020)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 43020)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa11f640>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa11f640>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa11f640>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa11f640>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb534310>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fa3561f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fa2cbe20>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fa2cbe20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c35099fff00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1496, in update_dashboard
    main_fig = create_box_plot_chart(df)
                                     └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_box_plot_chart' is not defined
2025-04-28 21:05:19.146 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:19.146 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:19.146766, end_date=2025-04-28 21:05:19.146766, timeframe=1H
2025-04-28 21:05:19.160 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:19.161 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:19.161 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:19.161 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:19.185 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_box_plot_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-58 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-58 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-58 (process_request_thread), started daemon 136566975481536)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-58 (process_request_thread), started daemon 136566975481536)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-58 (process_request_thread), started daemon 136566975481536)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 43070)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 43070)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa2e2500>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa2e2500>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa2e2500>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa2e2500>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb646f80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fa3561f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb645ea0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb645ea0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c350a427480>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'box_plot', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1496, in update_dashboard
    main_fig = create_box_plot_chart(df)
                                     └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_box_plot_chart' is not defined
2025-04-28 21:05:26.016 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:26.016 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:26.016154, end_date=2025-04-28 21:05:26.016154, timeframe=1H
2025-04-28 21:05:26.034 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:26.036 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:26.036 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:26.036 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:26.060 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-61 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-61 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-61 (process_request_thread), started daemon 136567218755264)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-61 (process_request_thread), started daemon 136567218755264)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-61 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 47720)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 47720)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa1caef0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa1caef0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa1caef0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fa1caef0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb184af0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb120660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb1edc60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb1edc60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c350a7f6600>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:05:26.115 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:26.115 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:26.115722, end_date=2025-04-28 21:05:26.115722, timeframe=1H
2025-04-28 21:05:26.132 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:26.133 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:26.133 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:26.133 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:26.157 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_candlestick_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-67 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-67 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-67 (process_request_thread), started daemon 136567218755264)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-67 (process_request_thread), started daemon 136567218755264)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-67 (process_request_thread), started daemon 136567218755264)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 47774)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 47774)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5579a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5579a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5579a0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb5579a0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb184af0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb120660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb646f80>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb646f80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c34fa2f7680>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_candlestick_chart(df, price_series)
                                        │   └ ['close', 'open', 'high']
                                        └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_candlestick_chart' is not defined
2025-04-28 21:05:48.136 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:48.136 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:48.136352, end_date=2025-04-28 21:05:48.136352, timeframe=1H
2025-04-28 21:05:48.151 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:48.154 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:48.154 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:48.154 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:48.177 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_comparison_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-70 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-70 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-70 (process_request_thread), started daemon 136567007999680)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-70 (process_request_thread), started daemon 136567007999680)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-70 (process_request_thread), started daemon 136567007999680)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 33892)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 33892)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb3af6d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb3af6d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb3af6d0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb3af6d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fb534b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb653140>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb534ee0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fb534ee0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c34fb5401c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'comparison', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'comparison', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1500, in update_dashboard
    main_fig = create_comparison_chart(df)
                                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_comparison_chart' is not defined
2025-04-28 21:05:48.239 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:48.239 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:48.239680, end_date=2025-04-28 21:05:48.239680, timeframe=1H
2025-04-28 21:05:48.315 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:48.316 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:48.317 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:48.317 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:48.340 | ERROR    | views.visual_dashboard:update_dashboard:1529 - Error in update_dashboard: name 'create_comparison_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c35397a8ca0>
    └ <Thread(Thread-76 (process_request_thread), started daemon 136567227147968)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c35397a89d0>
    └ <Thread(Thread-76 (process_request_thread), started daemon 136567227147968)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-76 (process_request_thread), started daemon 136567227147968)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-76 (process_request_thread), started daemon 136567227147968)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>>
    └ <Thread(Thread-76 (process_request_thread), started daemon 136567227147968)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 33956)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c353901d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │    │                   │        └ ('127.0.0.1', 33956)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c3538d863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb554e80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c3538fe53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb554e80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb554e80>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c350a497580>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c34fb554e80>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c34fa2cbe20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7c34fb653140>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fa2cbf40>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7c3509949e70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c34fa2cbf40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c353882e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c353882e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c353882dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c350a6044c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c353882e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7c34fb3a3900>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'comparison', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>
                   └ <function _invoke_callback at 0x7c3538251ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'comparison', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7c35099a4dc0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1500, in update_dashboard
    main_fig = create_comparison_chart(df)
                                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...

NameError: name 'create_comparison_chart' is not defined
2025-04-28 21:05:50.092 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:05:50.092 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:50.092786, end_date=2025-04-28 21:05:50.092786, timeframe=1H
2025-04-28 21:05:50.110 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:50.111 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:50.112 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:50.112 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:05:50.204 | INFO     | views.visual_dashboard:update_dashboard:1365 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:05:50.208 | INFO     | views.visual_dashboard:update_dashboard:1427 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:05:50.208735, end_date=2025-04-28 21:05:50.208735, timeframe=1H
2025-04-28 21:05:50.246 | INFO     | views.visual_dashboard:get_price_data:939 - Returning dataframe with 623 rows
2025-04-28 21:05:50.247 | INFO     | views.visual_dashboard:update_dashboard:1468 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:05:50.248 | INFO     | views.visual_dashboard:update_dashboard:1469 - DataFrame shape: (623, 6)
2025-04-28 21:05:50.248 | INFO     | views.visual_dashboard:update_dashboard:1470 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:06:32.464 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:32.466 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:37.320 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:37.322 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:37.985 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:37.988 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:59.855 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:06:59.857 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:07:23.723 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:07:23.725 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:07:32.716 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:32.716 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:32.716617, end_date=2025-04-28 21:07:32.716617, timeframe=1H
2025-04-28 21:07:32.745 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:32.747 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:32.747 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:32.747 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:33.151 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:33.151 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:33.151273, end_date=2025-04-28 21:07:33.151273, timeframe=1H
2025-04-28 21:07:33.166 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:33.168 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:33.168 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:33.168 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:33.619 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:33.620 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:33.620163, end_date=2025-04-28 21:07:33.620163, timeframe=1H
2025-04-28 21:07:33.632 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:33.633 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:33.633 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:33.633 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:34.070 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:34.070 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:34.070273, end_date=2025-04-28 21:07:34.070273, timeframe=1H
2025-04-28 21:07:34.085 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:34.087 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:34.087 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:34.087 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:34.740 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:34.740 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:34.740615, end_date=2025-04-28 21:07:34.740615, timeframe=1H
2025-04-28 21:07:34.752 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:34.752 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:34.753 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:34.753 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:35.336 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:07:35.337 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:07:35.337165, end_date=2025-04-28 21:07:35.337165, timeframe=1H
2025-04-28 21:07:35.349 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:07:35.350 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:07:35.351 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:07:35.351 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:07:45.628 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:07:45.630 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:05.468 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:05.472 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:28.349 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:28.351 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:55.243 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:08:55.245 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:09:03.027 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:09:03.029 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:09:05.646 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:05.646 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:05.646977, end_date=2025-04-28 21:09:05.646977, timeframe=1H
2025-04-28 21:09:05.670 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:05.672 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:05.672 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:05.672 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:05.707 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:05.717 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:05.717387, end_date=2025-04-28 21:09:05.717387, timeframe=1H
2025-04-28 21:09:05.733 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:05.735 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:05.736 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:05.736 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:05.914 | ERROR    | views.visual_dashboard:update_dashboard:1505 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7ba8bbfa8ca0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 135963826185920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7ba8bbfa89d0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 135963826185920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 135963826185920)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 135963826185920)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7ba88cc97520>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 135963826185920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 50068)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7ba8bb81d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7ba88cc97520>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7ba88cc97520>
    │    │                   │        └ ('127.0.0.1', 50068)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7ba88cc97520>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7ba8bb5863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7ba88cc5a3e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7ba8bb7e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7ba88cc5a3e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7ba88cc5a3e0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7ba88c149db0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7ba88cc97520>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7ba88cc5a3e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7ba88c167250>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7ba88c1a27a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7ba88c167520>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7ba88c149db0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7ba88c167520>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7ba8bb02e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7ba8bb02e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7ba8bb02dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7ba88ce04940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7ba8bb02e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7ba88c114540>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7ba88cc1fc70>
                   └ <function _invoke_callback at 0x7ba8baa51ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high'], ['sma_10', 'ema_10'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7ba88cc1fc70>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1487, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7ba88cc1d480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1682, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7ba88dc2ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7ba88ddfd3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x7ba88ddfcb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7ba88dd58bd0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7ba8bac92d90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7ba8bac92d90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7ba8bac92e30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7ba8bac92d90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7ba8bac92e30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7ba8bacef0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:09:34.692 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:09:34.693 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:34.692993, end_date=2025-04-28 21:09:34.692993, timeframe=1H
2025-04-28 21:09:34.711 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:34.714 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:34.714 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:34.714 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:34.755 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:34.756 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:34.756052, end_date=2025-04-28 21:09:34.756052, timeframe=1H
2025-04-28 21:09:34.819 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:34.824 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:34.824 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:34.825 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:44.682 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:09:44.682 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:44.682861, end_date=2025-04-28 21:09:44.682861, timeframe=4H
2025-04-28 21:09:44.704 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:09:44.705 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:44.705 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:09:44.705 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:44.753 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:44.766 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:44.766440, end_date=2025-04-28 21:09:44.766440, timeframe=4H
2025-04-28 21:09:44.813 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:09:44.815 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:44.815 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:09:44.815 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:50.917 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:09:50.917 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:50.917336, end_date=2025-04-28 21:09:50.917336, timeframe=4H
2025-04-28 21:09:50.935 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:09:50.936 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:50.936 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:09:50.936 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:51.103 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:51.104 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:51.104205, end_date=2025-04-28 21:09:51.104205, timeframe=4H
2025-04-28 21:09:51.118 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:09:51.120 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:51.120 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:09:51.120 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:53.267 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:09:53.267 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:53.267418, end_date=2025-04-28 21:09:53.267418, timeframe=1H
2025-04-28 21:09:53.285 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:53.292 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:53.292 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:53.292 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:53.341 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:53.342 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:53.342134, end_date=2025-04-28 21:09:53.342134, timeframe=1H
2025-04-28 21:09:53.391 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 623 rows
2025-04-28 21:09:53.396 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:09:53.397 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (623, 6)
2025-04-28 21:09:53.397 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:09:55.741 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:09:55.742 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:55.742168, end_date=2025-04-28 21:09:55.742168, timeframe=1D
2025-04-28 21:09:55.755 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:09:55.756 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:09:55.756 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:09:55.756 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:09:55.841 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:09:55.841 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:09:55.841878, end_date=2025-04-28 21:09:55.841878, timeframe=1D
2025-04-28 21:09:55.859 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:09:55.870 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:09:55.870 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:09:55.870 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:00.717 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:10:00.717 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:00.717665, end_date=2025-04-28 21:10:00.717665, timeframe=4H
2025-04-28 21:10:00.734 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:10:00.738 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:10:00.738 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:10:00.738 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:10:00.821 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:00.832 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:00.832084, end_date=2025-04-28 21:10:00.832084, timeframe=4H
2025-04-28 21:10:00.850 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 157 rows
2025-04-28 21:10:00.852 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:10:00.852 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (157, 6)
2025-04-28 21:10:00.852 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:10:03.659 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:10:03.660 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:03.660141, end_date=2025-04-28 21:10:03.660141, timeframe=1D
2025-04-28 21:10:03.673 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:03.677 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:03.677 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:03.677 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:03.771 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:03.772 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:03.772072, end_date=2025-04-28 21:10:03.772072, timeframe=1D
2025-04-28 21:10:03.783 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:03.785 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:03.785 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:03.785 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:11.174 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:10:11.174 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:11.174566, end_date=2025-04-28 21:10:11.174566, timeframe=1W
2025-04-28 21:10:11.199 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 5 rows
2025-04-28 21:10:11.201 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-04-06 00:00:00'), 2: Timestamp('2025-04-13 00:00:00'), 3: Timestamp('2025-04-20 00:00:00'), 4: Timestamp('2025-04-27 00:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3015.0, 3: 3240.4, 4: 3362.0}, 'high_price': {0: 3128.3, 1: 3201.6, 2: 3263.0, 3: 3371.9, 4: 3509.9}, 'low_price': {0: 3091.0, 1: 2972.8, 2: 2949.7, 3: 3194.5, 4: 3270.8}, 'close_price': {0: 3123.5, 1: 3015.5, 2: 3240.7, 3: 3361.8, 4: 3330.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:10:11.202 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (5, 6)
2025-04-28 21:10:11.202 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:10:11.277 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:11.286 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:11.286369, end_date=2025-04-28 21:10:11.286369, timeframe=1W
2025-04-28 21:10:11.301 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 5 rows
2025-04-28 21:10:11.303 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-04-06 00:00:00'), 2: Timestamp('2025-04-13 00:00:00'), 3: Timestamp('2025-04-20 00:00:00'), 4: Timestamp('2025-04-27 00:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3015.0, 3: 3240.4, 4: 3362.0}, 'high_price': {0: 3128.3, 1: 3201.6, 2: 3263.0, 3: 3371.9, 4: 3509.9}, 'low_price': {0: 3091.0, 1: 2972.8, 2: 2949.7, 3: 3194.5, 4: 3270.8}, 'close_price': {0: 3123.5, 1: 3015.5, 2: 3240.7, 3: 3361.8, 4: 3330.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:10:11.303 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (5, 6)
2025-04-28 21:10:11.303 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:10:12.207 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:10:12.207 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:12.207472, end_date=2025-04-28 21:10:12.207472, timeframe=1D
2025-04-28 21:10:12.220 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:12.222 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:12.222 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:12.222 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:12.292 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:12.302 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:12.302397, end_date=2025-04-28 21:10:12.302397, timeframe=1D
2025-04-28 21:10:12.332 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:12.333 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:12.333 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:12.333 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:43.746 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:43.746 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:43.746426, end_date=2025-04-28 21:10:43.746426, timeframe=1D
2025-04-28 21:10:43.760 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:43.765 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:43.765 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:43.765 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:43.828 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:43.832 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:43.832693, end_date=2025-04-28 21:10:43.832693, timeframe=1D
2025-04-28 21:10:43.889 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:43.890 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:43.890 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:43.890 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:45.111 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:45.111 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:45.111708, end_date=2025-04-28 21:10:45.111708, timeframe=1D
2025-04-28 21:10:45.128 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:45.129 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:45.129 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:45.130 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:45.218 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:45.227 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:45.227771, end_date=2025-04-28 21:10:45.227771, timeframe=1D
2025-04-28 21:10:45.236 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:45.237 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:45.237 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:45.237 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:45.831 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:45.831 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:45.831727, end_date=2025-04-28 21:10:45.831727, timeframe=1D
2025-04-28 21:10:45.844 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:45.850 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:45.850 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:45.850 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:45.928 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:45.937 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:45.937485, end_date=2025-04-28 21:10:45.937485, timeframe=1D
2025-04-28 21:10:45.969 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:45.970 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:45.970 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:45.970 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:47.014 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:47.014 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:47.014863, end_date=2025-04-28 21:10:47.014863, timeframe=1D
2025-04-28 21:10:47.034 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:47.036 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:47.036 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:47.036 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:47.087 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:47.087 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:47.087926, end_date=2025-04-28 21:10:47.087926, timeframe=1D
2025-04-28 21:10:47.129 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:47.131 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:47.132 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:47.133 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:47.571 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:47.571 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:47.571719, end_date=2025-04-28 21:10:47.571719, timeframe=1D
2025-04-28 21:10:47.584 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:47.586 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:47.586 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:47.586 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:47.671 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:47.671 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:47.671653, end_date=2025-04-28 21:10:47.671653, timeframe=1D
2025-04-28 21:10:47.702 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:47.703 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:47.704 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:47.704 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:48.137 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: bb-checklist
2025-04-28 21:10:48.138 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:48.137983, end_date=2025-04-28 21:10:48.137983, timeframe=1D
2025-04-28 21:10:48.151 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:48.153 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:48.153 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:48.153 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:48.238 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:48.240 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:48.240901, end_date=2025-04-28 21:10:48.240901, timeframe=1D
2025-04-28 21:10:48.270 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:48.271 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:48.271 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:48.271 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:52.195 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:10:52.196 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:52.196112, end_date=2025-04-28 21:10:52.196112, timeframe=1D
2025-04-28 21:10:52.209 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:52.210 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:52.210 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:52.210 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:10:52.275 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:10:52.275 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:10:52.275893, end_date=2025-04-28 21:10:52.275893, timeframe=1D
2025-04-28 21:10:52.295 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:10:52.309 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:10:52.326 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:10:52.328 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:11:01.182 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:11:01.183 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:11:01.183114, end_date=2025-04-28 21:11:01.183114, timeframe=1D
2025-04-28 21:11:01.200 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:11:01.201 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:11:01.201 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:11:01.201 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:11:01.280 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:11:01.280 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:11:01.280768, end_date=2025-04-28 21:11:01.280768, timeframe=1D
2025-04-28 21:11:01.299 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:11:01.308 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:11:01.308 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:11:01.308 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:12:48.841 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:12:48.842 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:12:48.842199, end_date=2025-04-28 21:12:48.842199, timeframe=1D
2025-04-28 21:12:48.854 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:12:48.856 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:12:48.856 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:12:48.856 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:12:48.956 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:12:48.957 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:12:48.957120, end_date=2025-04-28 21:12:48.957120, timeframe=1D
2025-04-28 21:12:48.980 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:12:48.983 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:12:48.983 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:12:48.983 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:12:57.066 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:12:57.066 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:12:57.066734, end_date=2025-04-28 21:12:57.066734, timeframe=1D
2025-04-28 21:12:57.079 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:12:57.081 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:12:57.081 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:12:57.081 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:12:57.185 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:12:57.185 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:12:57.185530, end_date=2025-04-28 21:12:57.185530, timeframe=1D
2025-04-28 21:12:57.194 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:12:57.195 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:12:57.195 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:12:57.195 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:13:00.305 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:13:00.305 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:13:00.305238, end_date=2025-04-28 21:13:00.305238, timeframe=1D
2025-04-28 21:13:00.317 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:13:00.318 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:13:00.318 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:13:00.318 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:13:00.377 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:13:00.379 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:13:00.379775, end_date=2025-04-28 21:13:00.379775, timeframe=1D
2025-04-28 21:13:00.435 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:13:00.439 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:13:00.439 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:13:00.439 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:13:02.990 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:13:02.991 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:13:02.991084, end_date=2025-04-28 21:13:02.991084, timeframe=1D
2025-04-28 21:13:03.009 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:13:03.010 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:13:03.011 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:13:03.011 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:13:03.099 | INFO     | views.visual_dashboard:update_dashboard:1341 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:13:03.099 | INFO     | views.visual_dashboard:update_dashboard:1403 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:13:03.099662, end_date=2025-04-28 21:13:03.099662, timeframe=1D
2025-04-28 21:13:03.204 | INFO     | views.visual_dashboard:get_price_data:915 - Returning dataframe with 437 rows
2025-04-28 21:13:03.205 | INFO     | views.visual_dashboard:update_dashboard:1444 - DataFrame head before plotting: {'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}}
2025-04-28 21:13:03.205 | INFO     | views.visual_dashboard:update_dashboard:1445 - DataFrame shape: (437, 6)
2025-04-28 21:13:03.205 | INFO     | views.visual_dashboard:update_dashboard:1446 - DataFrame columns: ['metal_type', 'timestamp', 'open_price', 'high_price', 'low_price', 'close_price']
2025-04-28 21:13:41.263 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:13:41.265 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:14:44.268 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:14:44.270 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:15:15.247 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:15:15.249 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:15:30.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:15:30.994 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:15:33.699 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:15:33.699 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:15:33.699899, end_date=2025-04-28 21:15:33.699899, timeframe=1D
2025-04-28 21:15:33.742 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:15:33.744 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:15:33.744 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:15:33.744 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:15:33.803 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:15:33.804 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:15:33.804328, end_date=2025-04-28 21:15:33.804328, timeframe=1D
2025-04-28 21:15:33.870 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:15:33.871 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:15:33.871 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:15:33.871 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:15:33.953 | ERROR    | views.visual_dashboard:update_dashboard:1533 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7a9db8fa8ca0>
    └ <Thread(Thread-21 (process_request_thread), started daemon 134816943044288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7a9db8fa89d0>
    └ <Thread(Thread-21 (process_request_thread), started daemon 134816943044288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 134816943044288)>
    │    │        │    └ (<socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 134816943044288)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7a9d891db4f0>>
    └ <Thread(Thread-21 (process_request_thread), started daemon 134816943044288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 49260)
    │    │              └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7a9db881d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7a9d891db4f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7a9d891db4f0>
    │    │                   │        └ ('127.0.0.1', 49260)
    │    │                   └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7a9d891db4f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7a9db85e63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7a9d89353d90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7a9db87e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7a9d89353d90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7a9d89353d90>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7a9d8922ded0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7a9d891db4f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7a9d89353d90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7a9d881189d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7a9d8927b990>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7a9d88119120>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7a9d8922ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7a9d88119120>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7a9db80a2830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7a9db80a2050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7a9db80a1fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7a9d89ea8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7a9db80a2200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7a9d893b75c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1D', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7a9d8935bc70>
                   └ <function _invoke_callback at 0x7a9db7ad9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1D', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7a9d8935bc70>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1515, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └     open_price  high_price  low_price  close_price metal_type  ...       ema_12       ema_26  macd_line macd_signal macd_hist...
                     └ <function create_volatility_chart at 0x7a9d89359480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1710, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7a9d8ac86c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7a9d8ae5d3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':     timestamp metal_type  volatility
    │                       7  2025-04-07       gold    1.400882
    │                       8  2025-04-08       gold    1.237384...
    └ <function apply_default_cascade at 0x7a9d8ae5cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':     timestamp metal_type  volatility
      7  2025-04-07       gold    1.400882
      8  2025-04-08       gold    1.237384...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7a9d8adb4c20>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7a9db7d12e80>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7a9db7d12e80>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7a9db7d12f20>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7a9db7d12e80>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7a9db7d12f20>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7a9db7d6f0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:15:41.139 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:15:41.141 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:15:43.735 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:15:43.735 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:15:43.735382, end_date=2025-04-28 21:15:43.735382, timeframe=1D
2025-04-28 21:15:43.767 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:15:43.768 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:15:43.768 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:15:43.768 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:15:43.801 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:15:43.801 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:15:43.801924, end_date=2025-04-28 21:15:43.801924, timeframe=1D
2025-04-28 21:15:43.818 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:15:43.819 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:15:43.820 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:15:43.820 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:15:43.989 | ERROR    | views.visual_dashboard:update_dashboard:1533 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x752412ea4ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 128796598462144)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x752412ea49d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 128796598462144)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 128796598462144)>
    │    │        │    └ (<socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 128796598462144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7523e31fb4f0>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 128796598462144)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 45128)
    │    │              └ <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x752412719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7523e31fb4f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7523e31fb4f0>
    │    │                   │        └ ('127.0.0.1', 45128)
    │    │                   └ <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7523e31fb4f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7524124d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7523e31ba290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7524126e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7523e31ba290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7523e31ba290>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7523e304ded0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7523e31fb4f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7523e31ba290>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7523e27412d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7523e30a3290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7523e27411b0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=13>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7523e304ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7523e27411b0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=13>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x752411f86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x752411f86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x752411f85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7523e3d5c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x752411f86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7523e4f62a40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1D', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7523e3183c70>
                   └ <function _invoke_callback at 0x7524119bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1D', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7523e3183c70>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1515, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └     open_price  high_price  low_price  close_price metal_type  ...       ema_12       ema_26  macd_line macd_signal macd_hist...
                     └ <function create_volatility_chart at 0x7523e3181480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1710, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7523e4b7ac20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7523e4d513f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':     timestamp metal_type  volatility
    │                       7  2025-04-07       gold    1.400882
    │                       8  2025-04-08       gold    1.237384...
    └ <function apply_default_cascade at 0x7523e4d50b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':     timestamp metal_type  volatility
      7  2025-04-07       gold    1.400882
      8  2025-04-08       gold    1.237384...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7523e4ca8b80>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x752411c2ad90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x752411c2ad90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x752411c2ae30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x752411c2ad90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x752411c2ae30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x752411c530a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:16:58.313 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:16:58.316 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:17:40.227 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:17:40.229 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:17:47.745 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:17:47.745 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:17:47.745660, end_date=2025-04-28 21:17:47.745660, timeframe=1D
2025-04-28 21:17:47.779 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:17:47.781 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:17:47.782 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:17:47.782 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:17:47.831 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:17:47.831 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:17:47.831559, end_date=2025-04-28 21:17:47.831559, timeframe=1D
2025-04-28 21:17:47.847 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 23 rows
2025-04-28 21:17:47.849 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:17:47.849 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (23, 6)
2025-04-28 21:17:47.849 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:17:58.980 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:17:58.981 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:17:58.981114, end_date=2025-04-28 21:17:58.981114, timeframe=4H
2025-04-28 21:17:59.003 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 157 rows
2025-04-28 21:17:59.005 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:17:59.006 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (157, 6)
2025-04-28 21:17:59.006 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:17:59.085 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:17:59.088 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:17:59.088504, end_date=2025-04-28 21:17:59.088504, timeframe=4H
2025-04-28 21:17:59.150 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 157 rows
2025-04-28 21:17:59.151 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:17:59.151 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (157, 6)
2025-04-28 21:17:59.151 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:18:03.377 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:18:03.377 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:18:03.377709, end_date=2025-04-28 21:18:03.377709, timeframe=1H
2025-04-28 21:18:03.393 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 623 rows
2025-04-28 21:18:03.395 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:18:03.395 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (623, 6)
2025-04-28 21:18:03.395 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:18:03.475 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:18:03.476 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:18:03.476804, end_date=2025-04-28 21:18:03.476804, timeframe=1H
2025-04-28 21:18:03.519 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 623 rows
2025-04-28 21:18:03.520 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:18:03.521 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (623, 6)
2025-04-28 21:18:03.523 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:18:05.230 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:18:05.232 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:18:14.578 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:18:14.578 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:18:14.578730, end_date=2025-04-28 21:18:14.578730, timeframe=1H
2025-04-28 21:18:14.640 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:18:14.642 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:18:14.642 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:18:14.642666, end_date=2025-04-28 21:18:14.642666, timeframe=1H
2025-04-28 21:18:14.644 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:18:14.645 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:18:14.645 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:18:14.760 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:18:14.763 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:18:14.763 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:18:14.763 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:18:14.803 | ERROR    | views.visual_dashboard:update_dashboard:1533 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7474a92a4ca0>
    └ <Thread(Thread-5 (process_request_thread), started daemon 128043502790336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7474a92a49d0>
    └ <Thread(Thread-5 (process_request_thread), started daemon 128043502790336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 128043502790336)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 128043502790336)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7474794174f0>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 128043502790336)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 34090)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7474a8b19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7474794174f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7474794174f0>
    │    │                   │        └ ('127.0.0.1', 34090)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7474794174f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7474a88823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7474795dbfd0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7474a8ae13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7474795dbfd0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7474795dbfd0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x747479469ea0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7474794174f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7474795dbfd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x747479477760>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7474794b34c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7474794776d0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x747479469ea0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7474794776d0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7474a835e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7474a835e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7474a835dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x74747a1544c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7474a835e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7474794574c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '90D', 'histogram', '2025-01-28', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'em...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x74747959fc70>
                   └ <function _invoke_callback at 0x7474a7d95ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '90D', 'histogram', '2025-01-28', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'em...
           └ <function register_callbacks.<locals>.update_dashboard at 0x74747959fc70>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_histogram_chart(df)
               │                      └                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signa...
               └ <function create_histogram_chart at 0x74747959d6c0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2371, in create_histogram_chart
    fig = px.histogram(
          │  └ <function histogram at 0x74747af82e60>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 490, in histogram
    return make_figure(
           └ <function make_figure at 0x74747b1553f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_...
    └ <function apply_default_cascade at 0x74747b154b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1071, in apply_default_cascade
    args["pattern_shape_sequence"] = [
    └ {'data_frame':                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1072, in <listcomp>
    bar.marker.pattern.shape for bar in args["template"].data.bar
    │   │                        └ <unprintable Bar object>
    │   └ <property object at 0x74747b0c8f90>
    └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/bar/marker/_pattern.py", line 252, in shape
    return self["shape"]
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7474a8002cf0>
         │    │                      │       └ <unprintable Pattern object>
         │    │                      └ 'shape'
         │    └ <property object at 0x7474a8002cf0>
         └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Pattern object>
           │    └ <property object at 0x7474a8002d90>
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7474a8002cf0>
       └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7474a8002d90>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7474a8002cf0>
       └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Bar object>
           │    └ <property object at 0x7474a8002d90>
           └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Bar object>
                │          │         └ (Bar({
                │          │               'error_x': {'color': '#2a3f5f'},
                │          │               'error_y': {'color': '#2a3f5f'},
                │          │               'marker': {'line': {'color': '#E5ECF6', ...
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7474a802b0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:18:25.172 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:18:25.174 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:19:10.665 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:19:10.667 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:19:11.257 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:19:11.259 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:19:13.516 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:13.517 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:13.517041, end_date=2025-04-28 21:19:13.517041, timeframe=1H
2025-04-28 21:19:13.575 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:13.581 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:13.581219, end_date=2025-04-28 21:19:13.581219, timeframe=1H
2025-04-28 21:19:13.596 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:13.598 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:13.598 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:13.599 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:13.675 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:13.677 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:13.678 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:13.678 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:13.740 | ERROR    | views.visual_dashboard:update_dashboard:1533 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x76c1470a4ca0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 130571655165632)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x76c1470a49d0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 130571655165632)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 130571655165632)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 130571655165632)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x76c11726cb80>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 130571655165632)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53524)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x76c146919900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x76c11726cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x76c11726cb80>
    │    │                   │        └ ('127.0.0.1', 53524)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x76c11726cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x76c1466e23b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x76c1172d06d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x76c1468e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x76c1172d06d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x76c1172d06d0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x76c117239210>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x76c11726cb80>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x76c1172d06d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x76c1172c0280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x76c1172466c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x76c1172c05e0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x76c117239210>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x76c1172c05e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x76c14619e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x76c14619e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x76c14619dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x76c117fa4940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x76c14619e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x76c1172dc680>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '90D', 'histogram', '2025-01-28', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'em...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x76c11738fe20>
                   └ <function _invoke_callback at 0x76c145bd5ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '90D', 'histogram', '2025-01-28', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'em...
           └ <function register_callbacks.<locals>.update_dashboard at 0x76c11738fe20>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1498, in update_dashboard
    main_fig = create_histogram_chart(df)
               │                      └                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signa...
               └ <function create_histogram_chart at 0x76c11738d3f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2382, in create_histogram_chart
    fig = px.histogram(
          │  └ <function histogram at 0x76c118d7ee60>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 490, in histogram
    return make_figure(
           └ <function make_figure at 0x76c118f553f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_...
    └ <function apply_default_cascade at 0x76c118f54b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1071, in apply_default_cascade
    args["pattern_shape_sequence"] = [
    └ {'data_frame':                timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1072, in <listcomp>
    bar.marker.pattern.shape for bar in args["template"].data.bar
    │   │                        └ <unprintable Bar object>
    │   └ <property object at 0x76c118eccef0>
    └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/bar/marker/_pattern.py", line 252, in shape
    return self["shape"]
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x76c145e0ef70>
         │    │                      │       └ <unprintable Pattern object>
         │    │                      └ 'shape'
         │    └ <property object at 0x76c145e0ef70>
         └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Pattern object>
           │    └ <property object at 0x76c145e0f010>
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x76c145e0ef70>
       └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x76c145e0f010>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x76c145e0ef70>
       └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Bar object>
           │    └ <property object at 0x76c145e0f010>
           └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Bar object>
                │          │         └ (Bar({
                │          │               'error_x': {'color': '#2a3f5f'},
                │          │               'error_y': {'color': '#2a3f5f'},
                │          │               'marker': {'line': {'color': '#E5ECF6', ...
                │          └ <staticmethod(<function BaseFigure._index_is at 0x76c145e6b0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:19:15.879 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:19:15.879 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:15.879687, end_date=2025-04-28 21:19:15.879687, timeframe=1H
2025-04-28 21:19:15.928 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:15.930 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:15.931 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:15.931 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:15.939 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:15.940 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:15.940871, end_date=2025-04-28 21:19:15.940871, timeframe=1H
2025-04-28 21:19:16.001 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:16.002 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:16.002 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:16.002 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:25.659 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:19:25.659 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:25.659588, end_date=2025-04-28 21:19:25.659588, timeframe=1H
2025-04-28 21:19:25.696 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:25.698 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:25.698 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:25.698 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:25.747 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:25.748 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:25.748180, end_date=2025-04-28 21:19:25.748180, timeframe=1H
2025-04-28 21:19:25.796 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:25.824 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:25.824 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:25.825 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:26.434 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:19:26.434 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:26.434248, end_date=2025-04-28 21:19:26.434248, timeframe=1H
2025-04-28 21:19:26.474 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:26.476 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:26.477 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:26.477 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:26.532 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:26.533 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:26.533296, end_date=2025-04-28 21:19:26.533296, timeframe=1H
2025-04-28 21:19:26.622 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:26.633 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:26.633 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:26.633 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:28.968 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:19:28.968 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:28.968581, end_date=2025-04-28 21:19:28.968581, timeframe=1H
2025-04-28 21:19:29.009 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:29.012 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:29.012 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:29.012 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:19:29.056 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:19:29.056 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 21:19:29.056428, end_date=2025-04-28 21:19:29.056428, timeframe=1H
2025-04-28 21:19:29.135 | INFO     | views.visual_dashboard:get_price_data:943 - Returning dataframe with 2086 rows
2025-04-28 21:19:29.142 | INFO     | views.visual_dashboard:update_dashboard:1472 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:19:29.142 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame shape: (2086, 6)
2025-04-28 21:19:29.142 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:20:35.460 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:20:35.463 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:20:48.330 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:20:48.333 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:05.364 | INFO     | views.visual_dashboard:update_dashboard:1369 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:21:05.364 | INFO     | views.visual_dashboard:update_dashboard:1431 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 21:21:05.364351, end_date=2025-04-28 21:21:05.364351, timeframe=1H
2025-04-28 21:21:06.187 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:06.189 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:10.079 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:21:10.079 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:21:10.079852, end_date=2025-04-28 21:21:10.079852, timeframe=1H
2025-04-28 21:21:10.106 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:21:10.108 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:10.109 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:21:10.109 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:10.139 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:10.140 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:21:10.140204, end_date=2025-04-28 21:21:10.140204, timeframe=1H
2025-04-28 21:21:10.160 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:21:10.161 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:10.161 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:21:10.161 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:10.321 | ERROR    | views.visual_dashboard:update_dashboard:1535 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7aefa9da4ca0>
    └ <Thread(Thread-5 (process_request_thread), started daemon 135168727709376)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7aefa9da49d0>
    └ <Thread(Thread-5 (process_request_thread), started daemon 135168727709376)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 135168727709376)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 135168727709376)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7aef79fd3850>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 135168727709376)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60054)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7aefa9619900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7aef79fd3850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7aef79fd3850>
    │    │                   │        └ ('127.0.0.1', 60054)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7aef79fd3850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7aefa93e23b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7aef7a192f20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7aefa95e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7aef7a192f20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7aef7a192f20>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7aef7a025cc0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7aef79fd3850>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7aef7a192f20>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7aef7a03bc70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7aef7a073300>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7aef7a03bb50>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7aef7a025cc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7aef7a03bb50>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7aefa8e9e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7aefa8e9e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7aefa8e9dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7aef7aca84c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7aefa8e9e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7aef7a104500>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7aef7a157640>
                   └ <function _invoke_callback at 0x7aefa88d5ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7aef7a157640>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1517, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal...
                     └ <function create_volatility_chart at 0x7aef7a155480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1722, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7aef7ba82c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7aef7bc593f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x7aef7bc58b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7aef7bbb0b30>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7aefa8b0ee80>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7aefa8b0ee80>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7aefa8b0ef20>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7aefa8b0ee80>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7aefa8b0ef20>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7aefa8b6b0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:21:12.576 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:21:12.576 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:12.576778, end_date=2025-04-28 21:21:12.576778, timeframe=1H
2025-04-28 21:21:12.587 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:21:12.588 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:12.589 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:21:12.589 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:14.855 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:21:14.856 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 21:21:14.856147, end_date=2025-04-28 21:21:14.856147, timeframe=1H
2025-04-28 21:21:17.132 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:21:17.133 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:17.133137, end_date=2025-04-28 21:21:17.133137, timeframe=1H
2025-04-28 21:21:17.142 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:21:17.145 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:17.146 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:21:17.146 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:17.229 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:17.230 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:17.230625, end_date=2025-04-28 21:21:17.230625, timeframe=1H
2025-04-28 21:21:17.241 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:21:17.242 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:17.242 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:21:17.242 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:31.157 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:31.159 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:32.027 | INFO     | views.visual_dashboard:update_dashboard:1370 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:32.028 | INFO     | views.visual_dashboard:update_dashboard:1432 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:32.028110, end_date=2025-04-28 21:21:32.028110, timeframe=1H
2025-04-28 21:21:32.055 | INFO     | views.visual_dashboard:get_price_data:944 - Returning dataframe with 95 rows
2025-04-28 21:21:32.057 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:32.057 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame shape: (95, 6)
2025-04-28 21:21:32.057 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:32.102 | INFO     | views.visual_dashboard:update_dashboard:1370 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:32.102 | INFO     | views.visual_dashboard:update_dashboard:1432 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:32.102908, end_date=2025-04-28 21:21:32.102908, timeframe=1H
2025-04-28 21:21:32.111 | INFO     | views.visual_dashboard:get_price_data:944 - Returning dataframe with 95 rows
2025-04-28 21:21:32.113 | INFO     | views.visual_dashboard:update_dashboard:1473 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:32.113 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame shape: (95, 6)
2025-04-28 21:21:32.114 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:32.285 | ERROR    | views.visual_dashboard:update_dashboard:1534 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7466a6fa8ca0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 127983036655296)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7466a6fa89d0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 127983036655296)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 127983036655296)>
    │    │        │    └ (<socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 127983036655296)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x74667710f880>>
    └ <Thread(Thread-33 (process_request_thread), started daemon 127983036655296)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 59426)
    │    │              └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7466a681d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x74667710f880>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x74667710f880>
    │    │                   │        └ ('127.0.0.1', 59426)
    │    │                   └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x74667710f880>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7466a65863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7466768b8910>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7466a67e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7466768b8910>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7466768b8910>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x746677161c90>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x74667710f880>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7466768b8910>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7466768dc0d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7466771b3d10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x746676897eb0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x746677161c90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x746676897eb0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7466a6062830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7466a6062050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7466a6061fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x746677e4c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7466a6062200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7466771eca40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x746677c67640>
                   └ <function _invoke_callback at 0x7466a5a99ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
           └ <function register_callbacks.<locals>.update_dashboard at 0x746677c67640>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1516, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └              timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal ...
                     └ <function create_volatility_chart at 0x746677c65480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1721, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x746678c76c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x746678e453f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':              timestamp metal_type  volatility
    │                       7  2025-04-22 05:00:00       gold    0.371394
    │                       8  2025-04-22 06:0...
    └ <function apply_default_cascade at 0x746678e44b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':              timestamp metal_type  volatility
      7  2025-04-22 05:00:00       gold    0.371394
      8  2025-04-22 06:0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x746678da0bd0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7466a5cd2e80>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7466a5cd2e80>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7466a5cd2f20>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7466a5cd2e80>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7466a5cd2f20>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7466a5d2f0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:21:43.095 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:43.097 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:21:46.131 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:46.131 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:46.131836, end_date=2025-04-28 21:21:46.131836, timeframe=1H
2025-04-28 21:21:46.153 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:21:46.155 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:46.155 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:21:46.155 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:46.208 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:21:46.211 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:21:46.211341, end_date=2025-04-28 21:21:46.211341, timeframe=1H
2025-04-28 21:21:46.221 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:21:46.222 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:21:46.222 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:21:46.222 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:21:46.370 | ERROR    | views.visual_dashboard:update_dashboard:1535 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x783c261a8ca0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 132198673929920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x783c261a89d0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 132198673929920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 132198673929920)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 132198673929920)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x783bf631b850>>
    └ <Thread(Thread-33 (process_request_thread), started daemon 132198673929920)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 58364)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x783c25a1d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x783bf631b850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x783bf631b850>
    │    │                   │        └ ('127.0.0.1', 58364)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x783bf631b850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x783c257863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x783bf41db100>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x783c259e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x783bf41db100>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x783bf41db100>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x783bf636dcc0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x783bf631b850>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x783bf41db100>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x783bf41e76d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x783bf63b3610>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x783bf41e7e20>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x783bf636dcc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x783bf41e7e20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x783c25242830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x783c25242050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x783c25241fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x783bf7040940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x783c25242200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x783bf410e6c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x783bf6e5f640>
                   └ <function _invoke_callback at 0x783c24c79ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
           └ <function register_callbacks.<locals>.update_dashboard at 0x783bf6e5f640>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1517, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └              timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal ...
                     └ <function create_volatility_chart at 0x783bf6e5d480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1722, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x783bf7e5ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x783bf80313f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':              timestamp metal_type  volatility
    │                       7  2025-04-22 05:00:00       gold    0.371394
    │                       8  2025-04-22 06:0...
    └ <function apply_default_cascade at 0x783bf8030b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':              timestamp metal_type  volatility
      7  2025-04-22 05:00:00       gold    0.371394
      8  2025-04-22 06:0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x783bf7f88c20>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x783c24eb2e80>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x783c24eb2e80>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x783c24eb2f20>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x783c24eb2e80>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x783c24eb2f20>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x783c24f0f0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:22:24.108 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:22:24.110 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:22:26.750 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:22:26.750 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:22:26.750426, end_date=2025-04-28 21:22:26.750426, timeframe=1H
2025-04-28 21:22:26.777 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:22:26.779 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:22:26.779 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:22:26.779 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:22:26.813 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:22:26.814 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 21:22:26.814066, end_date=2025-04-28 21:22:26.814066, timeframe=1H
2025-04-28 21:22:26.823 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 95 rows
2025-04-28 21:22:26.825 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 22:00:00'), 1: Timestamp('2025-04-21 23:00:00'), 2: Timestamp('2025-04-22 00:00:00'), 3: Timestamp('2025-04-22 01:00:00'), 4: Timestamp('2025-04-22 02:00:00')}, 'open_price': {0: 3435.1, 1: 3442.4, 2: 3445.3, 3: 3436.1, 4: 3462.5}, 'high_price': {0: 3448.0, 1: 3455.9, 2: 3446.3, 3: 3464.6, 4: 3485.9}, 'low_price': {0: 3434.4, 1: 3440.2, 2: 3423.9, 3: 3431.8, 4: 3452.4}, 'close_price': {0: 3442.3, 1: 3445.3, 2: 3436.2, 3: 3462.6, 4: 3482.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:22:26.825 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (95, 6)
2025-04-28 21:22:26.830 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:22:27.013 | ERROR    | views.visual_dashboard:update_dashboard:1535 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73caa9fa8ca0>
    └ <Thread(Thread-25 (process_request_thread), started daemon 127313224132288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73caa9fa89d0>
    └ <Thread(Thread-25 (process_request_thread), started daemon 127313224132288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-25 (process_request_thread), started daemon 127313224132288)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-25 (process_request_thread), started daemon 127313224132288)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73ca7a10f850>>
    └ <Thread(Thread-25 (process_request_thread), started daemon 127313224132288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 45070)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x73caa981d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73ca7a10f850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73ca7a10f850>
    │    │                   │        └ ('127.0.0.1', 45070)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73ca7a10f850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73caa95863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73ca7aca0700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73caa97e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73ca7aca0700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x73ca7aca0700>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73ca7a161cc0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73ca7a10f850>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x73ca7aca0700>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x73ca7a1d4820>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x73ca7a1b3220>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73ca7a1d4c10>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73ca7a161cc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73ca7a1d4c10>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x73caa9062830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x73caa9062050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x73caa9061fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73ca7ae484c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x73caa9062200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x73ca7a14ec00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73ca7ac6b640>
                   └ <function _invoke_callback at 0x73caa8a99ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '7D', 'advanced', '2025-04-21', '2025-04-28', ['close', 'open', 'high', 'low'], ['sma_10', 'ema_...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73ca7ac6b640>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1517, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └              timestamp  open_price  high_price  low_price  close_price  ...       ema_12       ema_26  macd_line macd_signal ...
                     └ <function create_volatility_chart at 0x73ca7ac69480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1722, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x73ca7bc76c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x73ca7be493f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':              timestamp metal_type  volatility
    │                       7  2025-04-22 05:00:00       gold    0.371394
    │                       8  2025-04-22 06:0...
    └ <function apply_default_cascade at 0x73ca7be48b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':              timestamp metal_type  volatility
      7  2025-04-22 05:00:00       gold    0.371394
      8  2025-04-22 06:0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x73ca7bd9cd10>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x73caa8cd2e80>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x73caa8cd2e80>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x73caa8cd2f20>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x73caa8cd2e80>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x73caa8cd2f20>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x73caa8d2f0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:22:33.994 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:22:33.996 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:23:56.089 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:23:56.092 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:23:57.637 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: time-period-dropdown
2025-04-28 21:23:57.637 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:23:57.637906, end_date=2025-04-28 21:23:57.637906, timeframe=1H
2025-04-28 21:23:57.666 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:23:57.667 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:23:57.667 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:23:57.667 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:24:04.952 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:24:04.954 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:24:06.746 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:24:06.748 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:24:14.856 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:24:14.856 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:24:14.856940, end_date=2025-04-28 21:24:14.856940, timeframe=1H
2025-04-28 21:24:14.894 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:24:14.896 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:24:14.896 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:24:14.896 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:24:14.942 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:24:14.942 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:24:14.942337, end_date=2025-04-28 21:24:14.942337, timeframe=1H
2025-04-28 21:24:14.963 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:24:14.965 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:24:14.965 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:24:14.965 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:24:17.987 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:24:17.988 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:24:17.988371, end_date=2025-04-28 21:24:17.988371, timeframe=1H
2025-04-28 21:24:18.006 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:24:18.007 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:24:18.007 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:24:18.007 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:24:18.107 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:24:18.107 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:24:18.107915, end_date=2025-04-28 21:24:18.107915, timeframe=1H
2025-04-28 21:24:18.135 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:24:18.136 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:24:18.136 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:24:18.136 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:24:21.648 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:24:21.650 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:29:59.466 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:29:59.468 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:30:00.073 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:30:00.075 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:30:04.355 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:04.355 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:04.355427, end_date=2025-04-28 21:30:04.355427, timeframe=1H
2025-04-28 21:30:04.382 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:30:04.385 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:04.385322, end_date=2025-04-28 21:30:04.385322, timeframe=1H
2025-04-28 21:30:04.389 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:04.392 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:04.392 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:04.392 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:04.413 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:04.421 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:04.422 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:04.422 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:04.894 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:04.894 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:04.894595, end_date=2025-04-28 21:30:04.894595, timeframe=1H
2025-04-28 21:30:04.913 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:04.915 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:04.915 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:04.915 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:09.193 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:30:09.193 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:09.193890, end_date=2025-04-28 21:30:09.193890, timeframe=1H
2025-04-28 21:30:09.211 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:09.213 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:09.216 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:09.216 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:09.298 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:09.315 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:09.315188, end_date=2025-04-28 21:30:09.315188, timeframe=1H
2025-04-28 21:30:09.345 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:09.347 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:09.347 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:09.347 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:15.768 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:30:15.768 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:15.768713, end_date=2025-04-28 21:30:15.768713, timeframe=1H
2025-04-28 21:30:15.790 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:15.792 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:15.792 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:15.792 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:15.861 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:15.862 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:15.862241, end_date=2025-04-28 21:30:15.862241, timeframe=1H
2025-04-28 21:30:15.889 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:15.973 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:15.987 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:15.987 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:17.486 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:30:17.486 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:17.486431, end_date=2025-04-28 21:30:17.486431, timeframe=1H
2025-04-28 21:30:17.502 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:17.503 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:17.504 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:17.504 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:17.593 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:17.593 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:17.593502, end_date=2025-04-28 21:30:17.593502, timeframe=1H
2025-04-28 21:30:17.648 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:17.650 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:17.650 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:17.650 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:21.250 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:30:21.250 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:21.250816, end_date=2025-04-28 21:30:21.250816, timeframe=1H
2025-04-28 21:30:21.269 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:21.271 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:21.271 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:21.273 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:21.324 | INFO     | views.visual_dashboard:update_dashboard:1374 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:30:21.324 | INFO     | views.visual_dashboard:update_dashboard:1438 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:30:21.324772, end_date=2025-04-28 21:30:21.324772, timeframe=1H
2025-04-28 21:30:21.345 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:30:21.347 | INFO     | views.visual_dashboard:update_dashboard:1487 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:30:21.347 | INFO     | views.visual_dashboard:update_dashboard:1488 - DataFrame shape: (623, 6)
2025-04-28 21:30:21.347 | INFO     | views.visual_dashboard:update_dashboard:1489 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:30:39.053 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:30:39.055 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:31:20.609 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:31:20.611 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:31:21.256 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:31:21.260 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:31:23.080 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:23.081 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:23.081059, end_date=2025-04-28 21:31:23.081059, timeframe=1H
2025-04-28 21:31:23.085 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:31:23.090 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:23.090769, end_date=2025-04-28 21:31:23.090769, timeframe=1H
2025-04-28 21:31:23.136 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:23.145 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:23.149 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:23.150 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:23.150 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:23.151 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:23.151 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:23.153 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:23.182 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:23.185 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:23.185208, end_date=2025-04-28 21:31:23.185208, timeframe=1H
2025-04-28 21:31:23.240 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:23.243 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:23.244 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:23.244 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:27.477 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:31:27.477 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:31:27.477625, end_date=2025-04-28 21:31:27.477625, timeframe=1H
2025-04-28 21:31:27.492 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 697 rows
2025-04-28 21:31:27.495 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:27.495 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (697, 6)
2025-04-28 21:31:27.495 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:27.551 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:27.551 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:31:27.551566, end_date=2025-04-28 21:31:27.551566, timeframe=1H
2025-04-28 21:31:27.594 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 697 rows
2025-04-28 21:31:27.602 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:27.603 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (697, 6)
2025-04-28 21:31:27.603 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:30.644 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:31:30.645 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:30.645147, end_date=2025-04-28 21:31:30.645147, timeframe=1H
2025-04-28 21:31:30.663 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:30.664 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:30.664 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:30.664 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:30.747 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:30.751 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:30.751880, end_date=2025-04-28 21:31:30.751880, timeframe=1H
2025-04-28 21:31:30.782 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:30.783 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:30.783 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:30.783 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:32.619 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:31:32.619 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:31:32.619921, end_date=2025-04-28 21:31:32.619921, timeframe=1H
2025-04-28 21:31:32.638 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 697 rows
2025-04-28 21:31:32.639 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:32.639 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (697, 6)
2025-04-28 21:31:32.639 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:32.722 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:32.732 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:31:32.732752, end_date=2025-04-28 21:31:32.732752, timeframe=1H
2025-04-28 21:31:32.759 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 697 rows
2025-04-28 21:31:32.764 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:32.768 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (697, 6)
2025-04-28 21:31:32.768 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:34.909 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:31:34.909 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:34.909639, end_date=2025-04-28 21:31:34.909639, timeframe=1H
2025-04-28 21:31:34.929 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:34.932 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:34.932 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:34.933 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:35.000 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:35.000 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:35.000682, end_date=2025-04-28 21:31:35.000682, timeframe=1H
2025-04-28 21:31:35.031 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:35.032 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:35.032 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:35.033 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:39.096 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:39.096 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:39.096317, end_date=2025-04-28 21:31:39.096317, timeframe=4H
2025-04-28 21:31:39.115 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:39.116 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:39.116 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:39.116 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:39.209 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:39.210 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:39.210044, end_date=2025-04-28 21:31:39.210044, timeframe=4H
2025-04-28 21:31:39.226 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:39.227 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:39.227 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:39.227 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:41.067 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:41.067 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:41.067842, end_date=2025-04-28 21:31:41.067842, timeframe=1D
2025-04-28 21:31:41.084 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:41.085 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:41.086 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:41.086 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:31:41.191 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:41.192 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:41.192166, end_date=2025-04-28 21:31:41.192166, timeframe=1D
2025-04-28 21:31:41.208 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:41.209 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:41.209 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:41.209 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:31:43.873 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:43.873 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:43.873548, end_date=2025-04-28 21:31:43.873548, timeframe=4H
2025-04-28 21:31:43.889 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:43.890 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:43.890 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:43.890 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:43.979 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:43.980 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:43.979992, end_date=2025-04-28 21:31:43.979992, timeframe=4H
2025-04-28 21:31:43.994 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:43.995 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:43.995 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:43.995 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:44.892 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:44.892 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:44.892479, end_date=2025-04-28 21:31:44.892479, timeframe=1H
2025-04-28 21:31:44.910 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:44.912 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:44.912 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:44.912 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:44.981 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:44.992 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:44.992822, end_date=2025-04-28 21:31:44.992822, timeframe=1H
2025-04-28 21:31:45.020 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:31:45.034 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:45.034 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:31:45.034 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:45.943 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:45.944 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:45.944033, end_date=2025-04-28 21:31:45.944033, timeframe=4H
2025-04-28 21:31:45.962 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:45.967 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:45.967 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:45.968 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:46.012 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:46.012 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:46.012611, end_date=2025-04-28 21:31:46.012611, timeframe=4H
2025-04-28 21:31:46.070 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 157 rows
2025-04-28 21:31:46.071 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:31:46.071 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (157, 6)
2025-04-28 21:31:46.071 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:31:46.968 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:31:46.968 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:46.968744, end_date=2025-04-28 21:31:46.968744, timeframe=1D
2025-04-28 21:31:46.985 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:46.989 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:46.989 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:46.989 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:31:47.075 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:47.075 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:47.075936, end_date=2025-04-28 21:31:47.075936, timeframe=1D
2025-04-28 21:31:47.090 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:47.092 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:47.092 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:47.092 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:31:52.790 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:31:52.790 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:52.790951, end_date=2025-04-28 21:31:52.790951, timeframe=1D
2025-04-28 21:31:52.808 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:52.810 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:52.810 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:52.810 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:31:52.932 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:31:52.932 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:31:52.932664, end_date=2025-04-28 21:31:52.932664, timeframe=1D
2025-04-28 21:31:52.948 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:31:52.949 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:31:52.949 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:31:52.950 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:00.197 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:32:00.197 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:32:00.197421, end_date=2025-04-28 21:32:00.197421, timeframe=1D
2025-04-28 21:32:00.217 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 30 rows
2025-04-28 21:32:00.219 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 4219.09, 1: 4131.2, 2: 4119.0, 3: 4126.72, 4: 4258.35}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4196.04, 3: 4278.33, 4: 4426.5}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4063.26, 3: 4120.17, 4: 4114.15}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4126.72, 3: 4258.52, 4: 4124.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-04-01 00:00:00'), 4: Timestamp('2025-04-02 00:00:00')}}
2025-04-28 21:32:00.219 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (30, 6)
2025-04-28 21:32:00.219 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:00.329 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:00.339 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:32:00.339774, end_date=2025-04-28 21:32:00.339774, timeframe=1D
2025-04-28 21:32:00.359 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 30 rows
2025-04-28 21:32:00.362 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 4219.09, 1: 4131.2, 2: 4119.0, 3: 4126.72, 4: 4258.35}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4196.04, 3: 4278.33, 4: 4426.5}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4063.26, 3: 4120.17, 4: 4114.15}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4126.72, 3: 4258.52, 4: 4124.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-04-01 00:00:00'), 4: Timestamp('2025-04-02 00:00:00')}}
2025-04-28 21:32:00.362 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (30, 6)
2025-04-28 21:32:00.363 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:02.635 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: source-dropdown
2025-04-28 21:32:02.635 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:02.635429, end_date=2025-04-28 21:32:02.635429, timeframe=1D
2025-04-28 21:32:02.653 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:02.654 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:02.655 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:02.655 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:02.763 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:02.763 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:02.763599, end_date=2025-04-28 21:32:02.763599, timeframe=1D
2025-04-28 21:32:02.785 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:02.787 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:02.787 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:02.787 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:10.050 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:32:10.051 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:10.051215, end_date=2025-04-28 21:32:10.051215, timeframe=1D
2025-04-28 21:32:10.074 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:10.076 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:10.076 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:10.076 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:10.194 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:10.195 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:10.194992, end_date=2025-04-28 21:32:10.194992, timeframe=1D
2025-04-28 21:32:10.212 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:10.213 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:10.213 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:10.213 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:11.035 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:32:11.035 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:11.035832, end_date=2025-04-28 21:32:11.035832, timeframe=1D
2025-04-28 21:32:11.054 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:11.056 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:11.056 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:11.056 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:11.183 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:11.183 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:11.183863, end_date=2025-04-28 21:32:11.183863, timeframe=1D
2025-04-28 21:32:11.198 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:11.199 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:11.199 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:11.199 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:11.719 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:32:11.719 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:11.719360, end_date=2025-04-28 21:32:11.719360, timeframe=1D
2025-04-28 21:32:11.738 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:11.740 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:11.743 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:11.743 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:11.858 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:11.858 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:11.858731, end_date=2025-04-28 21:32:11.858731, timeframe=1D
2025-04-28 21:32:11.871 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:11.872 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:11.872 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:11.872 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:19.478 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:32:19.478 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:19.478596, end_date=2025-04-28 21:32:19.478596, timeframe=1D
2025-04-28 21:32:19.495 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:19.497 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:19.497 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:19.497 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:19.608 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:19.608 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:19.608423, end_date=2025-04-28 21:32:19.608423, timeframe=1D
2025-04-28 21:32:19.627 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:19.628 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:19.628 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:19.628 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:19.982 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:32:19.983 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:19.983059, end_date=2025-04-28 21:32:19.983059, timeframe=1D
2025-04-28 21:32:19.999 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:20.000 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:20.000 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:20.001 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:20.117 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:20.117 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:20.117668, end_date=2025-04-28 21:32:20.117668, timeframe=1D
2025-04-28 21:32:20.133 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:20.136 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:20.136 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:20.136 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:57.738 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:32:57.739 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:57.738973, end_date=2025-04-28 21:32:57.738973, timeframe=1D
2025-04-28 21:32:57.763 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:57.768 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:57.768 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:57.768 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:32:57.833 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:32:57.836 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:32:57.836431, end_date=2025-04-28 21:32:57.836431, timeframe=1D
2025-04-28 21:32:57.852 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:32:57.871 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:32:57.871 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:32:57.872 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:00.258 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:00.259 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:00.259189, end_date=2025-04-28 21:33:00.259189, timeframe=1D
2025-04-28 21:33:00.278 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:00.283 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:00.283 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:00.283 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:00.337 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:00.337 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:00.337829, end_date=2025-04-28 21:33:00.337829, timeframe=1D
2025-04-28 21:33:00.401 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:00.403 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:00.403 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:00.403 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:02.744 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:02.744 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:02.744398, end_date=2025-04-28 21:33:02.744398, timeframe=1D
2025-04-28 21:33:02.761 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:02.763 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:02.763 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:02.763 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:02.857 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:02.857 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:02.857836, end_date=2025-04-28 21:33:02.857836, timeframe=1D
2025-04-28 21:33:02.874 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:02.876 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:02.877 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:02.877 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:05.331 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:05.332 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:05.332392, end_date=2025-04-28 21:33:05.332392, timeframe=1D
2025-04-28 21:33:05.354 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:05.356 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:05.356 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:05.356 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:05.471 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:05.471 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:05.471381, end_date=2025-04-28 21:33:05.471381, timeframe=1D
2025-04-28 21:33:05.482 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:05.483 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:05.483 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:05.483 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:11.521 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:11.522 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:11.522306, end_date=2025-04-28 21:33:11.522306, timeframe=1D
2025-04-28 21:33:11.539 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:11.542 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:11.544 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:11.544 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:11.678 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:11.679 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:11.679329, end_date=2025-04-28 21:33:11.679329, timeframe=1D
2025-04-28 21:33:11.733 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:11.735 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:11.735 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:11.735 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:15.122 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:15.122 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:15.122826, end_date=2025-04-28 21:33:15.122826, timeframe=1D
2025-04-28 21:33:15.139 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:15.141 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:15.143 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:15.143 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:15.249 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:15.249 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:15.249400, end_date=2025-04-28 21:33:15.249400, timeframe=1D
2025-04-28 21:33:15.274 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:15.275 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:15.275 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:15.275 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:18.978 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:33:18.979 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:18.979288, end_date=2025-04-28 21:33:18.979288, timeframe=1D
2025-04-28 21:33:18.997 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:18.998 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:18.999 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:18.999 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:19.098 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:33:19.107 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:33:19.107408, end_date=2025-04-28 21:33:19.107408, timeframe=1D
2025-04-28 21:33:19.124 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:33:19.125 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:33:19.125 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:33:19.125 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:33:39.826 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:33:39.830 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:33:57.671 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:33:57.673 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:34:02.501 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:34:02.504 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:34:03.365 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:03.367 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:03.367373, end_date=2025-04-28 21:34:03.367373, timeframe=1D
2025-04-28 21:34:03.398 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:03.399 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:03.399 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:03.399 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:03.438 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:03.439 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:03.439008, end_date=2025-04-28 21:34:03.439008, timeframe=1D
2025-04-28 21:34:03.460 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:03.462 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:03.463 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:03.463 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:05.526 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:34:05.526 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:05.526468, end_date=2025-04-28 21:34:05.526468, timeframe=1D
2025-04-28 21:34:05.547 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:05.550 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:05.550 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:05.550 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:05.627 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:05.641 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:05.641490, end_date=2025-04-28 21:34:05.641490, timeframe=1D
2025-04-28 21:34:05.681 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:05.682 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:05.682 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:05.682 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:09.364 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:34:09.365 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:09.365146, end_date=2025-04-28 21:34:09.365146, timeframe=1D
2025-04-28 21:34:09.381 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:09.383 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:09.383 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:09.383 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:09.512 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:09.512 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:09.512935, end_date=2025-04-28 21:34:09.512935, timeframe=1D
2025-04-28 21:34:09.531 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:09.532 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:09.532 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:09.532 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:11.076 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:34:11.076 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:11.076420, end_date=2025-04-28 21:34:11.076420, timeframe=1D
2025-04-28 21:34:11.092 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:11.093 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:11.093 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:11.093 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:11.208 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:11.208 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:11.208445, end_date=2025-04-28 21:34:11.208445, timeframe=1D
2025-04-28 21:34:11.222 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:11.224 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:11.224 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:11.224 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:11.799 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:34:11.799 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:11.799762, end_date=2025-04-28 21:34:11.799762, timeframe=1D
2025-04-28 21:34:11.815 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:11.820 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:11.820 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:11.820 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:11.946 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:11.946 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:11.946550, end_date=2025-04-28 21:34:11.946550, timeframe=1D
2025-04-28 21:34:11.965 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:11.967 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:11.967 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:11.967 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:17.755 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:17.755 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:17.755939, end_date=2025-04-28 21:34:17.755939, timeframe=1D
2025-04-28 21:34:17.770 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:17.772 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:17.772 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:17.772 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:17.888 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:17.888 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:17.888658, end_date=2025-04-28 21:34:17.888658, timeframe=1D
2025-04-28 21:34:17.901 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:17.902 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:17.902 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:17.902 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:18.425 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:18.425 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:18.425809, end_date=2025-04-28 21:34:18.425809, timeframe=1D
2025-04-28 21:34:18.444 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:18.446 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:18.446 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:18.446 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:18.566 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:18.566 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:18.566240, end_date=2025-04-28 21:34:18.566240, timeframe=1D
2025-04-28 21:34:18.582 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:18.585 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:18.586 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:18.586 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:19.143 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:19.143 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:19.143919, end_date=2025-04-28 21:34:19.143919, timeframe=1D
2025-04-28 21:34:19.164 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:19.165 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:19.166 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:19.166 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:19.224 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:19.224 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:19.224967, end_date=2025-04-28 21:34:19.224967, timeframe=1D
2025-04-28 21:34:19.300 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:19.302 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:19.303 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:19.303 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:19.622 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:19.622 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:19.622800, end_date=2025-04-28 21:34:19.622800, timeframe=1D
2025-04-28 21:34:19.641 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:19.648 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:19.648 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:19.648 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:19.821 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:19.823 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:19.823328, end_date=2025-04-28 21:34:19.823328, timeframe=1D
2025-04-28 21:34:19.846 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:19.847 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:19.847 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:19.847 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:20.387 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:20.387 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:20.387928, end_date=2025-04-28 21:34:20.387928, timeframe=1D
2025-04-28 21:34:20.403 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:20.404 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:20.404 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:20.404 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:20.495 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:20.500 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:20.500905, end_date=2025-04-28 21:34:20.500905, timeframe=1D
2025-04-28 21:34:20.539 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:20.541 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:20.541 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:20.541 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:20.890 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:34:20.890 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:20.890271, end_date=2025-04-28 21:34:20.890271, timeframe=1D
2025-04-28 21:34:20.906 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:20.910 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:20.910 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:20.910 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:34:21.017 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:34:21.017 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:34:21.017418, end_date=2025-04-28 21:34:21.017418, timeframe=1D
2025-04-28 21:34:21.048 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 23 rows
2025-04-28 21:34:21.050 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 21:34:21.050 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (23, 6)
2025-04-28 21:34:21.050 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 21:35:14.192 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:35:14.194 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:35:57.165 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:35:57.166 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:35:57.165983, end_date=2025-04-28 21:35:57.165983, timeframe=1H
2025-04-28 21:35:57.203 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:35:57.204 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:35:57.204 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:35:57.204 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:35:57.264 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:35:57.265 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:35:57.265077, end_date=2025-04-28 21:35:57.265077, timeframe=1H
2025-04-28 21:35:57.281 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:35:57.283 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:35:57.283 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:35:57.283 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:07.476 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:36:07.476 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:07.476651, end_date=2025-04-28 21:36:07.476651, timeframe=1H
2025-04-28 21:36:07.492 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:07.494 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:07.494 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:07.494 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:07.585 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:07.585 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:07.585593, end_date=2025-04-28 21:36:07.585593, timeframe=1H
2025-04-28 21:36:07.633 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:07.635 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:07.635 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:07.635 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:09.873 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:36:09.873 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:09.873833, end_date=2025-04-28 21:36:09.873833, timeframe=1H
2025-04-28 21:36:09.891 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:09.892 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:09.893 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:09.893 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:09.984 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:09.985 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:09.985956, end_date=2025-04-28 21:36:09.985956, timeframe=1H
2025-04-28 21:36:10.106 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:10.109 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:10.109 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:10.112 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:17.023 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: bb-checklist
2025-04-28 21:36:17.023 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:17.023673, end_date=2025-04-28 21:36:17.023673, timeframe=1H
2025-04-28 21:36:17.039 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:17.041 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:17.041 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:17.041 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:17.131 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:17.134 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:17.134698, end_date=2025-04-28 21:36:17.134698, timeframe=1H
2025-04-28 21:36:17.183 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:17.184 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:17.184 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:17.184 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:18.547 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: bb-checklist
2025-04-28 21:36:18.548 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:18.548275, end_date=2025-04-28 21:36:18.548275, timeframe=1H
2025-04-28 21:36:18.563 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:18.567 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:18.567 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:18.567 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:18.643 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:18.643 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:18.643702, end_date=2025-04-28 21:36:18.643702, timeframe=1H
2025-04-28 21:36:18.710 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:18.729 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:18.730 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:18.730 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:19.982 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: bb-checklist
2025-04-28 21:36:19.982 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:19.982422, end_date=2025-04-28 21:36:19.982422, timeframe=1H
2025-04-28 21:36:19.998 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:20.000 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:20.000 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:20.000 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:20.058 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:20.068 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:20.068842, end_date=2025-04-28 21:36:20.068842, timeframe=1H
2025-04-28 21:36:20.111 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:20.115 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:20.115 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:20.115 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:31.420 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:36:31.420 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:31.420655, end_date=2025-04-28 21:36:31.420655, timeframe=1H
2025-04-28 21:36:31.440 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:31.441 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:31.441 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:31.442 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:31.636 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:31.642 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:31.642593, end_date=2025-04-28 21:36:31.642593, timeframe=1H
2025-04-28 21:36:31.665 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:31.669 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:31.669 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:31.669 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:32.343 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:36:32.344 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:32.344102, end_date=2025-04-28 21:36:32.344102, timeframe=1H
2025-04-28 21:36:32.363 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:32.364 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:32.364 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:32.365 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:32.437 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:32.440 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:32.440110, end_date=2025-04-28 21:36:32.440110, timeframe=1H
2025-04-28 21:36:32.502 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:32.521 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:32.522 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:32.522 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:32.837 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: price-series-checklist
2025-04-28 21:36:32.837 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:32.837726, end_date=2025-04-28 21:36:32.837726, timeframe=1H
2025-04-28 21:36:32.855 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:32.857 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:32.857 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:32.857 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:32.937 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:32.956 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:32.956548, end_date=2025-04-28 21:36:32.956548, timeframe=1H
2025-04-28 21:36:33.015 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:33.024 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:33.027 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:33.036 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:36.550 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:36:36.553 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:36:42.766 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:42.768 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:42.768029, end_date=2025-04-28 21:36:42.768029, timeframe=1H
2025-04-28 21:36:42.802 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:42.803 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:42.803 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:42.803 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:42.850 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:42.851 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:42.851176, end_date=2025-04-28 21:36:42.851176, timeframe=1H
2025-04-28 21:36:42.873 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:42.874 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:42.874 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:42.875 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:48.001 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:48.001 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:48.001273, end_date=2025-04-28 21:36:48.001273, timeframe=1H
2025-04-28 21:36:48.017 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:48.021 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:48.022 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:48.022 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:48.094 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:48.095 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:48.095090, end_date=2025-04-28 21:36:48.095090, timeframe=1H
2025-04-28 21:36:48.123 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:48.142 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:48.143 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:48.144 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:48.988 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:48.988 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:48.988396, end_date=2025-04-28 21:36:48.988396, timeframe=1H
2025-04-28 21:36:49.007 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:49.009 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:49.009 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:49.010 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:49.090 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:49.101 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:49.101498, end_date=2025-04-28 21:36:49.101498, timeframe=1H
2025-04-28 21:36:49.152 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:49.172 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:49.172 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:49.172 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:50.276 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:50.276 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:50.276949, end_date=2025-04-28 21:36:50.276949, timeframe=1H
2025-04-28 21:36:50.357 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:50.358 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:50.358 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:50.358 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:50.432 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:50.433 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:50.433073, end_date=2025-04-28 21:36:50.433073, timeframe=1H
2025-04-28 21:36:50.473 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:50.475 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:50.476 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:50.477 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:51.087 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:51.087 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:51.087264, end_date=2025-04-28 21:36:51.087264, timeframe=1H
2025-04-28 21:36:51.113 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:51.115 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:51.115 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:51.115 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:51.190 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:51.190 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:51.190431, end_date=2025-04-28 21:36:51.190431, timeframe=1H
2025-04-28 21:36:51.237 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:51.239 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:51.239 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:51.239 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:52.381 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:52.383 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:52.383244, end_date=2025-04-28 21:36:52.383244, timeframe=1H
2025-04-28 21:36:52.399 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:52.401 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:52.401 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:52.401 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:52.482 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:52.492 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:52.492314, end_date=2025-04-28 21:36:52.492314, timeframe=1H
2025-04-28 21:36:52.529 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:52.550 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:52.550 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:52.550 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:53.785 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:53.786 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:53.786105, end_date=2025-04-28 21:36:53.786105, timeframe=1H
2025-04-28 21:36:53.805 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:53.806 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:53.806 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:53.806 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:53.881 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:53.882 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:53.882669, end_date=2025-04-28 21:36:53.882669, timeframe=1H
2025-04-28 21:36:53.952 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:53.953 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:53.953 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:53.953 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:54.548 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:54.548 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:54.548572, end_date=2025-04-28 21:36:54.548572, timeframe=1H
2025-04-28 21:36:54.566 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:54.572 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:54.572 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:54.572 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:54.658 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:54.659 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:54.659013, end_date=2025-04-28 21:36:54.659013, timeframe=1H
2025-04-28 21:36:54.700 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:54.708 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:54.716 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:54.722 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:55.270 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:55.271 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:55.271699, end_date=2025-04-28 21:36:55.271699, timeframe=1H
2025-04-28 21:36:55.286 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:55.288 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:55.288 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:55.288 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:55.400 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:55.400 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:55.400790, end_date=2025-04-28 21:36:55.400790, timeframe=1H
2025-04-28 21:36:55.435 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:55.437 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:55.437 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:55.438 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:56.098 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:56.099 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:56.099222, end_date=2025-04-28 21:36:56.099222, timeframe=1H
2025-04-28 21:36:56.115 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:56.119 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:56.119 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:56.119 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:56.198 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:56.199 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:56.199004, end_date=2025-04-28 21:36:56.199004, timeframe=1H
2025-04-28 21:36:56.240 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:56.242 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:56.242 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:56.242 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:56.761 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:56.762 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:56.762149, end_date=2025-04-28 21:36:56.762149, timeframe=1H
2025-04-28 21:36:56.782 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:56.784 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:56.785 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:56.785 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:56.833 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:56.834 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:56.834055, end_date=2025-04-28 21:36:56.834055, timeframe=1H
2025-04-28 21:36:56.922 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:56.942 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:56.951 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:56.951 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:57.417 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:57.418 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:57.418057, end_date=2025-04-28 21:36:57.418057, timeframe=1H
2025-04-28 21:36:57.434 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:57.439 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:57.439 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:57.439 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:57.511 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:57.513 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:57.513020, end_date=2025-04-28 21:36:57.513020, timeframe=1H
2025-04-28 21:36:57.534 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:57.535 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:57.536 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:57.536 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:59.136 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:36:59.138 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:59.137990, end_date=2025-04-28 21:36:59.137990, timeframe=1H
2025-04-28 21:36:59.154 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:59.155 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:59.155 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:59.155 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:36:59.267 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:36:59.278 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:36:59.278821, end_date=2025-04-28 21:36:59.278821, timeframe=1H
2025-04-28 21:36:59.295 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:36:59.300 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:36:59.300 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:36:59.300 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:05.180 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:05.181 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:05.180985, end_date=2025-04-28 21:37:05.180985, timeframe=1H
2025-04-28 21:37:05.204 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:05.206 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:05.206 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:05.206 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:05.248 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:05.248 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:05.248897, end_date=2025-04-28 21:37:05.248897, timeframe=1H
2025-04-28 21:37:05.299 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:05.305 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:05.305 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:05.305 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:17.504 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:17.505 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:17.505369, end_date=2025-04-28 21:37:17.505369, timeframe=1H
2025-04-28 21:37:17.507 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:17.509 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:17.509259, end_date=2025-04-28 21:37:17.509259, timeframe=1H
2025-04-28 21:37:17.525 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:17.530 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:17.532 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:17.534 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:17.542 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:17.545 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:17.546 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:17.547 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:17.677 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:17.689 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:17.689830, end_date=2025-04-28 21:37:17.689830, timeframe=1H
2025-04-28 21:37:17.711 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:17.713 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:17.713456, end_date=2025-04-28 21:37:17.713456, timeframe=1H
2025-04-28 21:37:17.821 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:17.833 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:17.848 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:17.849 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:17.863 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:17.884 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:17.886 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:17.886195, end_date=2025-04-28 21:37:17.886195, timeframe=1H
2025-04-28 21:37:17.887 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:17.891 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:17.931 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:17.934 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:17.941 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:17.945 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:17.945 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:19.125 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:19.125 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:19.125565, end_date=2025-04-28 21:37:19.125565, timeframe=1H
2025-04-28 21:37:19.141 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:19.144 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:19.146 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:19.147 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:19.214 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:19.221 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:19.221521, end_date=2025-04-28 21:37:19.221521, timeframe=1H
2025-04-28 21:37:19.242 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:19.262 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:19.269 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:19.269 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:19.575 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:19.576 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:19.576233, end_date=2025-04-28 21:37:19.576233, timeframe=1H
2025-04-28 21:37:19.588 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:19.589 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:19.590 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:19.590 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:19.688 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:19.694 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:19.694207, end_date=2025-04-28 21:37:19.694207, timeframe=1H
2025-04-28 21:37:19.728 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:19.730 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:19.730 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:19.730 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.074 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:20.075 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.075622, end_date=2025-04-28 21:37:20.075622, timeframe=1H
2025-04-28 21:37:20.086 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:20.086 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.086746, end_date=2025-04-28 21:37:20.086746, timeframe=1H
2025-04-28 21:37:20.116 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.117 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.118 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.118 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.118 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.118 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.119 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.119 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.215 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:20.215 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.215647, end_date=2025-04-28 21:37:20.215647, timeframe=1H
2025-04-28 21:37:20.281 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.349 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.349 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.350 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.372 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:20.376 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.376248, end_date=2025-04-28 21:37:20.376248, timeframe=1H
2025-04-28 21:37:20.438 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:20.454 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.454384, end_date=2025-04-28 21:37:20.454384, timeframe=1H
2025-04-28 21:37:20.486 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.499 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.517 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.537 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.555 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.588 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.596 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.606 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:20.606 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:20.607 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:20.607863, end_date=2025-04-28 21:37:20.607863, timeframe=1H
2025-04-28 21:37:20.743 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:20.791 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:20.809 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:20.809 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.194 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:22.195 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.195751, end_date=2025-04-28 21:37:22.195751, timeframe=1H
2025-04-28 21:37:22.205 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:22.209 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.209233, end_date=2025-04-28 21:37:22.209233, timeframe=1H
2025-04-28 21:37:22.217 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.223 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.226 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.229 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.236 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.251 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.260 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.261 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.266 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:22.275 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.275436, end_date=2025-04-28 21:37:22.275436, timeframe=1H
2025-04-28 21:37:22.346 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.354 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.362 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.363 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.517 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:22.537 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.537341, end_date=2025-04-28 21:37:22.537341, timeframe=1H
2025-04-28 21:37:22.569 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:22.569 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.569822, end_date=2025-04-28 21:37:22.569822, timeframe=1H
2025-04-28 21:37:22.664 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.671 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.676 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.702 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.736 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.737 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:22.739 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:22.739012, end_date=2025-04-28 21:37:22.739012, timeframe=1H
2025-04-28 21:37:22.743 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.747 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.756 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:22.792 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:22.841 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:22.855 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:22.861 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:24.007 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:24.008 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:24.008182, end_date=2025-04-28 21:37:24.008182, timeframe=1H
2025-04-28 21:37:24.032 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:24.034 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:24.034 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:24.034 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:24.119 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:24.135 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:24.135456, end_date=2025-04-28 21:37:24.135456, timeframe=1H
2025-04-28 21:37:24.189 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:24.190 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:24.191 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:24.191 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:25.142 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:25.144 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:25.143978, end_date=2025-04-28 21:37:25.143978, timeframe=1H
2025-04-28 21:37:25.163 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:25.164 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:25.167 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:25.167 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:25.244 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:25.244 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:25.244605, end_date=2025-04-28 21:37:25.244605, timeframe=1H
2025-04-28 21:37:25.291 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:25.305 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:25.305 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:25.307 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:26.235 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:26.235 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:26.235389, end_date=2025-04-28 21:37:26.235389, timeframe=1H
2025-04-28 21:37:26.248 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:26.249 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:26.249 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:26.249 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:26.313 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:26.327 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:26.327492, end_date=2025-04-28 21:37:26.327492, timeframe=1H
2025-04-28 21:37:26.381 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:26.402 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:26.403 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:26.403 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:26.915 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:37:26.917 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:26.917487, end_date=2025-04-28 21:37:26.917487, timeframe=1H
2025-04-28 21:37:26.932 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:26.932 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:26.932269, end_date=2025-04-28 21:37:26.932269, timeframe=1H
2025-04-28 21:37:26.932 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:26.941 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:26.941 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:26.945 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:26.965 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:26.973 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:26.973 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:26.973 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:27.057 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:27.063 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:27.063276, end_date=2025-04-28 21:37:27.063276, timeframe=1H
2025-04-28 21:37:27.137 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:27.154 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:27.155 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:27.156 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:29.383 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:29.383 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:29.383870, end_date=2025-04-28 21:37:29.383870, timeframe=1H
2025-04-28 21:37:29.401 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:29.404 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:29.404 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:29.405 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:29.445 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:29.453 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:29.453353, end_date=2025-04-28 21:37:29.453353, timeframe=1H
2025-04-28 21:37:29.511 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:29.536 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:29.542 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:29.543 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:30.168 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:30.168 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:30.168630, end_date=2025-04-28 21:37:30.168630, timeframe=1H
2025-04-28 21:37:30.186 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:30.189 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:30.189 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:30.189 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:30.267 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:30.268 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:30.268096, end_date=2025-04-28 21:37:30.268096, timeframe=1H
2025-04-28 21:37:30.285 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:30.307 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:30.325 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:30.334 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:30.781 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:30.782 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:30.781994, end_date=2025-04-28 21:37:30.781994, timeframe=1H
2025-04-28 21:37:30.806 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:30.809 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:30.809 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:30.809 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:30.896 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:30.899 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:30.899042, end_date=2025-04-28 21:37:30.899042, timeframe=1H
2025-04-28 21:37:30.948 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:30.963 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:30.963 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:30.963 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:31.419 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:31.419 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:31.419861, end_date=2025-04-28 21:37:31.419861, timeframe=1H
2025-04-28 21:37:31.438 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:31.440 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:31.440 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:31.442 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:31.514 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:31.523 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:31.523470, end_date=2025-04-28 21:37:31.523470, timeframe=1H
2025-04-28 21:37:31.568 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:31.570 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:31.570 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:31.570 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:32.047 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:32.048 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:32.048082, end_date=2025-04-28 21:37:32.048082, timeframe=1H
2025-04-28 21:37:32.064 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:32.067 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:32.068 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:32.068 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:32.144 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:32.148 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:32.148105, end_date=2025-04-28 21:37:32.148105, timeframe=1H
2025-04-28 21:37:32.191 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:32.210 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:32.213 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:32.213 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:32.766 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:37:32.767 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:32.767767, end_date=2025-04-28 21:37:32.767767, timeframe=1H
2025-04-28 21:37:32.784 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:32.785 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:32.785 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:32.785 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:32.891 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:37:32.891 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:37:32.891629, end_date=2025-04-28 21:37:32.891629, timeframe=1H
2025-04-28 21:37:32.921 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:37:32.922 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:37:32.923 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:37:32.933 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:37:42.533 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:37:42.535 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:38:15.161 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:38:15.162 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:38:15.162066, end_date=2025-04-28 21:38:15.162066, timeframe=1H
2025-04-28 21:38:15.195 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:38:15.198 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:38:15.198 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:38:15.198 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:38:15.248 | INFO     | views.visual_dashboard:update_dashboard:1371 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:38:15.248 | INFO     | views.visual_dashboard:update_dashboard:1433 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:38:15.248941, end_date=2025-04-28 21:38:15.248941, timeframe=1H
2025-04-28 21:38:15.268 | INFO     | views.visual_dashboard:get_price_data:945 - Returning dataframe with 623 rows
2025-04-28 21:38:15.269 | INFO     | views.visual_dashboard:update_dashboard:1474 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:38:15.269 | INFO     | views.visual_dashboard:update_dashboard:1475 - DataFrame shape: (623, 6)
2025-04-28 21:38:15.270 | INFO     | views.visual_dashboard:update_dashboard:1476 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:38:25.504 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:38:25.507 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:38:42.637 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:38:42.640 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:39:22.621 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:39:22.623 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:40:15.639 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:40:15.641 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:40:59.594 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:40:59.596 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:15.449 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:15.451 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:27.254 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:27.256 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:43.113 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:43.116 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:54.926 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:41:54.928 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:42:29.885 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:42:29.890 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:42:53.769 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:42:53.771 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:43:55.889 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:43:55.892 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:08.688 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:08.690 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:39.619 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:39.621 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:53.560 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:44:53.562 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:45:14.451 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:45:14.453 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:45:30.344 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:45:30.346 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:45:36.783 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:45:36.784 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:36.784002, end_date=2025-04-28 21:45:36.784002, timeframe=1H
2025-04-28 21:45:36.814 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:36.815 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:36.815 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:36.815 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:45:36.855 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:45:36.855 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:36.855883, end_date=2025-04-28 21:45:36.855883, timeframe=1H
2025-04-28 21:45:36.876 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:36.877 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:36.878 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:36.878 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:45:40.138 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:45:40.139 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:40.139068, end_date=2025-04-28 21:45:40.139068, timeframe=1H
2025-04-28 21:45:40.156 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:40.159 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:40.159 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:40.159 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:45:40.253 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:45:40.254 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:40.254167, end_date=2025-04-28 21:45:40.254167, timeframe=1H
2025-04-28 21:45:40.286 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:40.288 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:40.288 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:40.288 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:45:41.049 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:45:41.050 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:41.050798, end_date=2025-04-28 21:45:41.050798, timeframe=1H
2025-04-28 21:45:41.069 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:41.070 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:41.070 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:41.070 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:45:41.156 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:45:41.174 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:45:41.174295, end_date=2025-04-28 21:45:41.174295, timeframe=1H
2025-04-28 21:45:41.213 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:45:41.214 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:45:41.214 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:45:41.214 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:49.490 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:49.490 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:49.490895, end_date=2025-04-28 21:46:49.490895, timeframe=1H
2025-04-28 21:46:49.569 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:49.571 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:49.571 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:49.571 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:49.647 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:49.654 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:49.654044, end_date=2025-04-28 21:46:49.654044, timeframe=1H
2025-04-28 21:46:49.697 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:49.698 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:49.704 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:49.711 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:49.962 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:49.962 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:49.962486, end_date=2025-04-28 21:46:49.962486, timeframe=1H
2025-04-28 21:46:49.982 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:49.985 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:49.985 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:49.985 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:50.053 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:50.063 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:50.063392, end_date=2025-04-28 21:46:50.063392, timeframe=1H
2025-04-28 21:46:50.109 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:50.111 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:50.111 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:50.112 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:50.620 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:50.621 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:50.621202, end_date=2025-04-28 21:46:50.621202, timeframe=1H
2025-04-28 21:46:50.635 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:50.639 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:46:50.639 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:50.639510, end_date=2025-04-28 21:46:50.639510, timeframe=1H
2025-04-28 21:46:50.641 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:50.642 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:50.642 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:50.696 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:50.733 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:50.734 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:50.734 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:50.735 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:50.735 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:50.735381, end_date=2025-04-28 21:46:50.735381, timeframe=1H
2025-04-28 21:46:50.842 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:50.857 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:50.857 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:50.857 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:52.903 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:52.903 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:52.903673, end_date=2025-04-28 21:46:52.903673, timeframe=1H
2025-04-28 21:46:52.925 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:52.928 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:52.928 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:52.928 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:53.014 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:53.015 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:53.015574, end_date=2025-04-28 21:46:53.015574, timeframe=1H
2025-04-28 21:46:53.063 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:53.068 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:53.087 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:53.087 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:54.556 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:54.556 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:54.556910, end_date=2025-04-28 21:46:54.556910, timeframe=1H
2025-04-28 21:46:54.571 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:54.574 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:54.574 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:54.574 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:54.661 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:54.661 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:54.661227, end_date=2025-04-28 21:46:54.661227, timeframe=1H
2025-04-28 21:46:54.711 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:54.713 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:54.713 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:54.713 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:55.372 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:55.373 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:46:55.373 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:55.373709, end_date=2025-04-28 21:46:55.373709, timeframe=1H
2025-04-28 21:46:55.374 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:55.374026, end_date=2025-04-28 21:46:55.374026, timeframe=1H
2025-04-28 21:46:55.481 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:55.486 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:55.491 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:55.491 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:55.492 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:55.494 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:55.495 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:55.495 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:55.580 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:55.594 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:55.593972, end_date=2025-04-28 21:46:55.593972, timeframe=1H
2025-04-28 21:46:55.678 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:55.714 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:55.715 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:55.716 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:56.060 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:56.060 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:56.060193, end_date=2025-04-28 21:46:56.060193, timeframe=1H
2025-04-28 21:46:56.073 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:56.074 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:56.074 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:56.074 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:56.171 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:56.172 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:56.172255, end_date=2025-04-28 21:46:56.172255, timeframe=1H
2025-04-28 21:46:56.200 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:56.210 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:56.216 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:56.216 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:59.277 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:46:59.278 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:59.278145, end_date=2025-04-28 21:46:59.278145, timeframe=1H
2025-04-28 21:46:59.290 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:46:59.291 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:59.291190, end_date=2025-04-28 21:46:59.291190, timeframe=1H
2025-04-28 21:46:59.320 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:59.323 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:59.324 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:59.325 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:59.326 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:59.327 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:59.328 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:59.328 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:46:59.437 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:46:59.444 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:46:59.444958, end_date=2025-04-28 21:46:59.444958, timeframe=1H
2025-04-28 21:46:59.542 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:46:59.565 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:46:59.570 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:46:59.576 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:00.270 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:47:00.270 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:00.270525, end_date=2025-04-28 21:47:00.270525, timeframe=1H
2025-04-28 21:47:00.290 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:00.292 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:00.292 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:00.292 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:00.370 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:47:00.372 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:00.372002, end_date=2025-04-28 21:47:00.372002, timeframe=1H
2025-04-28 21:47:00.418 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:00.421 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:00.428 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:00.439 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:00.866 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:47:00.866 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:00.866917, end_date=2025-04-28 21:47:00.866917, timeframe=1H
2025-04-28 21:47:00.884 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:00.888 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:00.888 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:00.888 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:00.966 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:47:00.967 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:00.967689, end_date=2025-04-28 21:47:00.967689, timeframe=1H
2025-04-28 21:47:01.011 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:01.014 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:01.014 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:01.014 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:01.450 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:47:01.451 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:01.451173, end_date=2025-04-28 21:47:01.451173, timeframe=1H
2025-04-28 21:47:01.468 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:01.470 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:01.470 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:01.470 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:01.547 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:47:01.548 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:01.548537, end_date=2025-04-28 21:47:01.548537, timeframe=1H
2025-04-28 21:47:01.592 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:01.610 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:01.615 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:01.622 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:14.022 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:14.025 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:21.833 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:21.836 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:41.677 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:41.679 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:53.536 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:53.539 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:55.405 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:55.407 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:47:56.058 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:47:56.059 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:56.059642, end_date=2025-04-28 21:47:56.059642, timeframe=1H
2025-04-28 21:47:56.088 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:56.090 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:56.090 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:56.090 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:47:56.141 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:47:56.141 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:47:56.141890, end_date=2025-04-28 21:47:56.141890, timeframe=1H
2025-04-28 21:47:56.162 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:47:56.163 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:47:56.163 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:47:56.163 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:01.022 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:01.024 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:01.024268, end_date=2025-04-28 21:48:01.024268, timeframe=1H
2025-04-28 21:48:01.041 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:01.043 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:01.043 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:01.043 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:01.106 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:01.107 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:01.107886, end_date=2025-04-28 21:48:01.107886, timeframe=1H
2025-04-28 21:48:01.161 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:01.162 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:01.162 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:01.162 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:03.881 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:03.881 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:03.881502, end_date=2025-04-28 21:48:03.881502, timeframe=1H
2025-04-28 21:48:03.897 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:03.899 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:03.899 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:03.899 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:03.956 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:03.956 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:03.956604, end_date=2025-04-28 21:48:03.956604, timeframe=1H
2025-04-28 21:48:03.985 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:03.988 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:03.991 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:03.991 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:07.852 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:07.852 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:07.852482, end_date=2025-04-28 21:48:07.852482, timeframe=1H
2025-04-28 21:48:07.872 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:07.876 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:07.877 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:07.877 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:07.933 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:07.934 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:07.934303, end_date=2025-04-28 21:48:07.934303, timeframe=1H
2025-04-28 21:48:07.978 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:07.986 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:07.990 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:07.999 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:09.393 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:48:09.395 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:48:10.317 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:10.317 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:10.317479, end_date=2025-04-28 21:48:10.317479, timeframe=1H
2025-04-28 21:48:10.349 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:10.352 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:10.352 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:10.352 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:10.405 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:10.406 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:10.406352, end_date=2025-04-28 21:48:10.406352, timeframe=1H
2025-04-28 21:48:10.423 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:10.424 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:10.424 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:10.424 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:10.553 | ERROR    | views.visual_dashboard:update_dashboard:1502 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c0013ea4ca0>
    └ <Thread(Thread-11 (process_request_thread), started daemon 136338955036352)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c0013ea49d0>
    └ <Thread(Thread-11 (process_request_thread), started daemon 136338955036352)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 136338955036352)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 136338955036352)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7bffe41ab670>>
    └ <Thread(Thread-11 (process_request_thread), started daemon 136338955036352)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42032)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7c0013719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7bffe41ab670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7bffe41ab670>
    │    │                   │        └ ('127.0.0.1', 42032)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7bffe41ab670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c00134363b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7bffe3757b20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c00136e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7bffe3757b20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7bffe3757b20>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7bffe3fd3a90>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7bffe41ab670>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7bffe3757b20>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7bffe37763b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7bffe4073d80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7bffe3776320>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7bffe3fd3a90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7bffe3776320>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c0012ed2830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c0012ed2050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c0012ed1fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7bffe4cc0670>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7c0012ed2200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7bffe1ddd400>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10'], ['bb'], [], {...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7bffe4157c70>
                   └ <function _invoke_callback at 0x7c0012909ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'candlestick', '2025-03-29', '2025-04-28', ['close'], ['sma_10', 'ema_10'], ['bb'], [], {...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7bffe4157c70>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1484, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                     └ <function create_volatility_chart at 0x7bffe4155480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1687, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7bffe5ae6c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7bffe5cb93f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x7bffe5cb8b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7bffe5c10ae0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7c0012b76f20>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7c0012b76f20>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7c0012b76fc0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7c0012b76f20>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7c0012b76fc0>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7c0012b9f0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:48:20.337 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:20.338 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:20.338010, end_date=2025-04-28 21:48:20.338010, timeframe=1H
2025-04-28 21:48:20.355 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:20.357 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:20.358 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:20.358 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:20.445 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:20.459 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:20.459717, end_date=2025-04-28 21:48:20.459717, timeframe=1H
2025-04-28 21:48:20.497 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:20.499 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:20.499 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:20.499 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:21.438 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:48:21.440 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:48:26.512 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:26.512 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:26.512855, end_date=2025-04-28 21:48:26.512855, timeframe=1H
2025-04-28 21:48:26.545 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:26.547 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:26.547 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:26.547 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:26.582 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:26.583 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:26.583042, end_date=2025-04-28 21:48:26.583042, timeframe=1H
2025-04-28 21:48:26.600 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:26.603 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:26.604 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:26.604 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:40.189 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:48:40.190 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:40.190079, end_date=2025-04-28 21:48:40.190079, timeframe=1H
2025-04-28 21:48:40.207 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:40.209 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:40.210 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:40.211 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:40.252 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:40.253 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:40.253890, end_date=2025-04-28 21:48:40.253890, timeframe=1H
2025-04-28 21:48:40.278 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:40.289 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:40.290 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:40.290 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:45.241 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:45.241 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:45.241296, end_date=2025-04-28 21:48:45.241296, timeframe=1H
2025-04-28 21:48:45.261 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:45.265 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:45.265 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:45.265 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:45.317 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:45.318 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:45.318015, end_date=2025-04-28 21:48:45.318015, timeframe=1H
2025-04-28 21:48:45.373 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:45.383 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:45.383 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:45.384 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:48.713 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:48.714 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:48.714417, end_date=2025-04-28 21:48:48.714417, timeframe=1H
2025-04-28 21:48:48.734 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:48.736 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:48.736 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:48.736 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:48.855 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:48.878 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:48.878162, end_date=2025-04-28 21:48:48.878162, timeframe=1H
2025-04-28 21:48:48.901 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:48.903 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:48.903 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:48.920 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:50.306 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:50.309 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:50.309515, end_date=2025-04-28 21:48:50.309515, timeframe=1H
2025-04-28 21:48:50.327 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:50.329 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:50.329 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:50.329 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:50.403 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:50.407 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:50.407764, end_date=2025-04-28 21:48:50.407764, timeframe=1H
2025-04-28 21:48:50.454 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:50.456 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:50.457 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:50.458 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:51.803 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:51.803 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:51.803957, end_date=2025-04-28 21:48:51.803957, timeframe=1H
2025-04-28 21:48:51.825 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:51.826 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:51.827 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:51.827 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:51.885 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:51.886 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:51.886395, end_date=2025-04-28 21:48:51.886395, timeframe=1H
2025-04-28 21:48:51.943 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:51.952 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:51.965 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:51.965 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:52.598 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:52.599 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:52.599475, end_date=2025-04-28 21:48:52.599475, timeframe=1H
2025-04-28 21:48:52.619 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:52.621 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:52.621 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:52.622 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:52.696 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:52.697 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:52.697541, end_date=2025-04-28 21:48:52.697541, timeframe=1H
2025-04-28 21:48:52.742 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:52.744 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:52.745 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:52.746 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:53.508 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:48:53.509 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:53.509646, end_date=2025-04-28 21:48:53.509646, timeframe=1H
2025-04-28 21:48:53.523 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:53.524 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:53.524 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:53.524 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:48:53.628 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:48:53.629 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:48:53.629641, end_date=2025-04-28 21:48:53.629641, timeframe=1H
2025-04-28 21:48:53.667 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:48:53.668 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:48:53.668 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:48:53.668 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:02.473 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:49:02.475 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:49:22.329 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:49:22.330 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:22.330005, end_date=2025-04-28 21:49:22.330005, timeframe=1H
2025-04-28 21:49:22.353 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:49:22.353 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:22.353710, end_date=2025-04-28 21:49:22.353710, timeframe=1H
2025-04-28 21:49:22.401 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:22.429 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:22.434 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:22.436 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:22.439 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:22.446 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:22.446 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:22.447 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:22.493 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:49:22.494 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:22.494277, end_date=2025-04-28 21:49:22.494277, timeframe=1H
2025-04-28 21:49:22.526 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:22.529 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:22.529 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:22.529 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:24.420 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:49:24.420 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:24.420595, end_date=2025-04-28 21:49:24.420595, timeframe=1H
2025-04-28 21:49:24.435 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:24.438 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:24.438 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:24.438 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:24.572 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:49:24.572 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:24.572946, end_date=2025-04-28 21:49:24.572946, timeframe=1H
2025-04-28 21:49:24.585 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:24.586 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:24.586 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:24.586 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:25.260 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:49:25.260 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:25.260526, end_date=2025-04-28 21:49:25.260526, timeframe=1H
2025-04-28 21:49:25.278 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:25.280 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:25.281 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:49:25.283 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:25.283910, end_date=2025-04-28 21:49:25.283910, timeframe=1H
2025-04-28 21:49:25.281 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:25.285 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:25.308 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:25.312 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:25.313 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:25.313 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:49:25.374 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:49:25.458 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:49:25.458289, end_date=2025-04-28 21:49:25.458289, timeframe=1H
2025-04-28 21:49:25.551 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:49:25.574 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:49:25.606 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:49:25.607 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:25.260 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: source-dropdown
2025-04-28 21:50:25.261 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:50:25.261491, end_date=2025-04-28 21:50:25.261491, timeframe=1H
2025-04-28 21:50:25.280 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 697 rows
2025-04-28 21:50:25.281 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:25.281 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (697, 6)
2025-04-28 21:50:25.281 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:25.368 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:50:25.394 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:50:25.393979, end_date=2025-04-28 21:50:25.393979, timeframe=1H
2025-04-28 21:50:25.430 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 697 rows
2025-04-28 21:50:25.431 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 22:00:00'), 1: Timestamp('2025-03-29 23:00:00'), 2: Timestamp('2025-03-30 00:00:00'), 3: Timestamp('2025-03-30 01:00:00'), 4: Timestamp('2025-03-30 02:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:25.431 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (697, 6)
2025-04-28 21:50:25.431 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:27.756 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:50:27.758 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:50:32.194 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: source-dropdown
2025-04-28 21:50:32.194 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:32.194327, end_date=2025-04-28 21:50:32.194327, timeframe=1H
2025-04-28 21:50:32.226 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:50:32.228 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:32.228 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:50:32.228 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:32.271 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:50:32.271 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:32.271613, end_date=2025-04-28 21:50:32.271613, timeframe=1H
2025-04-28 21:50:32.291 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:50:32.297 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:32.297 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:50:32.297 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:33.529 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:50:33.529 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:33.529301, end_date=2025-04-28 21:50:33.529301, timeframe=4H
2025-04-28 21:50:33.544 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 157 rows
2025-04-28 21:50:33.547 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:33.547 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (157, 6)
2025-04-28 21:50:33.548 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:33.647 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:50:33.662 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:33.662747, end_date=2025-04-28 21:50:33.662747, timeframe=4H
2025-04-28 21:50:33.675 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 157 rows
2025-04-28 21:50:33.676 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:33.676 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (157, 6)
2025-04-28 21:50:33.676 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:34.589 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:50:34.589 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:34.589914, end_date=2025-04-28 21:50:34.589914, timeframe=1H
2025-04-28 21:50:34.606 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:50:34.608 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:34.608 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:50:34.608 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:34.714 | INFO     | views.visual_dashboard:update_dashboard:1333 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:50:34.714 | INFO     | views.visual_dashboard:update_dashboard:1395 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:50:34.714952, end_date=2025-04-28 21:50:34.714952, timeframe=1H
2025-04-28 21:50:34.744 | INFO     | views.visual_dashboard:get_price_data:917 - Returning dataframe with 623 rows
2025-04-28 21:50:34.753 | INFO     | views.visual_dashboard:update_dashboard:1436 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:50:34.753 | INFO     | views.visual_dashboard:update_dashboard:1437 - DataFrame shape: (623, 6)
2025-04-28 21:50:34.753 | INFO     | views.visual_dashboard:update_dashboard:1438 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:50:56.108 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:50:56.108 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:50:56.108 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 21:50:56.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 21:50:58.756 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:50:58.758 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:10.619 | INFO     | views.visual_dashboard:update_dashboard:1322 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:10.620 | INFO     | views.visual_dashboard:update_dashboard:1384 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:10.620812, end_date=2025-04-28 21:51:10.620812, timeframe=1H
2025-04-28 21:51:10.663 | INFO     | views.visual_dashboard:get_price_data:906 - Returning dataframe with 623 rows
2025-04-28 21:51:10.666 | INFO     | views.visual_dashboard:update_dashboard:1425 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:10.666 | INFO     | views.visual_dashboard:update_dashboard:1426 - DataFrame shape: (623, 6)
2025-04-28 21:51:10.666 | INFO     | views.visual_dashboard:update_dashboard:1427 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:10.724 | INFO     | views.visual_dashboard:update_dashboard:1322 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:10.725 | INFO     | views.visual_dashboard:update_dashboard:1384 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:10.725235, end_date=2025-04-28 21:51:10.725235, timeframe=1H
2025-04-28 21:51:10.747 | INFO     | views.visual_dashboard:get_price_data:906 - Returning dataframe with 623 rows
2025-04-28 21:51:10.748 | INFO     | views.visual_dashboard:update_dashboard:1425 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:10.749 | INFO     | views.visual_dashboard:update_dashboard:1426 - DataFrame shape: (623, 6)
2025-04-28 21:51:10.749 | INFO     | views.visual_dashboard:update_dashboard:1427 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:12.674 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:12.677 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:19.778 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:19.780 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:19.780302, end_date=2025-04-28 21:51:19.780302, timeframe=1H
2025-04-28 21:51:19.811 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:19.812 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:19.812 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:19.812 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:19.866 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:19.866 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:19.866672, end_date=2025-04-28 21:51:19.866672, timeframe=1H
2025-04-28 21:51:19.885 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:19.887 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:19.888 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:19.888 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:20.000 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:20.000 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:20.000779, end_date=2025-04-28 21:51:20.000779, timeframe=1H
2025-04-28 21:51:20.021 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:51:20.022 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:20.021991, end_date=2025-04-28 21:51:20.021991, timeframe=1H
2025-04-28 21:51:20.031 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:20.035 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:20.035 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:20.035 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:20.099 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:20.101 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:20.101651, end_date=2025-04-28 21:51:20.101651, timeframe=1H
2025-04-28 21:51:20.102 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:20.107 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:20.111 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:20.111 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:20.192 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:20.195 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:20.195 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:20.195 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:24.411 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:24.413 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:24.413063, end_date=2025-04-28 21:51:24.413063, timeframe=1H
2025-04-28 21:51:24.415 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:51:24.420 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:24.420962, end_date=2025-04-28 21:51:24.420962, timeframe=1H
2025-04-28 21:51:24.441 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:24.446 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:24.447 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:24.447 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:24.453 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:24.455 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:24.455 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:24.455 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:24.625 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:24.666 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:24.666283, end_date=2025-04-28 21:51:24.666283, timeframe=1H
2025-04-28 21:51:24.723 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:24.727 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:24.727801, end_date=2025-04-28 21:51:24.727801, timeframe=1H
2025-04-28 21:51:24.813 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:24.840 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:24.843 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:24.844 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:24.864 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:24.874 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:24.891 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:24.891320, end_date=2025-04-28 21:51:24.891320, timeframe=1H
2025-04-28 21:51:24.901 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:24.904 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:24.907 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:24.947 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:24.967 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:24.971 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:24.972 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:25.842 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:25.844 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:27.003 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:27.004 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:27.003986, end_date=2025-04-28 21:51:27.003986, timeframe=1H
2025-04-28 21:51:27.037 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:27.038 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:27.038 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:27.038 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:27.091 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:27.091 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:27.091621, end_date=2025-04-28 21:51:27.091621, timeframe=1H
2025-04-28 21:51:27.108 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:27.110 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:27.110 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:27.110 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:27.215 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:27.216 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:27.216816, end_date=2025-04-28 21:51:27.216816, timeframe=1H
2025-04-28 21:51:27.230 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:51:27.231 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:27.231801, end_date=2025-04-28 21:51:27.231801, timeframe=1H
2025-04-28 21:51:27.255 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:27.265 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:27.267 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:27.269 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:27.287 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:27.295 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:27.295408, end_date=2025-04-28 21:51:27.295408, timeframe=1H
2025-04-28 21:51:27.308 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:27.309 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:27.310 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:27.311 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:27.370 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:27.395 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:27.399 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:27.399 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:31.477 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:51:31.478 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:31.478405, end_date=2025-04-28 21:51:31.478405, timeframe=1H
2025-04-28 21:51:31.492 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:31.494 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:31.494 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:31.494 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:31.551 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:31.623 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:31.623311, end_date=2025-04-28 21:51:31.623311, timeframe=1H
2025-04-28 21:51:31.674 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:31.690 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:31.698 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:31.700 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:34.167 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:34.167 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:34.167760, end_date=2025-04-28 21:51:34.167760, timeframe=1H
2025-04-28 21:51:34.184 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:34.185 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:34.186 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:34.186 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:34.272 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:34.274 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:34.274132, end_date=2025-04-28 21:51:34.274132, timeframe=1H
2025-04-28 21:51:34.330 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:34.332 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:34.332 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:34.332 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:35.868 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:35.868 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:35.868378, end_date=2025-04-28 21:51:35.868378, timeframe=1H
2025-04-28 21:51:35.883 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:35.885 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:35.885 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:35.885 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:36.005 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:36.011 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:36.011227, end_date=2025-04-28 21:51:36.011227, timeframe=1H
2025-04-28 21:51:36.040 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:36.042 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:36.054 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:36.054 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:36.714 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:36.714 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:36.714764, end_date=2025-04-28 21:51:36.714764, timeframe=1H
2025-04-28 21:51:36.731 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:36.733 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:36.733 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:36.733 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:36.818 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:36.819 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:36.819139, end_date=2025-04-28 21:51:36.819139, timeframe=1H
2025-04-28 21:51:36.867 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:36.869 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:36.869 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:36.869 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:37.821 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:37.823 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:39.684 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:39.686 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:39.686105, end_date=2025-04-28 21:51:39.686105, timeframe=1H
2025-04-28 21:51:39.716 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:39.718 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:39.718 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:39.718 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:39.764 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:39.770 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:39.770104, end_date=2025-04-28 21:51:39.770104, timeframe=1H
2025-04-28 21:51:39.788 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:39.789 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:39.790 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:39.790 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:40.848 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:40.848 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:40.848294, end_date=2025-04-28 21:51:40.848294, timeframe=1H
2025-04-28 21:51:40.866 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:40.870 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:40.871 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:40.871 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:40.982 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:40.983 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:40.983663, end_date=2025-04-28 21:51:40.983663, timeframe=1H
2025-04-28 21:51:41.025 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:41.027 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:41.027 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:41.027 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:42.251 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:42.251 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:42.251905, end_date=2025-04-28 21:51:42.251905, timeframe=1H
2025-04-28 21:51:42.271 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:42.273 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:42.273 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:42.273 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:42.350 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:42.351 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:42.351056, end_date=2025-04-28 21:51:42.351056, timeframe=1H
2025-04-28 21:51:42.398 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:42.400 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:42.400 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:42.401 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:43.601 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:43.602 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:43.602111, end_date=2025-04-28 21:51:43.602111, timeframe=1H
2025-04-28 21:51:43.619 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:43.624 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:43.624 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:43.625 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:43.703 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:43.718 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:43.718444, end_date=2025-04-28 21:51:43.718444, timeframe=1H
2025-04-28 21:51:43.748 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:43.754 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:43.755 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:43.755 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:45.458 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:45.459 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:45.459019, end_date=2025-04-28 21:51:45.459019, timeframe=1H
2025-04-28 21:51:45.479 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:45.482 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:45.482 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:45.482 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:45.569 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:45.569 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:45.569725, end_date=2025-04-28 21:51:45.569725, timeframe=1H
2025-04-28 21:51:45.609 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:45.628 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:45.629 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:45.629 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:46.265 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:46.265 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:46.265921, end_date=2025-04-28 21:51:46.265921, timeframe=1H
2025-04-28 21:51:46.282 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:46.283 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:46.285 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:46.286 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:46.353 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:46.359 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:46.359154, end_date=2025-04-28 21:51:46.359154, timeframe=1H
2025-04-28 21:51:46.412 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:46.414 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:46.414 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:46.414 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:47.404 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:47.404 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:47.404327, end_date=2025-04-28 21:51:47.404327, timeframe=1H
2025-04-28 21:51:47.423 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:47.425 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:47.425 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:47.425 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:47.480 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:47.498 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:47.498206, end_date=2025-04-28 21:51:47.498206, timeframe=1H
2025-04-28 21:51:47.520 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:47.521 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:47.521 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:47.521 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:48.192 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:51:48.192 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:48.192575, end_date=2025-04-28 21:51:48.192575, timeframe=1H
2025-04-28 21:51:48.210 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:48.212 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:48.213 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:48.213 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:48.276 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:51:48.292 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:51:48.292833, end_date=2025-04-28 21:51:48.292833, timeframe=1H
2025-04-28 21:51:48.339 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:51:48.351 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:51:48.351 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:51:48.351 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:51:54.953 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:54.956 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:57.774 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:51:57.776 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:52:16.641 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:52:16.643 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:52:19.240 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:19.240 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:19.240872, end_date=2025-04-28 21:52:19.240872, timeframe=1H
2025-04-28 21:52:19.271 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:19.273 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:19.273 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:19.273 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:19.325 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:19.325 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:19.325832, end_date=2025-04-28 21:52:19.325832, timeframe=1H
2025-04-28 21:52:19.344 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:19.348 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:19.349 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:19.349 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:26.448 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:26.449 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:26.449065, end_date=2025-04-28 21:52:26.449065, timeframe=1H
2025-04-28 21:52:26.469 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:26.471 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:26.471 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:26.471 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:26.536 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:26.544 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:26.544022, end_date=2025-04-28 21:52:26.544022, timeframe=1H
2025-04-28 21:52:26.565 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:26.567 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:26.579 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:26.586 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:27.090 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:27.091 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:27.091214, end_date=2025-04-28 21:52:27.091214, timeframe=1H
2025-04-28 21:52:27.110 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:27.111 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:27.112 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:27.112 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:27.192 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:27.207 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:27.207206, end_date=2025-04-28 21:52:27.207206, timeframe=1H
2025-04-28 21:52:27.263 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:27.264 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:27.264 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:27.264 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:34.441 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:34.441 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:34.441391, end_date=2025-04-28 21:52:34.441391, timeframe=1H
2025-04-28 21:52:34.463 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:34.465 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:34.465 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:34.465 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:34.506 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:34.518 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:34.518298, end_date=2025-04-28 21:52:34.518298, timeframe=1H
2025-04-28 21:52:34.550 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:34.552 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:34.552 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:34.553 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:34.961 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:34.961 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:34.961362, end_date=2025-04-28 21:52:34.961362, timeframe=1H
2025-04-28 21:52:34.978 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:34.983 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:34.983 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:34.983 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:35.069 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:35.076 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:35.076665, end_date=2025-04-28 21:52:35.076665, timeframe=1H
2025-04-28 21:52:35.111 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:35.113 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:35.113 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:35.113 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:36.017 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:36.018 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:36.018051, end_date=2025-04-28 21:52:36.018051, timeframe=1H
2025-04-28 21:52:36.042 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:36.045 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:36.045 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:36.045 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:36.123 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:36.123 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:36.123448, end_date=2025-04-28 21:52:36.123448, timeframe=1H
2025-04-28 21:52:36.170 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:36.186 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:36.193 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:36.193 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:36.601 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:52:36.601 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:36.601871, end_date=2025-04-28 21:52:36.601871, timeframe=1H
2025-04-28 21:52:36.618 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:36.620 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:36.620 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:36.620 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:36.731 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:52:36.731 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:52:36.731537, end_date=2025-04-28 21:52:36.731537, timeframe=1H
2025-04-28 21:52:36.757 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:52:36.764 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:52:36.764 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:52:36.764 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:52:42.686 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:52:42.689 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:53:09.294 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:53:09.294 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:09.294943, end_date=2025-04-28 21:53:09.294943, timeframe=4H
2025-04-28 21:53:09.324 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 157 rows
2025-04-28 21:53:09.328 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:09.328 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (157, 6)
2025-04-28 21:53:09.328 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:09.370 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:09.371 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:09.371038, end_date=2025-04-28 21:53:09.371038, timeframe=4H
2025-04-28 21:53:09.386 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 157 rows
2025-04-28 21:53:09.388 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:09.389 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (157, 6)
2025-04-28 21:53:09.389 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:11.819 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:53:11.820 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:11.820263, end_date=2025-04-28 21:53:11.820263, timeframe=1H
2025-04-28 21:53:11.836 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:53:11.838 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:11.838 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:53:11.838 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:11.921 | INFO     | views.visual_dashboard:update_dashboard:1311 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:11.924 | INFO     | views.visual_dashboard:update_dashboard:1373 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:11.924491, end_date=2025-04-28 21:53:11.924491, timeframe=1H
2025-04-28 21:53:11.972 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 623 rows
2025-04-28 21:53:11.986 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:11.987 | INFO     | views.visual_dashboard:update_dashboard:1415 - DataFrame shape: (623, 6)
2025-04-28 21:53:11.994 | INFO     | views.visual_dashboard:update_dashboard:1416 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:18.668 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:53:18.671 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:53:27.495 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:53:27.497 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:53:28.495 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:28.495 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:28.495471, end_date=2025-04-28 21:53:28.495471, timeframe=1H
2025-04-28 21:53:28.526 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:28.527 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:28.527825, end_date=2025-04-28 21:53:28.527825, timeframe=1H
2025-04-28 21:53:28.533 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:28.536 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:28.537 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:28.537 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:28.572 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:28.586 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:28.593 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:28.594 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:28.599 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:28.599785, end_date=2025-04-28 21:53:28.599785, timeframe=1H
2025-04-28 21:53:28.606 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:28.650 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:28.652 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:28.652 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:28.652 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:31.050 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:31.051 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:31.051396, end_date=2025-04-28 21:53:31.051396, timeframe=1H
2025-04-28 21:53:31.068 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:31.070 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:31.070 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:31.070 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:31.176 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:31.176 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:31.176817, end_date=2025-04-28 21:53:31.176817, timeframe=1H
2025-04-28 21:53:31.223 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:31.224 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:31.230 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:31.232 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:31.350 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:31.365 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:31.365196, end_date=2025-04-28 21:53:31.365196, timeframe=1H
2025-04-28 21:53:31.402 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:31.403 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:31.403477, end_date=2025-04-28 21:53:31.403477, timeframe=1H
2025-04-28 21:53:31.430 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:31.441 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:31.442 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:31.443 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:31.444 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:31.445 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:31.446 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:31.449 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:31.471 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:31.471 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:31.471446, end_date=2025-04-28 21:53:31.471446, timeframe=1H
2025-04-28 21:53:31.593 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:31.637 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:31.660 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:31.668 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:34.188 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:34.189 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:34.188967, end_date=2025-04-28 21:53:34.188967, timeframe=1H
2025-04-28 21:53:34.204 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:34.206 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:34.206 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:34.206469, end_date=2025-04-28 21:53:34.206469, timeframe=1H
2025-04-28 21:53:34.207 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:34.216 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:34.217 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:34.268 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:34.284 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:34.308 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:34.309 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:34.337 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:34.337 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:34.337792, end_date=2025-04-28 21:53:34.337792, timeframe=1H
2025-04-28 21:53:34.392 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:34.420 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:34.435 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:34.438 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:36.861 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:36.862 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:36.862388, end_date=2025-04-28 21:53:36.862388, timeframe=1H
2025-04-28 21:53:36.865 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:36.870 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:36.870449, end_date=2025-04-28 21:53:36.870449, timeframe=1H
2025-04-28 21:53:36.887 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:36.889 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:36.889 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:36.889 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:36.904 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:36.907 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:36.909 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:36.909 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:37.008 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:37.018 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:37.017967, end_date=2025-04-28 21:53:37.017967, timeframe=1H
2025-04-28 21:53:37.095 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:37.097 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:37.097 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:37.097 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:37.751 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:37.753 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:37.753201, end_date=2025-04-28 21:53:37.753201, timeframe=1H
2025-04-28 21:53:37.770 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:37.771 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:37.771 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:37.772 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:37.859 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:37.876 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:37.876357, end_date=2025-04-28 21:53:37.876357, timeframe=1H
2025-04-28 21:53:37.931 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:37.933 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:37.933 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:37.933 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:40.896 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:40.896 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:40.896967, end_date=2025-04-28 21:53:40.896967, timeframe=1H
2025-04-28 21:53:40.913 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:40.916 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:40.916 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:40.917 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:41.060 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:41.061 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:41.061648, end_date=2025-04-28 21:53:41.061648, timeframe=1H
2025-04-28 21:53:41.115 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:41.134 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:41.137 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:41.144 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:41.567 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:41.567 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:41.567590, end_date=2025-04-28 21:53:41.567590, timeframe=1H
2025-04-28 21:53:41.583 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:41.584 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:41.584 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:41.584 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:41.698 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:41.699 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:41.699399, end_date=2025-04-28 21:53:41.699399, timeframe=1H
2025-04-28 21:53:41.740 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:41.741 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:41.742 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:41.742 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:42.233 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:42.233 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:42.233822, end_date=2025-04-28 21:53:42.233822, timeframe=1H
2025-04-28 21:53:42.254 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:42.257 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:42.258 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:42.258 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:42.341 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:42.342 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:42.342568, end_date=2025-04-28 21:53:42.342568, timeframe=1H
2025-04-28 21:53:42.391 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:42.393 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:42.394 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:42.394 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:42.792 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:42.793 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:42.793010, end_date=2025-04-28 21:53:42.793010, timeframe=1H
2025-04-28 21:53:42.809 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:42.810 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:42.812 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:42.812 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:42.890 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:42.892 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:42.892093, end_date=2025-04-28 21:53:42.892093, timeframe=1H
2025-04-28 21:53:42.926 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:42.936 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:42.938 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:42.938 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:43.390 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:43.390 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:43.390877, end_date=2025-04-28 21:53:43.390877, timeframe=1H
2025-04-28 21:53:43.412 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:43.414 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:43.415 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:43.415 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:43.492 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:43.492 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:43.492162, end_date=2025-04-28 21:53:43.492162, timeframe=1H
2025-04-28 21:53:43.548 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:43.562 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:43.567 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:43.567 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:43.914 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:43.914 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:43.914810, end_date=2025-04-28 21:53:43.914810, timeframe=1H
2025-04-28 21:53:43.930 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:43.931 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:43.931 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:43.931 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:44.044 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:44.045 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:44.045491, end_date=2025-04-28 21:53:44.045491, timeframe=1H
2025-04-28 21:53:44.062 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:44.064 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:44.071 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:44.071 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:44.363 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:44.363 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:44.363226, end_date=2025-04-28 21:53:44.363226, timeframe=1H
2025-04-28 21:53:44.378 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:44.379 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:44.380 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:44.380 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:44.548 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:44.566 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:44.566607, end_date=2025-04-28 21:53:44.566607, timeframe=1H
2025-04-28 21:53:44.600 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:44.611 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:44.611 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:44.611 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:45.556 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:45.558 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:45.558440, end_date=2025-04-28 21:53:45.558440, timeframe=1H
2025-04-28 21:53:45.576 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:45.578 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:45.579 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:45.580 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:45.580027, end_date=2025-04-28 21:53:45.580027, timeframe=1H
2025-04-28 21:53:45.581 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:45.591 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:45.610 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:45.614 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:45.615 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:45.625 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:45.644 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:45.645 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:45.645743, end_date=2025-04-28 21:53:45.645743, timeframe=1H
2025-04-28 21:53:45.726 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:45.728 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:45.728 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:45.728 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:47.565 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:47.566 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:47.566038, end_date=2025-04-28 21:53:47.566038, timeframe=1H
2025-04-28 21:53:47.583 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:47.584 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:47.585 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:47.585 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:47.674 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:47.698 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:47.698214, end_date=2025-04-28 21:53:47.698214, timeframe=1H
2025-04-28 21:53:47.739 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:47.742 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:47.742 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:47.743 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:49.035 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:49.035 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:49.035331, end_date=2025-04-28 21:53:49.035331, timeframe=1H
2025-04-28 21:53:49.053 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:49.057 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:49.057 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:49.057 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:49.136 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:49.137 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:49.137223, end_date=2025-04-28 21:53:49.137223, timeframe=1H
2025-04-28 21:53:49.182 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:49.190 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:49.195 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:49.200 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:49.618 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:49.618 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:49.618500, end_date=2025-04-28 21:53:49.618500, timeframe=1H
2025-04-28 21:53:49.637 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:49.638 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:49.639 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:49.639 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:49.734 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:49.745 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:49.745428, end_date=2025-04-28 21:53:49.745428, timeframe=1H
2025-04-28 21:53:49.794 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:49.795 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:49.795 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:49.795 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:50.249 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:50.250 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:50.250137, end_date=2025-04-28 21:53:50.250137, timeframe=1H
2025-04-28 21:53:50.268 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:50.271 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:50.271 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:50.272 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:50.353 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:50.355 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:50.355369, end_date=2025-04-28 21:53:50.355369, timeframe=1H
2025-04-28 21:53:50.398 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:50.400 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:50.400 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:50.420 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:50.885 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:53:50.885 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:50.885909, end_date=2025-04-28 21:53:50.885909, timeframe=1H
2025-04-28 21:53:50.971 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:50.972 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:50.972 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:50.972 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:51.064 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:51.064 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:51.064613, end_date=2025-04-28 21:53:51.064613, timeframe=1H
2025-04-28 21:53:51.140 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:51.141 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:51.142 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:51.142 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:53.456 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:53.458 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:53.458399, end_date=2025-04-28 21:53:53.458399, timeframe=1H
2025-04-28 21:53:53.472 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:53.473 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:53.473890, end_date=2025-04-28 21:53:53.473890, timeframe=1H
2025-04-28 21:53:53.476 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:53.487 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:53.487 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:53.487 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:53.505 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:53.508 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:53.510 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:53.510 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:53.555 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:53.568 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:53.568945, end_date=2025-04-28 21:53:53.568945, timeframe=1H
2025-04-28 21:53:53.674 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:53.695 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:53.705 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:53.714 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:53.804 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:53.819 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:53.819817, end_date=2025-04-28 21:53:53.819817, timeframe=1H
2025-04-28 21:53:53.871 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:53.876 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:53.876291, end_date=2025-04-28 21:53:53.876291, timeframe=1H
2025-04-28 21:53:53.921 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:53.962 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:53.966 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:53.966 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:53.986 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:53.991 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:54.022 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:54.048 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:54.064 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:54.079 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.079382, end_date=2025-04-28 21:53:54.079382, timeframe=1H
2025-04-28 21:53:54.189 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:54.233 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:54.249 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:54.262 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:54.502 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:54.503 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.503329, end_date=2025-04-28 21:53:54.503329, timeframe=1H
2025-04-28 21:53:54.518 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:54.518 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:54.520 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:54.521 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.521566, end_date=2025-04-28 21:53:54.521566, timeframe=1H
2025-04-28 21:53:54.521 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:54.535 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:54.547 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:54.550 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:54.550 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:54.551 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:54.649 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:54.653 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.653395, end_date=2025-04-28 21:53:54.653395, timeframe=1H
2025-04-28 21:53:54.714 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:54.714 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.714452, end_date=2025-04-28 21:53:54.714452, timeframe=1H
2025-04-28 21:53:54.885 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:54.888 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:54.888525, end_date=2025-04-28 21:53:54.888525, timeframe=1H
2025-04-28 21:53:54.899 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:54.930 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:54.932 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:54.940 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.016 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.019 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.033 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.033 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.080 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.112 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.114 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.115 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.116 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:55.120 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:55.120757, end_date=2025-04-28 21:53:55.120757, timeframe=1H
2025-04-28 21:53:55.212 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.246 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.259 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:53:55.268 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.283 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:55.283878, end_date=2025-04-28 21:53:55.283878, timeframe=1H
2025-04-28 21:53:55.290 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.333 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:55.346 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:55.346052, end_date=2025-04-28 21:53:55.346052, timeframe=1H
2025-04-28 21:53:55.523 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.551 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.552 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.553 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.652 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.676 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.677 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.680 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:55.718 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:55.725 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:55.724965, end_date=2025-04-28 21:53:55.724965, timeframe=1H
2025-04-28 21:53:55.787 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:53:55.795 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:55.794927, end_date=2025-04-28 21:53:55.794927, timeframe=1H
2025-04-28 21:53:55.873 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:55.937 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:55.946 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:55.951 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:56.030 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:56.055 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:56.063 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:56.091 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:53:56.109 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:53:56.135 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:53:56.135675, end_date=2025-04-28 21:53:56.135675, timeframe=1H
2025-04-28 21:53:56.260 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:53:56.263 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:53:56.276 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:53:56.278 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:54:19.138 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:54:19.138 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:54:19.138182, end_date=2025-04-28 21:54:19.138182, timeframe=4H
2025-04-28 21:54:19.155 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:54:19.156 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:54:19.157 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:54:19.157 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:54:19.353 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:54:19.354 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:54:19.354552, end_date=2025-04-28 21:54:19.354552, timeframe=4H
2025-04-28 21:54:19.368 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:54:19.370 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:54:19.370 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:54:19.370 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:54:42.668 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:54:42.670 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:55:23.721 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:55:23.723 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:55:23.785 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:23.785 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:23.785971, end_date=2025-04-28 21:55:23.785971, timeframe=4H
2025-04-28 21:55:23.799 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:23.813 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:23.813147, end_date=2025-04-28 21:55:23.813147, timeframe=4H
2025-04-28 21:55:23.828 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:23.829 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:23.830 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:23.831 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:23.872 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:23.874 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:23.875 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:23.876 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:23.906 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:23.907 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:23.907138, end_date=2025-04-28 21:55:23.907138, timeframe=4H
2025-04-28 21:55:23.924 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:23.926 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:23.926 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:23.926 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:33.616 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:55:33.618 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:55:36.479 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:36.482 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:36.483 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:36.483780, end_date=2025-04-28 21:55:36.483780, timeframe=4H
2025-04-28 21:55:36.483 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:36.483966, end_date=2025-04-28 21:55:36.483966, timeframe=4H
2025-04-28 21:55:36.528 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:36.529 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:36.530 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:36.531 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:36.531 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:36.531 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:36.531 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:36.531 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:36.601 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:36.602 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:36.602098, end_date=2025-04-28 21:55:36.602098, timeframe=4H
2025-04-28 21:55:36.616 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:36.686 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:36.686 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:36.686 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:38.884 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:38.885 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:38.885972, end_date=2025-04-28 21:55:38.885972, timeframe=4H
2025-04-28 21:55:38.902 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:38.905 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:38.905478, end_date=2025-04-28 21:55:38.905478, timeframe=4H
2025-04-28 21:55:38.906 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:38.918 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:38.921 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:38.921 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:38.964 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:38.972 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.003 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.012 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:39.074 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:39.081 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.081147, end_date=2025-04-28 21:55:39.081147, timeframe=4H
2025-04-28 21:55:39.167 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:39.188 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.188467, end_date=2025-04-28 21:55:39.188467, timeframe=4H
2025-04-28 21:55:39.215 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:39.217 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.232 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.232422, end_date=2025-04-28 21:55:39.232422, timeframe=4H
2025-04-28 21:55:39.255 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.256 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.257 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:39.395 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.429 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.442 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.462 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:39.533 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.541 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:39.542 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.542759, end_date=2025-04-28 21:55:39.542759, timeframe=4H
2025-04-28 21:55:39.544 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.546 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.554 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:39.640 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:39.668 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.668256, end_date=2025-04-28 21:55:39.668256, timeframe=4H
2025-04-28 21:55:39.676 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.728 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.742 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.744 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:39.860 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:39.860 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:39.860466, end_date=2025-04-28 21:55:39.860466, timeframe=4H
2025-04-28 21:55:39.938 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.967 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:39.976 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:39.981 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:39.982 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:40.001 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:40.002 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:40.002 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:41.346 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:41.347 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:41.347011, end_date=2025-04-28 21:55:41.347011, timeframe=4H
2025-04-28 21:55:41.373 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:41.375 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:41.376 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:41.376 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:41.486 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:41.488 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:41.488190, end_date=2025-04-28 21:55:41.488190, timeframe=4H
2025-04-28 21:55:41.519 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:41.522 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:41.522 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:41.522 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:41.892 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:41.894 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:41.894170, end_date=2025-04-28 21:55:41.894170, timeframe=4H
2025-04-28 21:55:41.911 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:41.913 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:41.914 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:41.914 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:42.034 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:42.035 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:42.035246, end_date=2025-04-28 21:55:42.035246, timeframe=4H
2025-04-28 21:55:42.049 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:42.050 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:42.050 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:42.051 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:42.935 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:55:42.935 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:42.935763, end_date=2025-04-28 21:55:42.935763, timeframe=4H
2025-04-28 21:55:42.951 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:42.953 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:42.954 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:42.955 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:43.061 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:43.063 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:43.063898, end_date=2025-04-28 21:55:43.063898, timeframe=4H
2025-04-28 21:55:43.093 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:43.095 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:43.095 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:43.095 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:44.325 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:44.325 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:44.325186, end_date=2025-04-28 21:55:44.325186, timeframe=4H
2025-04-28 21:55:44.338 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:44.340 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:44.340 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:44.340 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:44.360 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:44.361 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:44.361616, end_date=2025-04-28 21:55:44.361616, timeframe=4H
2025-04-28 21:55:44.461 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:44.463 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:44.464 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:44.464 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:44.563 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:44.586 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:44.586106, end_date=2025-04-28 21:55:44.586106, timeframe=4H
2025-04-28 21:55:44.629 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:44.630 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:44.630 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:44.630 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:44.917 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:55:44.920 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:44.920002, end_date=2025-04-28 21:55:44.920002, timeframe=4H
2025-04-28 21:55:44.934 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:44.935 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:44.935 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:44.935 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:44.998 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:55:44.998 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:44.998858, end_date=2025-04-28 21:55:44.998858, timeframe=4H
2025-04-28 21:55:45.082 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:45.086 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:45.093 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:45.093 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:55:45.121 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:55:45.146 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:55:45.146648, end_date=2025-04-28 21:55:45.146648, timeframe=4H
2025-04-28 21:55:45.229 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:55:45.234 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:55:45.234 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:55:45.234 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:35.577 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: source-dropdown
2025-04-28 21:56:35.577 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:35.577561, end_date=2025-04-28 21:56:35.577561, timeframe=4H
2025-04-28 21:56:35.597 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:35.599 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:35.599 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:35.599 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:35.718 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:56:35.731 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:35.731213, end_date=2025-04-28 21:56:35.731213, timeframe=4H
2025-04-28 21:56:35.751 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:35.753 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:35.754 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:35.754 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:52.420 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:56:52.422 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:56:54.983 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 21:56:54.983 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:54.983661, end_date=2025-04-28 21:56:54.983661, timeframe=4H
2025-04-28 21:56:55.026 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:55.028 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:55.028 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:55.028 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:55.111 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:56:55.112 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:55.111990, end_date=2025-04-28 21:56:55.111990, timeframe=4H
2025-04-28 21:56:55.128 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:55.129 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:55.130 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:55.130 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:56.087 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 21:56:56.087 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:56.087531, end_date=2025-04-28 21:56:56.087531, timeframe=4H
2025-04-28 21:56:56.108 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:56.112 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:56.112 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:56.112 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:56.245 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:56:56.245 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:56.245339, end_date=2025-04-28 21:56:56.245339, timeframe=4H
2025-04-28 21:56:56.259 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:56.260 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:56.260 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:56.260 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:57.007 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 21:56:57.007 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:57.007719, end_date=2025-04-28 21:56:57.007719, timeframe=4H
2025-04-28 21:56:57.024 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:57.025 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:57.025 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:57.025 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:57.149 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:56:57.150 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:57.150164, end_date=2025-04-28 21:56:57.150164, timeframe=4H
2025-04-28 21:56:57.166 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:57.168 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:57.168 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:57.168 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:57.806 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 21:56:57.806 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:57.806668, end_date=2025-04-28 21:56:57.806668, timeframe=4H
2025-04-28 21:56:57.825 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:57.828 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:57.828 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:57.828 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:56:57.943 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:56:57.944 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 21:56:57.944317, end_date=2025-04-28 21:56:57.944317, timeframe=4H
2025-04-28 21:56:57.979 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 175 rows
2025-04-28 21:56:57.981 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 20:00:00'), 1: Timestamp('2025-03-30 00:00:00'), 2: Timestamp('2025-03-30 04:00:00'), 3: Timestamp('2025-03-30 08:00:00'), 4: Timestamp('2025-03-30 12:00:00')}, 'open_price': {0: 4219.09, 1: 4131.2, 2: 4131.2, 3: 4131.2, 4: 4131.2}, 'high_price': {0: 4229.21, 1: 4175.45, 2: 4175.45, 3: 4175.45, 4: 4175.45}, 'low_price': {0: 4080.45, 1: 4076.94, 2: 4076.94, 3: 4076.94, 4: 4076.94}, 'close_price': {0: 4130.84, 1: 4119.0, 2: 4119.0, 3: 4119.0, 4: 4119.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:56:57.981 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (175, 6)
2025-04-28 21:56:57.981 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:02.123 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: source-dropdown
2025-04-28 21:57:02.124 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:02.123988, end_date=2025-04-28 21:57:02.123988, timeframe=4H
2025-04-28 21:57:02.141 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:57:02.143 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:02.143 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:57:02.143 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:02.248 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:02.262 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:02.262384, end_date=2025-04-28 21:57:02.262384, timeframe=4H
2025-04-28 21:57:02.283 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 21:57:02.285 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:02.285 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 21:57:02.286 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:08.106 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 21:57:08.106 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:08.106753, end_date=2025-04-28 21:57:08.106753, timeframe=1H
2025-04-28 21:57:08.124 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:08.126 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:08.126 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:08.126 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:08.213 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:08.214 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:08.213982, end_date=2025-04-28 21:57:08.213982, timeframe=1H
2025-04-28 21:57:08.236 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:08.259 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:08.259 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:08.259 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:14.018 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:14.019 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:14.019156, end_date=2025-04-28 21:57:14.019156, timeframe=1H
2025-04-28 21:57:14.039 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:14.041 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:14.041 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:14.041 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:14.118 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:14.119 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:14.119167, end_date=2025-04-28 21:57:14.119167, timeframe=1H
2025-04-28 21:57:14.144 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:14.146 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:14.146 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:14.147 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:20.023 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:20.023 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:20.023450, end_date=2025-04-28 21:57:20.023450, timeframe=1H
2025-04-28 21:57:20.040 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:20.050 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:20.051 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:20.051 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:20.130 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:20.135 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:20.135847, end_date=2025-04-28 21:57:20.135847, timeframe=1H
2025-04-28 21:57:20.159 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:20.165 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:20.166 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:20.166 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:23.510 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:23.511 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:23.511528, end_date=2025-04-28 21:57:23.511528, timeframe=1H
2025-04-28 21:57:23.532 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:23.535 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:23.535 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:23.535 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:23.580 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:23.580 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:23.580598, end_date=2025-04-28 21:57:23.580598, timeframe=1H
2025-04-28 21:57:23.598 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:23.607 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:23.619 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:23.631 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:33.693 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:57:33.696 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:57:42.555 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:42.556 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:42.556928, end_date=2025-04-28 21:57:42.556928, timeframe=1H
2025-04-28 21:57:42.592 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:42.594 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:42.594 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:42.594 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:42.654 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:42.654 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:42.654277, end_date=2025-04-28 21:57:42.654277, timeframe=1H
2025-04-28 21:57:42.667 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:42.669 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:42.669 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:42.669 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:49.719 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:49.720 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:49.720101, end_date=2025-04-28 21:57:49.720101, timeframe=1H
2025-04-28 21:57:49.738 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:49.740 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:49.740 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:49.740 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:49.783 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:49.783 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:49.783971, end_date=2025-04-28 21:57:49.783971, timeframe=1H
2025-04-28 21:57:49.808 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:49.811 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:49.811 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:49.811 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:52.803 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:57:52.805 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:57:53.540 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:53.540 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:53.540526, end_date=2025-04-28 21:57:53.540526, timeframe=1H
2025-04-28 21:57:53.575 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:53.577 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:53.577 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:53.577 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:53.633 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:53.633 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:53.633232, end_date=2025-04-28 21:57:53.633232, timeframe=1H
2025-04-28 21:57:53.706 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:53.708 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:53.708 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:53.708 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:55.772 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:57:55.772 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:55.772785, end_date=2025-04-28 21:57:55.772785, timeframe=1H
2025-04-28 21:57:55.788 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:55.789 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:55.789 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:55.789 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:57:55.881 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:57:55.902 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:57:55.902337, end_date=2025-04-28 21:57:55.902337, timeframe=1H
2025-04-28 21:57:55.937 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:57:55.938 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:57:55.938 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:57:55.938 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:00.159 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:58:00.160 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:00.160184, end_date=2025-04-28 21:58:00.160184, timeframe=1H
2025-04-28 21:58:00.178 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:00.180 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:00.180 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:00.180 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:00.239 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:00.251 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:00.251258, end_date=2025-04-28 21:58:00.251258, timeframe=1H
2025-04-28 21:58:00.270 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:00.271 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:00.272 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:00.272 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:05.354 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:58:05.354 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:05.354670, end_date=2025-04-28 21:58:05.354670, timeframe=1H
2025-04-28 21:58:05.433 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:05.434 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:05.434 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:05.434 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:05.480 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:05.480 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:05.480925, end_date=2025-04-28 21:58:05.480925, timeframe=1H
2025-04-28 21:58:05.498 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:05.499 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:05.499 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:05.499 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:10.745 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:58:10.747 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:58:22.435 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:58:22.435 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:22.435461, end_date=2025-04-28 21:58:22.435461, timeframe=1H
2025-04-28 21:58:22.464 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:22.466 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:22.466 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:22.466 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:22.526 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:22.527 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:22.527454, end_date=2025-04-28 21:58:22.527454, timeframe=1H
2025-04-28 21:58:22.540 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:22.542 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:22.542 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:22.542 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.121 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:58:29.122 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.122560, end_date=2025-04-28 21:58:29.122560, timeframe=1H
2025-04-28 21:58:29.125 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:58:29.126 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.126976, end_date=2025-04-28 21:58:29.126976, timeframe=1H
2025-04-28 21:58:29.160 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.162 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.163 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.163 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.163 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.164 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.164 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.164 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.237 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:29.241 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.241387, end_date=2025-04-28 21:58:29.241387, timeframe=1H
2025-04-28 21:58:29.272 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-16 (process_request_thread), started daemon 123221202433728)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-16 (process_request_thread), started daemon 123221202433728)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-16 (process_request_thread), started daemon 123221202433728)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-16 (process_request_thread), started daemon 123221202433728)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-16 (process_request_thread), started daemon 123221202433728)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38152)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 38152)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011ba18a0b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011ba18a0b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011ba18a0b0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011ba18a0b0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011ba087f40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011ba0abc30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011ba087e20>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011ba087e20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011ba14d8c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:29.369 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.372 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:58:29.391 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.391454, end_date=2025-04-28 21:58:29.391454, timeframe=1H
2025-04-28 21:58:29.391 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.230 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 123221185648320)>
    │    │        │    └ (<socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 123221185648320)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-19 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38172)
    │    │              └ <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 38172)
    │    │                   └ <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85a0520>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85a0520>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b85a0520>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85a0520>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa38f640>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa7177d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38f5b0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=13>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38f5b0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=13>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011b830f540>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:29.404 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.405 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:58:29.415 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.439 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.439197, end_date=2025-04-28 21:58:29.439197, timeframe=1H
2025-04-28 21:58:29.510 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.527 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.559 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.559 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.577 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.603 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.615 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.616 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.616 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 123221194041024)>
    │    │        │    └ (<socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 123221194041024)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38274)
    │    │              └ <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 38274)
    │    │                   └ <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa224850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa224850>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa224850>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa224850>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa20aef0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa2b55b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ae60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=18>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ae60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=18>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa24e4c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:29.666 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:29.678 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:29.678881, end_date=2025-04-28 21:58:29.678881, timeframe=1H
2025-04-28 21:58:29.735 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:29.736 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:29.736 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:29.737 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:29.846 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-33 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-33 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38320)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 38320)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa227790>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa227790>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa227790>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa227790>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa38ecb0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa158660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38eb90>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38eb90>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa3b8d40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:29.987 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-36 (process_request_thread), started daemon 123221428922048)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-36 (process_request_thread), started daemon 123221428922048)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 123221428922048)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 123221428922048)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-36 (process_request_thread), started daemon 123221428922048)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38334)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 38334)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733550>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733550>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733550>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa185090>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa10d380>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa185000>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa185000>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa007400>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.003 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-46 (process_request_thread), started daemon 123220799780544)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-46 (process_request_thread), started daemon 123220799780544)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 123220799780544)>
    │    │        │    └ (<socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 123220799780544)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-46 (process_request_thread), started daemon 123220799780544)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39108)
    │    │              └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39108)
    │    │                   └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0ca860>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0ca860>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0ca860>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0ca860>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa38f130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa2b5540>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011ba0d8040>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011ba0d8040>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa0c4440>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 2}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 2}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 2}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.108 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:58:30.122 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.122791, end_date=2025-04-28 21:58:30.122791, timeframe=1H
2025-04-28 21:58:30.140 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:58:30.142 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.142867, end_date=2025-04-28 21:58:30.142867, timeframe=1H
2025-04-28 21:58:30.238 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.240 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.242 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.244 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.245 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.246 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.250 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.253 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.306 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:30.310 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.310728, end_date=2025-04-28 21:58:30.310728, timeframe=1H
2025-04-28 21:58:30.373 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.394 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.423 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.386 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-50 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-50 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-50 (process_request_thread), started daemon 123221185648320)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-50 (process_request_thread), started daemon 123221185648320)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-50 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39154)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39154)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85758a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85758a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b85758a0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b85758a0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa20ab00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa158660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20aef0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20aef0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011b855bc80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 3}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 3}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.394 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-53 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-53 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-53 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-53 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-53 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39174)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39174)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733f40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733f40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733f40>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b8733f40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa129ea0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa10d2a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa129f30>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa129f30>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011b876c3c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 3}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 3}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.438 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.592 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-63 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-63 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-63 (process_request_thread), started daemon 123221194041024)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-63 (process_request_thread), started daemon 123221194041024)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-63 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39266)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39266)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d7a90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d7a90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d7a90>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d7a90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa1865f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa717680>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa185d80>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa185d80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa007400>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 3}], ['bb']...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 3}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 3}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.635 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 21:58:30.636 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.636128, end_date=2025-04-28 21:58:30.636128, timeframe=1H
2025-04-28 21:58:30.638 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 21:58:30.639 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.639373, end_date=2025-04-28 21:58:30.639373, timeframe=1H
2025-04-28 21:58:30.733 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.740 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.743 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.743 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.744 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.745 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.751 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.763 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.765 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:30.777 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:30.777141, end_date=2025-04-28 21:58:30.777141, timeframe=1H
2025-04-28 21:58:30.853 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:30.875 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:30.855 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-70 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-70 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-70 (process_request_thread), started daemon 123221185648320)>
    │    │        │    └ (<socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-70 (process_request_thread), started daemon 123221185648320)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-70 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39322)
    │    │              └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39322)
    │    │                   └ <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa241780>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa241780>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa241780>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa241780>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa185e10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa7174c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa186680>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa186680>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=14>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa178080>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:30.885 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:30.905 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:30.902 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-67 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-67 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-67 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-67 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-67 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39296)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39296)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa614670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa614670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa614670>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa614670>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa185c60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa717bc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa184f70>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa184f70>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011b855bc80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:31.044 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-80 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-80 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-80 (process_request_thread), started daemon 123221151033024)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-80 (process_request_thread), started daemon 123221151033024)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-80 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39394)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 39394)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d5f60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d5f60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d5f60>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d5f60>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa1b0c10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa158660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b15a0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b15a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa3b8d40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:48.570 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:58:48.570 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:48.570980, end_date=2025-04-28 21:58:48.570980, timeframe=1H
2025-04-28 21:58:48.587 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:48.592 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:48.592 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:48.592 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:48.632 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-82 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-82 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-82 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-82 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-82 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 50230)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 50230)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d6980>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d6980>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d6980>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011b84d6980>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa1b2e60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa717a70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b2dd0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b2dd0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011a97f9dc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}, {'type...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}, {'type...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:48.677 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:48.677 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:48.677655, end_date=2025-04-28 21:58:48.677655, timeframe=1H
2025-04-28 21:58:48.721 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:48.736 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:48.736 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:48.736 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:48.768 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-90 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-90 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-90 (process_request_thread), started daemon 123221194041024)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-90 (process_request_thread), started daemon 123221194041024)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-90 (process_request_thread), started daemon 123221194041024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 50294)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 50294)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf22b00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf22b00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011abf22b00>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf22b00>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa38f6d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa10e8f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38f640>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa38f640>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011aa24e4c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}, {'type...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}, {'type...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:49.468 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:58:49.468 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:49.468828, end_date=2025-04-28 21:58:49.468828, timeframe=1H
2025-04-28 21:58:49.494 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:49.498 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:49.501 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:49.501 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:49.540 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-92 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-92 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-92 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-92 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-92 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60280)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 60280)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0e9ff0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0e9ff0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0e9ff0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa0e9ff0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa1b3520>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa10e7a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b20e0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa1b20e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011a97f9dc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:49.590 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:49.591 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:49.591051, end_date=2025-04-28 21:58:49.591051, timeframe=1H
2025-04-28 21:58:49.652 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:49.654 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:49.654 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:49.654 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:49.688 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-100 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-100 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-100 (process_request_thread), started daemon 123221151033024)>
    │    │        │    └ (<socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-100 (process_request_thread), started daemon 123221151033024)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-100 (process_request_thread), started daemon 123221151033024)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60372)
    │    │              └ <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 60372)
    │    │                   └ <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf7f580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf7f580>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011abf7f580>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011abf7f580>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa185a20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa158660>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa184ca0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=16>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa184ca0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=16>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011ba06bd40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'ema', 'period': 30}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'ema', 'period': 30}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'ema', 'period': 30}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:51.454 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:58:51.455 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:51.455078, end_date=2025-04-28 21:58:51.455078, timeframe=1H
2025-04-28 21:58:51.473 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:51.477 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:51.477 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:51.477 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:51.616 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:51.619 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:51.619746, end_date=2025-04-28 21:58:51.619746, timeframe=1H
2025-04-28 21:58:51.667 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:51.678 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:51.685 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:51.685 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:52.464 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:58:52.464 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:52.464927, end_date=2025-04-28 21:58:52.464927, timeframe=1H
2025-04-28 21:58:52.480 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:52.481 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:52.482 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:52.482 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:52.524 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-112 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-112 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-112 (process_request_thread), started daemon 123221168867008)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-112 (process_request_thread), started daemon 123221168867008)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-112 (process_request_thread), started daemon 123221168867008)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60480)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 60480)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa742470>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa742470>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa742470>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa742470>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa20b0a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa2b5540>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ad40>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ad40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011ba06bd40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 20}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 20}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 20}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 20}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:52.560 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:52.570 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:52.569976, end_date=2025-04-28 21:58:52.569976, timeframe=1H
2025-04-28 21:58:52.616 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:52.631 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:52.631 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:52.631 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:52.664 | ERROR    | views.visual_dashboard:create_advanced_chart:2413 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7011e9ea4ca0>
    └ <Thread(Thread-120 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7011e9ea49d0>
    └ <Thread(Thread-120 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-120 (process_request_thread), started daemon 123221185648320)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-120 (process_request_thread), started daemon 123221185648320)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>>
    └ <Thread(Thread-120 (process_request_thread), started daemon 123221185648320)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60530)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7011e9719900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │    │                   │        └ ('127.0.0.1', 60530)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7011e94823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa4455a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7011e96e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa4455a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7011aa4455a0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7011ba18a2c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7011aa4455a0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7011aa20a290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7011aa10e9d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ae60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7011ba00bf40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7011aa20ae60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7011e8f3e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7011e8f3e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7011e8f3dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7011bad344c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7011e8f3e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7011b8f085c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 20}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>
                   └ <function _invoke_callback at 0x7011e8975ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 20}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7011ba1937f0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x7011ba1915a0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2258, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x7011bc2956f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 20}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 20}

TypeError: unhashable type: 'dict'
2025-04-28 21:58:53.425 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:58:53.425 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:53.425677, end_date=2025-04-28 21:58:53.425677, timeframe=1H
2025-04-28 21:58:53.442 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:53.444 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:53.444 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:53.444 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:58:53.523 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:58:53.523 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:58:53.523683, end_date=2025-04-28 21:58:53.523683, timeframe=1H
2025-04-28 21:58:53.574 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:58:53.578 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:58:53.588 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:58:53.589 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:05.257 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:59:05.259 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:59:06.124 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:59:06.124 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:06.124757, end_date=2025-04-28 21:59:06.124757, timeframe=1H
2025-04-28 21:59:06.161 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:06.164 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:06.164 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:06.164 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:06.257 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:59:06.258 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:06.258415, end_date=2025-04-28 21:59:06.258415, timeframe=1H
2025-04-28 21:59:06.272 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:06.274 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:06.276 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:06.276 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:06.407 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-11 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-11 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 126874474772160)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 126874474772160)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-11 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 52234)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 52234)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364581e9f60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364581e9f60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7364581e9f60>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7364581e9f60>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7364581e36d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7364581d0270>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7364581e3760>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7364581e3760>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x73645dabc240>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:06.407 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 52156)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 52156)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x73645ac7bc70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x73645aca6730>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73645ac7bbe0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73645ac7bbe0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x73645ac06780>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:06.508 | ERROR    | views.visual_dashboard:update_dashboard:1478 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 52156)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 52156)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x73645ad7ded0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x73645ac7bc70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x73645aca6730>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73645ac7bbe0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73645ac7bbe0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x73645ac06780>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1460, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                     └ <function create_volatility_chart at 0x73645ad81360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1824, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x73645c77ac20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x73645c94d3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x73645c94cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x73645c8a8bd0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x73648982ad90>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x73648982ad90>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x73648982ae30>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x73648982ad90>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x73648982ae30>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7364898530a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 21:59:07.722 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:59:07.723 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:07.723362, end_date=2025-04-28 21:59:07.723362, timeframe=1H
2025-04-28 21:59:07.739 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:07.748 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:07.748 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:07.748 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:07.802 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:59:07.806 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:07.806538, end_date=2025-04-28 21:59:07.806538, timeframe=1H
2025-04-28 21:59:07.845 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:07.869 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:07.873 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:07.874 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:11.225 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 21:59:11.225 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:11.225937, end_date=2025-04-28 21:59:11.225937, timeframe=1H
2025-04-28 21:59:11.245 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:11.246 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:11.247 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:11.248 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:11.285 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-23 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 126874839668416)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 126874839668416)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 126874839668416)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 34664)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 34664)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x736442c17fa0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x736442c17fa0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x736442c17fa0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x736442c17fa0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x736458db49d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x736442e16180>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736458db7880>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736458db7880>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x73645ac63800>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:11.330 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:59:11.330 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:11.330899, end_date=2025-04-28 21:59:11.330899, timeframe=1H
2025-04-28 21:59:11.378 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:11.384 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:11.389 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:11.389 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:11.422 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-31 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-31 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-31 (process_request_thread), started daemon 126874474772160)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-31 (process_request_thread), started daemon 126874474772160)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-31 (process_request_thread), started daemon 126874474772160)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 34706)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 34706)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x736458985c00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x736458985c00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x736458985c00>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x736458985c00>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x736458db5ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x736442e16b90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736458db5b40>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736458db5b40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x736442cded80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:26.617 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:59:26.622 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:26.622019, end_date=2025-04-28 21:59:26.622019, timeframe=1H
2025-04-28 21:59:26.639 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:26.640 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:26.640 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:26.641 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:26.776 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:59:26.777 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:26.776989, end_date=2025-04-28 21:59:26.776989, timeframe=1H
2025-04-28 21:59:26.817 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:26.819 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:26.819 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:26.819 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:34.672 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 21:59:34.672 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:34.672940, end_date=2025-04-28 21:59:34.672940, timeframe=1H
2025-04-28 21:59:34.688 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:34.690 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:34.690 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:34.690 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:34.732 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-45 (process_request_thread), started daemon 126874453792448)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-45 (process_request_thread), started daemon 126874453792448)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-45 (process_request_thread), started daemon 126874453792448)>
    │    │        │    └ (<socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-45 (process_request_thread), started daemon 126874453792448)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-45 (process_request_thread), started daemon 126874453792448)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39366)
    │    │              └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 39366)
    │    │                   └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364591d0ca0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364591d0ca0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7364591d0ca0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7364591d0ca0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x736442c29fc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x736442e166c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736442c2a560>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x736442c2a560>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x736442c37f40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:34.776 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 21:59:34.777 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 21:59:34.777865, end_date=2025-04-28 21:59:34.777865, timeframe=1H
2025-04-28 21:59:34.830 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 21:59:34.832 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 21:59:34.834 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 21:59:34.834 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 21:59:34.870 | ERROR    | views.visual_dashboard:create_advanced_chart:2407 - Error creating advanced chart: unhashable type: 'dict'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73648aaa4ca0>
    └ <Thread(Thread-53 (process_request_thread), started daemon 126874848061120)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73648aaa49d0>
    └ <Thread(Thread-53 (process_request_thread), started daemon 126874848061120)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-53 (process_request_thread), started daemon 126874848061120)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-53 (process_request_thread), started daemon 126874848061120)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>>
    └ <Thread(Thread-53 (process_request_thread), started daemon 126874848061120)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 39418)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x73648a319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │    │                   │        └ ('127.0.0.1', 39418)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73648a0d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364588034f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73648a2e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7364588034f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7364588034f0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73645ad7e320>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7364588034f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7364593c8940>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x736442e16490>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7364593c89d0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x73645adba230>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7364593c89d0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x736489b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x736489b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x736489b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73645b95c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x736489b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7364589e5700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>
                   └ <function _invoke_callback at 0x7364895bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', '30D', 'advanced', '2025-03-29', '2025-04-28', ['close'], [{'type': 'sma', 'period': 50}], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x73645ad83760>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1448, in update_dashboard
    result = create_advanced_chart(
             └ <function create_advanced_chart at 0x73645ad81480>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2252, in create_advanced_chart
    if ma in metal_df.columns:
       │     │        └ <pandas._libs.properties.AxisProperty object at 0x73645d1b96f0>
       │     └               timestamp  open_price  high_price  low_price  close_price  ...  avg_gain  avg_loss        rs        rsi        ...
       └ {'type': 'sma', 'period': 50}

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 5358, in __contains__
    hash(key)
         └ {'type': 'sma', 'period': 50}

TypeError: unhashable type: 'dict'
2025-04-28 21:59:58.539 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 21:59:58.541 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:19.392 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:19.394 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:48.286 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:48.288 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:51.131 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:51.133 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:00:52.325 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:00:52.326 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:00:52.325984, end_date=2025-04-28 22:00:52.325984, timeframe=1H
2025-04-28 22:00:52.356 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:00:52.360 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:00:52.360 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:00:52.360 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:00:52.399 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:00:52.399 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:00:52.399400, end_date=2025-04-28 22:00:52.399400, timeframe=1H
2025-04-28 22:00:52.421 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:00:52.423 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:00:52.423 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:00:52.423 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:00:59.394 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:00:59.395 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:00:59.395126, end_date=2025-04-28 22:00:59.395126, timeframe=1H
2025-04-28 22:00:59.414 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:00:59.416 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:00:59.416 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:00:59.416 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:00:59.530 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:00:59.536 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:00:59.536377, end_date=2025-04-28 22:00:59.536377, timeframe=1H
2025-04-28 22:00:59.570 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:00:59.573 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:00:59.574 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:00:59.574 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:00.395 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:00.395 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:00.395470, end_date=2025-04-28 22:01:00.395470, timeframe=1H
2025-04-28 22:01:00.414 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:00.416 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:00.419 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:00.419 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:00.497 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:00.513 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:00.512984, end_date=2025-04-28 22:01:00.512984, timeframe=1H
2025-04-28 22:01:00.564 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:00.565 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:00.566 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:00.566 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:03.658 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:03.661 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:03.661020, end_date=2025-04-28 22:01:03.661020, timeframe=1H
2025-04-28 22:01:03.678 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:03.678 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:03.679 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:03.679925, end_date=2025-04-28 22:01:03.679925, timeframe=1H
2025-04-28 22:01:03.689 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:03.691 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:03.691 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:03.749 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:03.755 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:03.756 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:03.766 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:03.797 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:03.806 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:03.806397, end_date=2025-04-28 22:01:03.806397, timeframe=1H
2025-04-28 22:01:03.896 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:03.927 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:03.927 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:03.927 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:05.395 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:05.395 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:05.395296, end_date=2025-04-28 22:01:05.395296, timeframe=1H
2025-04-28 22:01:05.414 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:05.416 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:05.417 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:05.417 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:05.488 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:05.489 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:05.489110, end_date=2025-04-28 22:01:05.489110, timeframe=1H
2025-04-28 22:01:05.551 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:05.563 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:05.564 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:05.564 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:07.987 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:07.989 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:07.989058, end_date=2025-04-28 22:01:07.989058, timeframe=1H
2025-04-28 22:01:08.004 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.006 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:08.008 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:08.008075, end_date=2025-04-28 22:01:08.008075, timeframe=1H
2025-04-28 22:01:08.009 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.013 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.015 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:08.070 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.078 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.079 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:08.093 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.095 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:08.095574, end_date=2025-04-28 22:01:08.095574, timeframe=1H
2025-04-28 22:01:08.095 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:08.141 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.161 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.166 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.189 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:08.282 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:08.285 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:08.285413, end_date=2025-04-28 22:01:08.285413, timeframe=1H
2025-04-28 22:01:08.333 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:08.339 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:08.339578, end_date=2025-04-28 22:01:08.339578, timeframe=1H
2025-04-28 22:01:08.401 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.456 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.464 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.501 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.501 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:08.503 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.513 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.513 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:08.556 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:08.559 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:08.559016, end_date=2025-04-28 22:01:08.559016, timeframe=1H
2025-04-28 22:01:08.600 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:08.644 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:08.654 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:08.654 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:17.697 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:17.697 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:17.697296, end_date=2025-04-28 22:01:17.697296, timeframe=1H
2025-04-28 22:01:17.713 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:17.715 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:17.715 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:17.715 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:17.800 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:17.808 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:17.808200, end_date=2025-04-28 22:01:17.808200, timeframe=1H
2025-04-28 22:01:17.840 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:17.843 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:17.843 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:17.862 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:19.880 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:19.882 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:19.882083, end_date=2025-04-28 22:01:19.882083, timeframe=1H
2025-04-28 22:01:19.898 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:19.900 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:19.900 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:19.900 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:19.905 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:19.905 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:19.905604, end_date=2025-04-28 22:01:19.905604, timeframe=1H
2025-04-28 22:01:19.948 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:19.975 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:19.975 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:19.982 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:20.011 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:20.029 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:20.029414, end_date=2025-04-28 22:01:20.029414, timeframe=1H
2025-04-28 22:01:20.102 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:20.103 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:20.103 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:20.104 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:20.235 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:20.257 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:20.256981, end_date=2025-04-28 22:01:20.256981, timeframe=1H
2025-04-28 22:01:20.402 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:20.408 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:20.408060, end_date=2025-04-28 22:01:20.408060, timeframe=1H
2025-04-28 22:01:20.408 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:20.411 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:20.411 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:20.413 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:20.436 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:20.440 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:20.453 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:20.453 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:25.380 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:25.381 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:25.381408, end_date=2025-04-28 22:01:25.381408, timeframe=1H
2025-04-28 22:01:25.402 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:25.404 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:25.404 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:25.404 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:25.460 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:25.476 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:25.476170, end_date=2025-04-28 22:01:25.476170, timeframe=1H
2025-04-28 22:01:25.531 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:25.533 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:25.534 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:25.536 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:28.174 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:28.177 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:28.177081, end_date=2025-04-28 22:01:28.177081, timeframe=1H
2025-04-28 22:01:28.192 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:28.194 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:28.194 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:28.194 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:28.271 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:28.273 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:28.272989, end_date=2025-04-28 22:01:28.272989, timeframe=1H
2025-04-28 22:01:28.317 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:28.319 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:28.319 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:28.319 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:30.526 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:30.526 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:30.526843, end_date=2025-04-28 22:01:30.526843, timeframe=1H
2025-04-28 22:01:30.543 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:30.546 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:30.546 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:30.547 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:30.623 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:30.624 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:30.624780, end_date=2025-04-28 22:01:30.624780, timeframe=1H
2025-04-28 22:01:30.733 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:30.746 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:30.747 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:30.748 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:33.316 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:33.318 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:33.318324, end_date=2025-04-28 22:01:33.318324, timeframe=1H
2025-04-28 22:01:33.331 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:33.332 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:33.332739, end_date=2025-04-28 22:01:33.332739, timeframe=1H
2025-04-28 22:01:33.334 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:33.341 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:33.351 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:33.353 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:33.361 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:33.363 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:33.363 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:33.363 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:33.435 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:33.435 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:33.435236, end_date=2025-04-28 22:01:33.435236, timeframe=1H
2025-04-28 22:01:33.523 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:33.526 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:33.541 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:33.548 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:35.336 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:35.336 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:35.336819, end_date=2025-04-28 22:01:35.336819, timeframe=1H
2025-04-28 22:01:35.354 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:35.356 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:35.356 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:35.356 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:35.430 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:35.430 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:35.430681, end_date=2025-04-28 22:01:35.430681, timeframe=1H
2025-04-28 22:01:35.477 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:35.479 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:35.479 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:35.481 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:36.742 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:36.742 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:36.742575, end_date=2025-04-28 22:01:36.742575, timeframe=1H
2025-04-28 22:01:36.761 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:36.764 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:36.764 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:36.766 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:36.842 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:36.843 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:36.843228, end_date=2025-04-28 22:01:36.843228, timeframe=1H
2025-04-28 22:01:36.915 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:36.917 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:36.917 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:36.917 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:37.257 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:37.257 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:37.257671, end_date=2025-04-28 22:01:37.257671, timeframe=1H
2025-04-28 22:01:37.279 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:37.280 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:37.281 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:37.281 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:37.364 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:37.366 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:37.366229, end_date=2025-04-28 22:01:37.366229, timeframe=1H
2025-04-28 22:01:37.418 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:37.428 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:37.428 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:37.428 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:42.400 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:42.400 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:42.400786, end_date=2025-04-28 22:01:42.400786, timeframe=1H
2025-04-28 22:01:42.419 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:42.424 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:42.425 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:42.425 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:42.529 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:42.530 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:42.530608, end_date=2025-04-28 22:01:42.530608, timeframe=1H
2025-04-28 22:01:42.620 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:42.622 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:42.622 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:42.622 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:43.345 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:43.345 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:43.345398, end_date=2025-04-28 22:01:43.345398, timeframe=1H
2025-04-28 22:01:43.361 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:43.362 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:43.362 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:43.362 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:43.444 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:43.462 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:43.462422, end_date=2025-04-28 22:01:43.462422, timeframe=1H
2025-04-28 22:01:43.550 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:43.557 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:43.572 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:43.573 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:44.585 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:44.585 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:44.585416, end_date=2025-04-28 22:01:44.585416, timeframe=1H
2025-04-28 22:01:44.608 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:44.609 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:44.609 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:44.609 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:44.709 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:44.712 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:44.712116, end_date=2025-04-28 22:01:44.712116, timeframe=1H
2025-04-28 22:01:44.750 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:44.752 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:44.752 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:44.752 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:46.775 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:46.777 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:46.777602, end_date=2025-04-28 22:01:46.777602, timeframe=1H
2025-04-28 22:01:46.800 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:46.807 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:46.807 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:46.807 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:46.921 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:46.922 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:46.922233, end_date=2025-04-28 22:01:46.922233, timeframe=1H
2025-04-28 22:01:46.958 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:46.959 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:46.959 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:46.959 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:47.075 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:47.076 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:47.076357, end_date=2025-04-28 22:01:47.076357, timeframe=1H
2025-04-28 22:01:47.114 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:47.118 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:47.118756, end_date=2025-04-28 22:01:47.118756, timeframe=1H
2025-04-28 22:01:47.174 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:47.182 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:47.193 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:47.198 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:47.199 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:47.205 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:47.209 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:47.210 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:47.235 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:47.242 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:47.242920, end_date=2025-04-28 22:01:47.242920, timeframe=1H
2025-04-28 22:01:47.317 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:47.319 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:47.319 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:47.319 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:49.456 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:49.456 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:49.456796, end_date=2025-04-28 22:01:49.456796, timeframe=1H
2025-04-28 22:01:49.474 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:49.478 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:49.478 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:49.478 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:49.559 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:49.559 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:49.559938, end_date=2025-04-28 22:01:49.559938, timeframe=1H
2025-04-28 22:01:49.604 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:49.606 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:49.622 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:49.628 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:50.021 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:50.021 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:50.021933, end_date=2025-04-28 22:01:50.021933, timeframe=1H
2025-04-28 22:01:50.047 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:50.049 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:50.050 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:50.050 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:50.070 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:50.070 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:50.070968, end_date=2025-04-28 22:01:50.070968, timeframe=1H
2025-04-28 22:01:50.124 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:50.143 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:50.143 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:50.143 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:50.646 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:50.646 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:50.646445, end_date=2025-04-28 22:01:50.646445, timeframe=1H
2025-04-28 22:01:50.663 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:50.665 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:50.665 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:50.665 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:50.730 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:50.805 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:50.805191, end_date=2025-04-28 22:01:50.805191, timeframe=1H
2025-04-28 22:01:50.851 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:50.868 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:50.876 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:50.876 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:51.537 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:51.538 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:51.538351, end_date=2025-04-28 22:01:51.538351, timeframe=1H
2025-04-28 22:01:51.559 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:51.561 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:51.561 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:51.561 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:51.634 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:51.635 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:51.635470, end_date=2025-04-28 22:01:51.635470, timeframe=1H
2025-04-28 22:01:51.681 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:51.700 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:51.702 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:51.702 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:52.123 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:52.124 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:52.124296, end_date=2025-04-28 22:01:52.124296, timeframe=1H
2025-04-28 22:01:52.145 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:52.147 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:52.147 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:52.147 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:52.214 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:52.221 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:52.221258, end_date=2025-04-28 22:01:52.221258, timeframe=1H
2025-04-28 22:01:52.266 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:52.269 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:52.269 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:52.269 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:54.671 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:54.672 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:54.672087, end_date=2025-04-28 22:01:54.672087, timeframe=1H
2025-04-28 22:01:54.688 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:54.689 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:54.691 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:54.691 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:54.760 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:54.761 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:54.761040, end_date=2025-04-28 22:01:54.761040, timeframe=1H
2025-04-28 22:01:54.786 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:54.788 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:54.788 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:54.788 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:55.322 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:55.322 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:55.322314, end_date=2025-04-28 22:01:55.322314, timeframe=1H
2025-04-28 22:01:55.339 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:55.340 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:55.340 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:55.340 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:55.409 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:55.415 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:55.415297, end_date=2025-04-28 22:01:55.415297, timeframe=1H
2025-04-28 22:01:55.467 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:55.471 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:55.472 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:55.472 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:56.043 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:01:56.043 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:56.043608, end_date=2025-04-28 22:01:56.043608, timeframe=1H
2025-04-28 22:01:56.060 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:56.063 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:56.063 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:56.064 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:56.141 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:56.142 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:56.142229, end_date=2025-04-28 22:01:56.142229, timeframe=1H
2025-04-28 22:01:56.164 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:56.186 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:56.186 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:56.186 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:59.464 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:59.466 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:59.466715, end_date=2025-04-28 22:01:59.466715, timeframe=1H
2025-04-28 22:01:59.485 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:59.486 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:59.486 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:59.486 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:59.633 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:59.633 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:59.633881, end_date=2025-04-28 22:01:59.633881, timeframe=1H
2025-04-28 22:01:59.723 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:59.725 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:01:59.725 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:59.725206, end_date=2025-04-28 22:01:59.725206, timeframe=1H
2025-04-28 22:01:59.728 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:59.729 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:59.736 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:59.737 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:01:59.743 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:59.743738, end_date=2025-04-28 22:01:59.743738, timeframe=1H
2025-04-28 22:01:59.757 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:59.767 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:59.770 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:59.778 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:59.792 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:01:59.804 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:01:59.810 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:01:59.816 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:01:59.879 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:01:59.883 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:01:59.882994, end_date=2025-04-28 22:01:59.882994, timeframe=1H
2025-04-28 22:01:59.974 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:02:00.010 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:02:00.017 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:02:00.028 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:03:04.834 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:03:04.836 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:03:27.745 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:03:27.747 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:03:48.306 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:48.306 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:48.307 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:53.297 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:53.298 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:53.298 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:53.298 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:53.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:53.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:53.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:53.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:03:53.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:03:57.770 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:03:57.770 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:03:57.770963, end_date=2025-04-28 22:03:57.770963, timeframe=1H
2025-04-28 22:03:57.797 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:03:57.798 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:03:57.798 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:03:57.798 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:03:57.923 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:03:57.923 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:03:57.923875, end_date=2025-04-28 22:03:57.923875, timeframe=1H
2025-04-28 22:03:57.945 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:03:57.946 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:03:57.947 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:03:57.947 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:09.857 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:09.859 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:13.040 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:13.042 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:13.659 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:13.661 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:04:15.383 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:15.383 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:15.383351, end_date=2025-04-28 22:04:15.383351, timeframe=1H
2025-04-28 22:04:15.414 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:15.416 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:15.416 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:15.416 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:15.585 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:15.585 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:15.585507, end_date=2025-04-28 22:04:15.585507, timeframe=1H
2025-04-28 22:04:15.600 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:15.602 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:15.602 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:15.602 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:17.124 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:17.124 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:17.124372, end_date=2025-04-28 22:04:17.124372, timeframe=1H
2025-04-28 22:04:17.143 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:17.144 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:17.144 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:17.144 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:17.217 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:17.218 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:17.218448, end_date=2025-04-28 22:04:17.218448, timeframe=1H
2025-04-28 22:04:17.261 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:17.263 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:17.263 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:17.264 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:19.255 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:19.255 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:19.255799, end_date=2025-04-28 22:04:19.255799, timeframe=1H
2025-04-28 22:04:19.275 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:19.277 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:19.277 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:19.277 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:19.357 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:19.358 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:19.358106, end_date=2025-04-28 22:04:19.358106, timeframe=1H
2025-04-28 22:04:19.378 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:19.386 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:19.400 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:19.407 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:22.651 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:04:22.653 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:22.653063, end_date=2025-04-28 22:04:22.653063, timeframe=1H
2025-04-28 22:04:22.735 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:04:22.736 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:22.736153, end_date=2025-04-28 22:04:22.736153, timeframe=1H
2025-04-28 22:04:22.739 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:22.750 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:22.752 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:22.753 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:22.781 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:22.792 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:22.794 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:22.794 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:22.809 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:22.810 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:22.810003, end_date=2025-04-28 22:04:22.810003, timeframe=1H
2025-04-28 22:04:22.901 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:22.910 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:22.913 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:22.914 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:26.309 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:26.309 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:26.309498, end_date=2025-04-28 22:04:26.309498, timeframe=1H
2025-04-28 22:04:26.327 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:26.329 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:26.329 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:26.329 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:26.416 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:26.417 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:26.417152, end_date=2025-04-28 22:04:26.417152, timeframe=1H
2025-04-28 22:04:26.461 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:26.472 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:26.480 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:26.480 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:28.633 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:28.633 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:28.633548, end_date=2025-04-28 22:04:28.633548, timeframe=1H
2025-04-28 22:04:28.656 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:28.659 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:28.659 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:28.659 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:28.733 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:28.733 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:28.733274, end_date=2025-04-28 22:04:28.733274, timeframe=1H
2025-04-28 22:04:28.779 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:28.781 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:28.781 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:28.781 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:29.256 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:29.256 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:29.256664, end_date=2025-04-28 22:04:29.256664, timeframe=1H
2025-04-28 22:04:29.275 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:29.277 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:29.277 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:29.277 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:29.352 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:29.353 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:29.353390, end_date=2025-04-28 22:04:29.353390, timeframe=1H
2025-04-28 22:04:29.378 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:29.380 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:29.380 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:29.380 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:30.188 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:30.189 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:30.189157, end_date=2025-04-28 22:04:30.189157, timeframe=1H
2025-04-28 22:04:30.205 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:30.207 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:30.207 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:30.208 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:30.283 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:30.286 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:30.286712, end_date=2025-04-28 22:04:30.286712, timeframe=1H
2025-04-28 22:04:30.329 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:30.333 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:30.341 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:30.341 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:30.913 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:30.913 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:30.913263, end_date=2025-04-28 22:04:30.913263, timeframe=1H
2025-04-28 22:04:30.928 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:30.930 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:30.930 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:30.930 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:31.013 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:31.021 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:31.021518, end_date=2025-04-28 22:04:31.021518, timeframe=1H
2025-04-28 22:04:31.066 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:31.068 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:31.069 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:31.069 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:33.448 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:04:33.450 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:33.450430, end_date=2025-04-28 22:04:33.450430, timeframe=1H
2025-04-28 22:04:33.472 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:33.473 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:33.474 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:33.474 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:33.577 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:33.577 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:33.577404, end_date=2025-04-28 22:04:33.577404, timeframe=1H
2025-04-28 22:04:33.596 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:33.615 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:33.615 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:33.615 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:34.700 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:34.701 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:34.701121, end_date=2025-04-28 22:04:34.701121, timeframe=1H
2025-04-28 22:04:34.717 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:34.718 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:34.718 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:34.719 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:34.797 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:34.798 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:34.798369, end_date=2025-04-28 22:04:34.798369, timeframe=1H
2025-04-28 22:04:34.839 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:34.841 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:34.842 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:34.842 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:35.534 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:35.535 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:35.535027, end_date=2025-04-28 22:04:35.535027, timeframe=1H
2025-04-28 22:04:35.555 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:35.558 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:35.559 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:35.559 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:35.661 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:35.668 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:35.668071, end_date=2025-04-28 22:04:35.668071, timeframe=1H
2025-04-28 22:04:35.703 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:35.706 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:35.706 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:35.706 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:36.312 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:36.312 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:36.312910, end_date=2025-04-28 22:04:36.312910, timeframe=1H
2025-04-28 22:04:36.328 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:36.329 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:36.329 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:36.329 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:36.408 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:36.409 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:36.409802, end_date=2025-04-28 22:04:36.409802, timeframe=1H
2025-04-28 22:04:36.452 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:36.454 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:36.466 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:36.472 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:37.106 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:37.106 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:37.106738, end_date=2025-04-28 22:04:37.106738, timeframe=1H
2025-04-28 22:04:37.125 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:37.127 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:37.127 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:37.127 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:37.202 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:37.233 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:37.233388, end_date=2025-04-28 22:04:37.233388, timeframe=1H
2025-04-28 22:04:37.273 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:37.274 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:37.274 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:37.274 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:38.913 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:04:38.913 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:38.913846, end_date=2025-04-28 22:04:38.913846, timeframe=1H
2025-04-28 22:04:38.933 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:38.935 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:38.935 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:38.935 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:39.043 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:39.051 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:39.051637, end_date=2025-04-28 22:04:39.051637, timeframe=1H
2025-04-28 22:04:39.074 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:39.075 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:39.075 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:39.075 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:40.800 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:04:40.801 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:40.801166, end_date=2025-04-28 22:04:40.801166, timeframe=1H
2025-04-28 22:04:40.810 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:04:40.820 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:40.820790, end_date=2025-04-28 22:04:40.820790, timeframe=1H
2025-04-28 22:04:40.834 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:40.846 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:40.848 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:40.852 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:40.856 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:40.861 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:40.863 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:40.864 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:04:40.874 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:04:40.879 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:04:40.879819, end_date=2025-04-28 22:04:40.879819, timeframe=1H
2025-04-28 22:04:40.913 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:04:40.952 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:04:40.964 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:04:41.024 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:00.198 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:05:00.200 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:05:01.707 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:01.707 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:01.707311, end_date=2025-04-28 22:05:01.707311, timeframe=1H
2025-04-28 22:05:01.734 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:01.737 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:01.737852, end_date=2025-04-28 22:05:01.737852, timeframe=1H
2025-04-28 22:05:01.745 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:01.749 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:01.749 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:01.749 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:01.775 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:01.782 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:01.792 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:01.793 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:01.815 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:01.815 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:01.815529, end_date=2025-04-28 22:05:01.815529, timeframe=1H
2025-04-28 22:05:01.843 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:01.863 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:01.869 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:01.869 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:04.703 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:04.704 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:04.704172, end_date=2025-04-28 22:05:04.704172, timeframe=1H
2025-04-28 22:05:04.718 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:04.719 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:04.719 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:04.719 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:04.722 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:04.724 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:04.724449, end_date=2025-04-28 22:05:04.724449, timeframe=1H
2025-04-28 22:05:04.814 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:04.847 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:04.847 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:04.847 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:04.853 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:04.893 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:04.893732, end_date=2025-04-28 22:05:04.893732, timeframe=1H
2025-04-28 22:05:04.902 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:04.911 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:04.911958, end_date=2025-04-28 22:05:04.911958, timeframe=1H
2025-04-28 22:05:04.975 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:05.011 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:05.011370, end_date=2025-04-28 22:05:05.011370, timeframe=1H
2025-04-28 22:05:05.046 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:05.061 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:05.088 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:05.097 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:05.098 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:05.101 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:05.107 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:05.107 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:05.146 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:05.161 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:05.161881, end_date=2025-04-28 22:05:05.161881, timeframe=1H
2025-04-28 22:05:05.163 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:05.210 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:05.285 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:05.287 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:05.326 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:05.347 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:05.348 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:05.350 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:07.846 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:07.847 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:07.847782, end_date=2025-04-28 22:05:07.847782, timeframe=1H
2025-04-28 22:05:07.862 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:07.863 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:07.863042, end_date=2025-04-28 22:05:07.863042, timeframe=1H
2025-04-28 22:05:07.863 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:07.881 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:07.882 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:07.882 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:07.897 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:07.901 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:07.910 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:07.910 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:07.959 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:07.993 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:07.993050, end_date=2025-04-28 22:05:07.993050, timeframe=1H
2025-04-28 22:05:08.119 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:08.124 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:08.124 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:08.134 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:08.355 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:08.356 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:08.356555, end_date=2025-04-28 22:05:08.356555, timeframe=1H
2025-04-28 22:05:08.370 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:08.373 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:08.373740, end_date=2025-04-28 22:05:08.373740, timeframe=1H
2025-04-28 22:05:08.374 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:08.386 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:08.392 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:08.394 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:08.406 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:08.409 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:08.409 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:08.409 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:08.476 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:08.485 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:08.485220, end_date=2025-04-28 22:05:08.485220, timeframe=1H
2025-04-28 22:05:08.631 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 623 rows
2025-04-28 22:05:08.639 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:08.639 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (623, 6)
2025-04-28 22:05:08.639 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:15.166 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:05:15.167 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:15.167110, end_date=2025-04-28 22:05:15.167110, timeframe=4H
2025-04-28 22:05:15.183 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:15.186 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:15.186 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:15.186 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:15.301 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:15.306 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:15.306500, end_date=2025-04-28 22:05:15.306500, timeframe=4H
2025-04-28 22:05:15.331 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:15.332 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:15.332 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:15.332 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:19.899 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: price-series-checklist
2025-04-28 22:05:19.899 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:19.899248, end_date=2025-04-28 22:05:19.899248, timeframe=4H
2025-04-28 22:05:19.915 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:19.917 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:19.918 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:19.918 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:20.085 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:20.085 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:20.085436, end_date=2025-04-28 22:05:20.085436, timeframe=4H
2025-04-28 22:05:20.119 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:20.120 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:20.120 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:20.120 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:20.493 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: price-series-checklist
2025-04-28 22:05:20.493 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:20.493692, end_date=2025-04-28 22:05:20.493692, timeframe=4H
2025-04-28 22:05:20.511 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:20.512 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:20.512 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:20.512 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:20.631 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:20.631 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:20.631745, end_date=2025-04-28 22:05:20.631745, timeframe=4H
2025-04-28 22:05:20.645 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:20.646 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:20.646 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:20.646 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:21.154 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: price-series-checklist
2025-04-28 22:05:21.154 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:21.154456, end_date=2025-04-28 22:05:21.154456, timeframe=4H
2025-04-28 22:05:21.170 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:21.172 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:21.172 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:21.172 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:21.295 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:21.295 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:21.295538, end_date=2025-04-28 22:05:21.295538, timeframe=4H
2025-04-28 22:05:21.311 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:21.312 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:21.312 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:21.312 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:26.669 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:26.670 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:26.670159, end_date=2025-04-28 22:05:26.670159, timeframe=4H
2025-04-28 22:05:26.681 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:26.681 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:26.681530, end_date=2025-04-28 22:05:26.681530, timeframe=4H
2025-04-28 22:05:26.700 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:26.703 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:26.704 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:26.708 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:26.792 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:26.825 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:26.826 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:26.828 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:26.843 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:26.843 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:26.843477, end_date=2025-04-28 22:05:26.843477, timeframe=4H
2025-04-28 22:05:26.953 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:26.956 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:26.956 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:26.957 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:29.882 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:05:29.882 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:29.882896, end_date=2025-04-28 22:05:29.882896, timeframe=4H
2025-04-28 22:05:29.898 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:29.900 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:29.900 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:29.900 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:30.018 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:30.019 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:30.019226, end_date=2025-04-28 22:05:30.019226, timeframe=4H
2025-04-28 22:05:30.033 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:30.034 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:30.034 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:30.034 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:39.976 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:39.976 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:39.976760, end_date=2025-04-28 22:05:39.976760, timeframe=4H
2025-04-28 22:05:39.986 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:39.995 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:39.995278, end_date=2025-04-28 22:05:39.995278, timeframe=4H
2025-04-28 22:05:40.003 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:40.014 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:40.014 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:40.015 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:40.043 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:40.064 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:40.065 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:40.065 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:40.188 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:40.201 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:40.201090, end_date=2025-04-28 22:05:40.201090, timeframe=4H
2025-04-28 22:05:40.306 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:40.307 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:40.307 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:40.307 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:43.385 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:43.386 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:43.386403, end_date=2025-04-28 22:05:43.386403, timeframe=4H
2025-04-28 22:05:43.402 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:43.404 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:43.406 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:43.407 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:43.407 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:43.407 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:43.407672, end_date=2025-04-28 22:05:43.407672, timeframe=4H
2025-04-28 22:05:43.561 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:43.580 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:43.600 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:43.602 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:43.665 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:43.665 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:43.665429, end_date=2025-04-28 22:05:43.665429, timeframe=4H
2025-04-28 22:05:43.725 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:43.741 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:43.744 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:43.744 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:43.918 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:05:43.918 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:43.918454, end_date=2025-04-28 22:05:43.918454, timeframe=4H
2025-04-28 22:05:43.933 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:43.935 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:43.935 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:43.935 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:43.943 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:05:43.947 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:43.947609, end_date=2025-04-28 22:05:43.947609, timeframe=4H
2025-04-28 22:05:44.069 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:44.082 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:44.090 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:44.092 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:44.092 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:44.092 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:44.092605, end_date=2025-04-28 22:05:44.092605, timeframe=4H
2025-04-28 22:05:44.161 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:44.181 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:44.190 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:44.194 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:46.231 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 22:05:46.231 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:46.231925, end_date=2025-04-28 22:05:46.231925, timeframe=4H
2025-04-28 22:05:46.248 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:46.249 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:46.250 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:46.251 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:46.358 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:46.358 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:46.358511, end_date=2025-04-28 22:05:46.358511, timeframe=4H
2025-04-28 22:05:46.394 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:46.395 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:46.395 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:46.395 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:47.149 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: bb-checklist
2025-04-28 22:05:47.150 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:47.150075, end_date=2025-04-28 22:05:47.150075, timeframe=4H
2025-04-28 22:05:47.171 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:47.173 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:47.173 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:47.173 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:47.243 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:47.244 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:47.244913, end_date=2025-04-28 22:05:47.244913, timeframe=4H
2025-04-28 22:05:47.310 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 157 rows
2025-04-28 22:05:47.312 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 20:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-03-31 04:00:00'), 3: Timestamp('2025-03-31 08:00:00'), 4: Timestamp('2025-03-31 12:00:00')}, 'open_price': {0: 3118.8, 1: 3123.4, 2: 3139.0, 3: 3156.6, 4: 3151.4}, 'high_price': {0: 3128.3, 1: 3143.6, 2: 3158.2, 3: 3159.3, 4: 3162.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3111.3, 3: 3117.7, 4: 3104.0}, 'close_price': {0: 3123.5, 1: 3139.1, 2: 3156.7, 3: 3151.5, 4: 3146.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:05:47.312 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (157, 6)
2025-04-28 22:05:47.312 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:05:52.235 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:05:52.235 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:52.235753, end_date=2025-04-28 22:05:52.235753, timeframe=1D
2025-04-28 22:05:52.254 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 23 rows
2025-04-28 22:05:52.255 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:05:52.255 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (23, 6)
2025-04-28 22:05:52.256 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:05:52.393 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:52.393 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:05:52.393924, end_date=2025-04-28 22:05:52.393924, timeframe=1D
2025-04-28 22:05:52.408 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 23 rows
2025-04-28 22:05:52.409 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:05:52.409 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (23, 6)
2025-04-28 22:05:52.409 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:05:58.191 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:05:58.191 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 22:05:58.191524, end_date=2025-04-28 22:05:58.191524, timeframe=1D
2025-04-28 22:05:58.341 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:05:58.342 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 22:05:58.342537, end_date=2025-04-28 22:05:58.342537, timeframe=1D
2025-04-28 22:05:58.348 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 150 rows
2025-04-28 22:05:58.351 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 2798.1, 1: 2796.5, 2: 2756.6, 3: 2743.5, 4: 2747.6}, 'high_price': {0: 2798.9, 1: 2800.8, 2: 2772.4, 3: 2749.5, 4: 2757.5}, 'low_price': {0: 2796.1, 1: 2742.6, 2: 2742.6, 3: 2739.4, 4: 2740.7}, 'close_price': {0: 2796.4, 1: 2756.5, 2: 2745.9, 3: 2747.4, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-30 00:00:00'), 1: Timestamp('2024-10-31 00:00:00'), 2: Timestamp('2024-11-01 00:00:00'), 3: Timestamp('2024-11-03 00:00:00'), 4: Timestamp('2024-11-04 00:00:00')}}
2025-04-28 22:05:58.351 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (150, 6)
2025-04-28 22:05:58.352 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:05:58.497 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 150 rows
2025-04-28 22:05:58.500 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 2798.1, 1: 2796.5, 2: 2756.6, 3: 2743.5, 4: 2747.6}, 'high_price': {0: 2798.9, 1: 2800.8, 2: 2772.4, 3: 2749.5, 4: 2757.5}, 'low_price': {0: 2796.1, 1: 2742.6, 2: 2742.6, 3: 2739.4, 4: 2740.7}, 'close_price': {0: 2796.4, 1: 2756.5, 2: 2745.9, 3: 2747.4, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-30 00:00:00'), 1: Timestamp('2024-10-31 00:00:00'), 2: Timestamp('2024-11-01 00:00:00'), 3: Timestamp('2024-11-03 00:00:00'), 4: Timestamp('2024-11-04 00:00:00')}}
2025-04-28 22:05:58.500 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (150, 6)
2025-04-28 22:05:58.500 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:06:10.404 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:06:10.404 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 22:06:10.404506, end_date=2025-04-28 22:06:10.404506, timeframe=1D
2025-04-28 22:06:10.489 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 150 rows
2025-04-28 22:06:10.501 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 2798.1, 1: 2796.5, 2: 2756.6, 3: 2743.5, 4: 2747.6}, 'high_price': {0: 2798.9, 1: 2800.8, 2: 2772.4, 3: 2749.5, 4: 2757.5}, 'low_price': {0: 2796.1, 1: 2742.6, 2: 2742.6, 3: 2739.4, 4: 2740.7}, 'close_price': {0: 2796.4, 1: 2756.5, 2: 2745.9, 3: 2747.4, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-30 00:00:00'), 1: Timestamp('2024-10-31 00:00:00'), 2: Timestamp('2024-11-01 00:00:00'), 3: Timestamp('2024-11-03 00:00:00'), 4: Timestamp('2024-11-04 00:00:00')}}
2025-04-28 22:06:10.501 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (150, 6)
2025-04-28 22:06:10.501 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:06:10.521 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:10.521 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 22:06:10.521724, end_date=2025-04-28 22:06:10.521724, timeframe=1D
2025-04-28 22:06:10.720 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 150 rows
2025-04-28 22:06:10.722 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 2798.1, 1: 2796.5, 2: 2756.6, 3: 2743.5, 4: 2747.6}, 'high_price': {0: 2798.9, 1: 2800.8, 2: 2772.4, 3: 2749.5, 4: 2757.5}, 'low_price': {0: 2796.1, 1: 2742.6, 2: 2742.6, 3: 2739.4, 4: 2740.7}, 'close_price': {0: 2796.4, 1: 2756.5, 2: 2745.9, 3: 2747.4, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-30 00:00:00'), 1: Timestamp('2024-10-31 00:00:00'), 2: Timestamp('2024-11-01 00:00:00'), 3: Timestamp('2024-11-03 00:00:00'), 4: Timestamp('2024-11-04 00:00:00')}}
2025-04-28 22:06:10.722 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (150, 6)
2025-04-28 22:06:10.722 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:06:14.028 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:14.028 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:14.028594, end_date=2025-04-28 22:06:14.028594, timeframe=1D
2025-04-28 22:06:14.133 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:14.133 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:14.133263, end_date=2025-04-28 22:06:14.133263, timeframe=1D
2025-04-28 22:06:16.665 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:16.666 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 22:06:16.666136, end_date=2025-04-28 22:06:16.666136, timeframe=1D
2025-04-28 22:06:16.672 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 5 rows
2025-04-28 22:06:16.673 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 3442.4, 1: 3445.3, 2: 3346.1, 3: 3327.6, 4: 3359.8}, 'high_price': {0: 3455.9, 1: 3509.9, 2: 3396.0, 3: 3384.1, 4: 3374.3}, 'low_price': {0: 3440.2, 1: 3316.0, 2: 3270.8, 3: 3316.9, 4: 3274.8}, 'close_price': {0: 3445.3, 1: 3346.2, 2: 3327.4, 3: 3360.2, 4: 3330.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-04-21 00:00:00'), 1: Timestamp('2025-04-22 00:00:00'), 2: Timestamp('2025-04-23 00:00:00'), 3: Timestamp('2025-04-24 00:00:00'), 4: Timestamp('2025-04-25 00:00:00')}}
2025-04-28 22:06:16.673 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (5, 6)
2025-04-28 22:06:16.673 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:06:19.990 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:19.990 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:06:19.990323, end_date=2025-04-28 22:06:19.990323, timeframe=1D
2025-04-28 22:06:20.003 | INFO     | views.visual_dashboard:get_price_data:893 - Returning dataframe with 23 rows
2025-04-28 22:06:20.005 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:06:20.005 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame shape: (23, 6)
2025-04-28 22:06:20.005 | INFO     | views.visual_dashboard:update_dashboard:1414 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:06:22.450 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:22.450 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:22.450256, end_date=2025-04-28 22:06:22.450256, timeframe=1D
2025-04-28 22:06:22.544 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:22.544 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:22.544786, end_date=2025-04-28 22:06:22.544786, timeframe=1D
2025-04-28 22:06:30.446 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:06:30.446 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:30.446435, end_date=2025-04-28 22:06:30.446435, timeframe=1H
2025-04-28 22:06:30.513 | INFO     | views.visual_dashboard:update_dashboard:1309 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:30.513 | INFO     | views.visual_dashboard:update_dashboard:1371 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-27 22:06:30.513701, end_date=2025-04-28 22:06:30.513701, timeframe=1H
2025-04-28 22:06:39.722 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:06:39.725 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:06:40.567 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:40.567 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:06:40.567420, end_date=2025-04-28 22:06:40.567420, timeframe=1H
2025-04-28 22:06:40.591 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:06:40.591 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:06:40.591935, end_date=2025-04-28 22:06:40.591935, timeframe=1H
2025-04-28 22:06:40.610 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:40.620 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:40.621 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:40.621 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:40.629 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:40.633 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:40.633 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:40.634 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:40.661 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:40.676 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:06:40.676243, end_date=2025-04-28 22:06:40.676243, timeframe=1H
2025-04-28 22:06:40.714 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:40.715 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:40.715 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:40.715 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:40.747 | ERROR    | views.visual_dashboard:update_dashboard:1477 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x765ec18a4ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 130148288415424)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x765ec18a49d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 130148288415424)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 130148288415424)>
    │    │        │    └ (<socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 130148288415424)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x765e91b7e2f0>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 130148288415424)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 54064)
    │    │              └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x765ec1119900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765e91b7e2f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x765e91b7e2f0>
    │    │                   │        └ ('127.0.0.1', 54064)
    │    │                   └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765e91b7e2f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x765ec0e823b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x765e9016c220>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x765ec10e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x765e9016c220>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x765e9016c220>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x765e91bba170>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765e91b7e2f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x765e9016c220>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x765e901412d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x765e91ac78b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x765e90141510>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x765e91bba170>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x765e90141510>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x765ec092a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x765ec092a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x765ec0929fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x765e92714940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x765ec092a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x765e91acc8c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', None, 'histogram', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ['r...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x765e91b83be0>
                   └ <function _invoke_callback at 0x765ec034dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', None, 'histogram', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ['r...
           └ <function register_callbacks.<locals>.update_dashboard at 0x765e91b83be0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1437, in update_dashboard
    main_fig = create_histogram_chart(df)
               │                      └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
               └ <function create_histogram_chart at 0x765e91b815a0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2576, in create_histogram_chart
    fig = px.histogram(
          │  └ <function histogram at 0x765e9352ee60>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 490, in histogram
    return make_figure(
           └ <function make_figure at 0x765e937013f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  ...
    └ <function apply_default_cascade at 0x765e93700b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1071, in apply_default_cascade
    args["pattern_shape_sequence"] = [
    └ {'data_frame':               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  ...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1072, in <listcomp>
    bar.marker.pattern.shape for bar in args["template"].data.bar
    │   │                        └ <unprintable Bar object>
    │   └ <property object at 0x765e93678ea0>
    └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/bar/marker/_pattern.py", line 252, in shape
    return self["shape"]
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x765ec05c31a0>
         │    │                      │       └ <unprintable Pattern object>
         │    │                      └ 'shape'
         │    └ <property object at 0x765ec05c31a0>
         └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Pattern object>
           │    └ <property object at 0x765ec05c3240>
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x765ec05c31a0>
       └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x765ec05c3240>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x765ec05c31a0>
       └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Bar object>
           │    └ <property object at 0x765ec05c3240>
           └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Bar object>
                │          │         └ (Bar({
                │          │               'error_x': {'color': '#2a3f5f'},
                │          │               'error_y': {'color': '#2a3f5f'},
                │          │               'marker': {'line': {'color': '#E5ECF6', ...
                │          └ <staticmethod(<function BaseFigure._index_is at 0x765ec05eb0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 22:06:43.517 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:43.517 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 22:06:43.517384, end_date=2025-04-28 22:06:43.517384, timeframe=1H
2025-04-28 22:06:43.526 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 94 rows
2025-04-28 22:06:43.528 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 23:00:00'), 1: Timestamp('2025-04-22 00:00:00'), 2: Timestamp('2025-04-22 01:00:00'), 3: Timestamp('2025-04-22 02:00:00'), 4: Timestamp('2025-04-22 03:00:00')}, 'open_price': {0: 3442.4, 1: 3445.3, 2: 3436.1, 3: 3462.5, 4: 3482.7}, 'high_price': {0: 3455.9, 1: 3446.3, 2: 3464.6, 3: 3485.9, 4: 3504.2}, 'low_price': {0: 3440.2, 1: 3423.9, 2: 3431.8, 3: 3452.4, 4: 3481.2}, 'close_price': {0: 3445.3, 1: 3436.2, 2: 3462.6, 3: 3482.7, 4: 3497.6}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:43.528 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (94, 6)
2025-04-28 22:06:43.528 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:43.640 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:43.640 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-04-21 22:06:43.640582, end_date=2025-04-28 22:06:43.640582, timeframe=1H
2025-04-28 22:06:43.647 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 94 rows
2025-04-28 22:06:43.648 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-04-21 23:00:00'), 1: Timestamp('2025-04-22 00:00:00'), 2: Timestamp('2025-04-22 01:00:00'), 3: Timestamp('2025-04-22 02:00:00'), 4: Timestamp('2025-04-22 03:00:00')}, 'open_price': {0: 3442.4, 1: 3445.3, 2: 3436.1, 3: 3462.5, 4: 3482.7}, 'high_price': {0: 3455.9, 1: 3446.3, 2: 3464.6, 3: 3485.9, 4: 3504.2}, 'low_price': {0: 3440.2, 1: 3423.9, 2: 3431.8, 3: 3452.4, 4: 3481.2}, 'close_price': {0: 3445.3, 1: 3436.2, 2: 3462.6, 3: 3482.7, 4: 3497.6}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:43.648 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (94, 6)
2025-04-28 22:06:43.648 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:47.435 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:47.435 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 22:06:47.435873, end_date=2025-04-28 22:06:47.435873, timeframe=1H
2025-04-28 22:06:47.554 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 2086 rows
2025-04-28 22:06:47.559 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:47.559 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 22:06:47.559930, end_date=2025-04-28 22:06:47.559930, timeframe=1H
2025-04-28 22:06:47.563 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:47.563 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (2086, 6)
2025-04-28 22:06:47.563 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:47.658 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 2086 rows
2025-04-28 22:06:47.660 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 23:00:00'), 1: Timestamp('2025-01-29 00:00:00'), 2: Timestamp('2025-01-29 01:00:00'), 3: Timestamp('2025-01-29 02:00:00'), 4: Timestamp('2025-01-29 03:00:00')}, 'open_price': {0: 2771.6, 1: 2769.8, 2: 2770.9, 3: 2772.0, 4: 2771.8}, 'high_price': {0: 2771.7, 1: 2771.9, 2: 2773.8, 3: 2773.8, 4: 2772.0}, 'low_price': {0: 2769.7, 1: 2769.5, 2: 2770.9, 3: 2771.6, 4: 2769.6}, 'close_price': {0: 2769.8, 1: 2771.0, 2: 2772.1, 3: 2771.9, 4: 2770.0}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:47.660 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (2086, 6)
2025-04-28 22:06:47.660 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:50.456 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:50.457 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:06:50.501 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 2109 rows
2025-04-28 22:06:50.505 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 00:00:00'), 1: Timestamp('2025-01-28 01:00:00'), 2: Timestamp('2025-01-28 02:00:00'), 3: Timestamp('2025-01-28 03:00:00'), 4: Timestamp('2025-01-28 04:00:00')}, 'open_price': {0: 2745.6, 1: 2744.7, 2: 2744.5, 3: 2742.9, 4: 2741.7}, 'high_price': {0: 2748.0, 1: 2749.7, 2: 2745.2, 3: 2745.4, 4: 2744.8}, 'low_price': {0: 2743.6, 1: 2742.8, 2: 2741.9, 3: 2740.8, 4: 2741.4}, 'close_price': {0: 2744.7, 1: 2744.8, 2: 2742.8, 3: 2741.7, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:50.506 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:50.506 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (2109, 6)
2025-04-28 22:06:50.506 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:06:50.506 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:50.596 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 2109 rows
2025-04-28 22:06:50.599 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-28 00:00:00'), 1: Timestamp('2025-01-28 01:00:00'), 2: Timestamp('2025-01-28 02:00:00'), 3: Timestamp('2025-01-28 03:00:00'), 4: Timestamp('2025-01-28 04:00:00')}, 'open_price': {0: 2745.6, 1: 2744.7, 2: 2744.5, 3: 2742.9, 4: 2741.7}, 'high_price': {0: 2748.0, 1: 2749.7, 2: 2745.2, 3: 2745.4, 4: 2744.8}, 'low_price': {0: 2743.6, 1: 2742.8, 2: 2741.9, 3: 2740.8, 4: 2741.4}, 'close_price': {0: 2744.7, 1: 2744.8, 2: 2742.8, 3: 2741.7, 4: 2744.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:50.599 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (2109, 6)
2025-04-28 22:06:50.599 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:52.284 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:52.285 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 22:06:52.285192, end_date=2025-04-28 22:06:52.285192, timeframe=1H
2025-04-28 22:06:52.300 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:52.302 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:52.302 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:52.302 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:56.972 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:06:56.972 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:06:56.989 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:56.990 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:56.990 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:56.990 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:57.073 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:06:57.083 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:06:57.129 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:06:57.131 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:57.131 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:06:57.131 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:06:59.099 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: dashboard-custom-date-range
2025-04-28 22:06:59.099 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-04 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:06:59.130 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 1269 rows
2025-04-28 22:06:59.132 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-04 00:00:00'), 1: Timestamp('2025-03-04 01:00:00'), 2: Timestamp('2025-03-04 02:00:00'), 3: Timestamp('2025-03-04 03:00:00'), 4: Timestamp('2025-03-04 04:00:00')}, 'open_price': {0: 2901.5, 1: 2902.4, 2: 2899.4, 3: 2895.5, 4: 2898.6}, 'high_price': {0: 2904.2, 1: 2903.9, 2: 2900.9, 3: 2904.0, 4: 2902.9}, 'low_price': {0: 2900.0, 1: 2892.5, 2: 2895.2, 3: 2894.8, 4: 2896.3}, 'close_price': {0: 2902.4, 1: 2899.3, 2: 2895.6, 3: 2898.7, 4: 2901.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:06:59.132 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (1269, 6)
2025-04-28 22:06:59.132 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:04.808 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: dashboard-custom-date-range
2025-04-28 22:07:04.809 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-04 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:04.890 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 1269 rows
2025-04-28 22:07:04.891 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-04 00:00:00'), 1: Timestamp('2025-03-04 01:00:00'), 2: Timestamp('2025-03-04 02:00:00'), 3: Timestamp('2025-03-04 03:00:00'), 4: Timestamp('2025-03-04 04:00:00')}, 'open_price': {0: 2901.5, 1: 2902.4, 2: 2899.4, 3: 2895.5, 4: 2898.6}, 'high_price': {0: 2904.2, 1: 2903.9, 2: 2900.9, 3: 2904.0, 4: 2902.9}, 'low_price': {0: 2900.0, 1: 2892.5, 2: 2895.2, 3: 2894.8, 4: 2896.3}, 'close_price': {0: 2902.4, 1: 2899.3, 2: 2895.6, 3: 2898.7, 4: 2901.9}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:04.891 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (1269, 6)
2025-04-28 22:07:04.891 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:09.905 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: dashboard-custom-date-range
2025-04-28 22:07:09.905 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:09.959 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:09.961 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:09.962 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:09.962 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:13.138 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:07:13.138 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:13.213 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:07:13.214 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:13.257 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:13.261 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:13.263 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:13.263 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:13.293 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:13.296 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:13.296 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:13.296 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:15.831 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:07:15.831 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:15.953 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:15.959 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:07:15.962 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:15.962 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:15.962 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:15.963 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:16.044 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:16.045 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:16.045 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:16.045 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:51.656 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:07:51.657 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:51.732 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:51.734 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:07:51.734 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:51.736 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:51.737 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:51.737 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:51.846 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:51.850 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:51.862 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:51.864 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:53.854 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:07:53.855 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:53.926 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:07:53.927 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:54.038 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:54.050 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:54.050 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:54.050 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:54.058 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:54.060 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:54.061 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:54.061 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:55.994 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:07:55.995 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:56.058 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:07:56.061 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:07:56.099 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:56.105 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:56.106 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:56.108 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:07:56.137 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:07:56.139 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:07:56.140 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:07:56.140 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:08:10.410 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:08:10.411 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:08:10.559 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:08:10.561 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:08:10.563 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:08:10.563 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:08:10.565 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:08:10.565 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:08:10.661 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:08:10.664 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:08:10.664 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:08:10.664 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:08:31.381 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:08:31.383 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:08:56.182 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:08:56.183 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD', 'PLATINUM'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:08:56.256 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:08:56.260 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD', 'PLATINUM'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:08:56.330 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:08:56.332 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:08:56.333 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:08:56.333 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:08:56.411 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:08:56.412 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:08:56.413 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:08:56.413 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:09:01.163 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:09:01.163 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:09:01.307 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:09:01.308 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:09:01.312 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:09:01.314 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:09:01.314 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:09:01.314 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:09:01.369 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:09:01.373 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:09:01.374 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:09:01.392 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:09:12.494 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:09:12.497 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:09:13.445 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:09:13.446 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:09:13.564 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:09:13.565 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-12-02 00:00:00, end_date=2025-04-29 00:00:00, timeframe=1H
2025-04-28 22:09:13.576 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:09:13.578 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:09:13.578 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:09:13.578 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:09:13.667 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 3477 rows
2025-04-28 22:09:13.670 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-12-02 00:00:00'), 1: Timestamp('2024-12-02 01:00:00'), 2: Timestamp('2024-12-02 02:00:00'), 3: Timestamp('2024-12-02 03:00:00'), 4: Timestamp('2024-12-02 04:00:00')}, 'open_price': {0: 2668.8, 1: 2660.2, 2: 2658.4, 3: 2649.6, 4: 2652.3}, 'high_price': {0: 2670.3, 1: 2661.8, 2: 2660.7, 3: 2653.9, 4: 2653.5}, 'low_price': {0: 2636.5, 1: 2621.7, 2: 2627.5, 3: 2623.3, 4: 2627.8}, 'close_price': {0: 2660.1, 1: 2658.6, 2: 2649.3, 3: 2652.2, 4: 2651.2}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:09:13.670 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (3477, 6)
2025-04-28 22:09:13.670 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:09:14.185 | ERROR    | views.visual_dashboard:update_dashboard:1477 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7d90733a4ca0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 138058532898496)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7d90733a49d0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 138058532898496)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 138058532898496)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 138058532898496)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7d904405a2f0>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 138058532898496)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 51326)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7d9072c19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d904405a2f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d904405a2f0>
    │    │                   │        └ ('127.0.0.1', 51326)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d904405a2f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7d90729d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7d90435b4670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7d9072be13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7d90435b4670>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7d90435b4670>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7d9044096200>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7d904405a2f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7d90435b4670>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7d9043577e20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7d9043533220>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7d9043577c70>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7d9044096200>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7d9043577c70>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7d9072486830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7d9072486050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7d9072485fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7d90442444c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7d9072486200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7d9043500e80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'candlestick', '2024-12-02', '2025-04-29', ['close', 'high', 'open', 'low'], [], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7d904405f760>
                   └ <function _invoke_callback at 0x7d9071ebdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'candlestick', '2024-12-02', '2025-04-29', ['close', 'high', 'open', 'low'], [], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7d904405f760>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1459, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └                timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss      ...
                     └ <function create_volatility_chart at 0x7d904405d2d0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1821, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x7d9045086c20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7d904525d3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':                timestamp metal_type  volatility
    │                       7    2024-12-02 07:00:00       gold    0.178815
    │                       8    2024-12-0...
    └ <function apply_default_cascade at 0x7d904525cb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':                timestamp metal_type  volatility
      7    2024-12-02 07:00:00       gold    0.178815
      8    2024-12-0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7d90451b4cc0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7d90720f6e30>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7d90720f6e30>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7d90720f6ed0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7d90720f6e30>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7d90720f6ed0>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7d90721530a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 22:10:23.821 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:10:23.823 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:10:32.343 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:10:32.344 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:32.373 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:32.374 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:32.374 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:32.374 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:32.408 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:10:32.409 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:32.423 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:32.425 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:32.425 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:32.425 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:32.920 | ERROR    | views.visual_dashboard:update_dashboard:1477 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x765ff2ca4ca0>
    └ <Thread(Thread-27 (process_request_thread), started daemon 130153638250176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x765ff2ca49d0>
    └ <Thread(Thread-27 (process_request_thread), started daemon 130153638250176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-27 (process_request_thread), started daemon 130153638250176)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-27 (process_request_thread), started daemon 130153638250176)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x765fc2f862f0>>
    └ <Thread(Thread-27 (process_request_thread), started daemon 130153638250176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42126)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x765ff2519900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765fc2f862f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x765fc2f862f0>
    │    │                   │        └ ('127.0.0.1', 42126)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765fc2f862f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x765ff22e23b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x765fc2f86260>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x765ff24e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x765fc2f86260>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x765fc2f86260>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x765fc2fca170>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x765fc2f862f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x765fc2f86260>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x765fc2e20700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x765fc2eb26c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x765fc2e20e50>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x765fc2fca170>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x765fc2e20e50>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x765ff1d9e830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x765ff1d9e050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x765ff1d9dfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x765fc3ba04c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x765ff1d9e200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x765fc2e69b00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x765fc2f8fbe0>
                   └ <function _invoke_callback at 0x765ff17d5ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'candlestick', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'...
           └ <function register_callbacks.<locals>.update_dashboard at 0x765fc2f8fbe0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1459, in update_dashboard
    volatility_fig = create_volatility_chart(df)
                     │                       └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                     └ <function create_volatility_chart at 0x765fc2f8d360>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1821, in create_volatility_chart
    fig = px.line(
          │  └ <function line at 0x765fc497ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x765fc4b553f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':               timestamp metal_type  volatility
    │                       7   2025-03-31 05:00:00       gold    0.235656
    │                       8   2025-03-31 0...
    └ <function apply_default_cascade at 0x765fc4b54b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':               timestamp metal_type  volatility
      7   2025-03-31 05:00:00       gold    0.235656
      8   2025-03-31 0...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x765fc4aacae0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x765ff1a43150>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x765ff1a43150>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x765ff1a431f0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x765ff1a43150>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x765ff1a431f0>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x765ff1a6b0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 22:10:46.039 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:10:46.039 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:46.061 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:46.063 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:46.063 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:46.063 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:46.114 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:10:46.115 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:46.135 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:46.137 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:46.137 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:46.137 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:56.343 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:10:56.343 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:56.360 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:56.361 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:56.362 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:56.362 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:56.422 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:10:56.425 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:56.444 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:56.469 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:56.476 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:56.476 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:58.061 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:10:58.061 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:58.080 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:58.082 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:58.082 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:58.082 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:10:58.158 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:10:58.160 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:10:58.202 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:10:58.204 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:10:58.205 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:10:58.206 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:06.077 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:11:06.077 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:06.095 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:06.097 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:06.097 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:06.097 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:06.322 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:11:06.339 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:06.386 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:06.386 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:06.387 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:06.387 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:09.112 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:11:09.112 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:09.129 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:09.131 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:09.131 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:09.131 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:09.189 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:11:09.190 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:09.244 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:09.247 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:09.247 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:09.247 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:11.609 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:11:11.609 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:11.628 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:11.630 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:11.630 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:11.630 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:11.696 | INFO     | views.visual_dashboard:update_dashboard:1308 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:11:11.697 | INFO     | views.visual_dashboard:update_dashboard:1370 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:11:11.740 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:11:11.753 | INFO     | views.visual_dashboard:update_dashboard:1411 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:11:11.753 | INFO     | views.visual_dashboard:update_dashboard:1412 - DataFrame shape: (623, 6)
2025-04-28 22:11:11.753 | INFO     | views.visual_dashboard:update_dashboard:1413 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:11:17.881 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:11:17.883 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:12:37.008 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:12:37.011 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:04.035 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:04.038 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:11.426 | INFO     | views.visual_dashboard:update_dashboard:1408 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:13:11.427 | INFO     | views.visual_dashboard:update_dashboard:1470 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:13:11.467 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:13:11.468 | INFO     | views.visual_dashboard:update_dashboard:1511 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:13:11.468 | INFO     | views.visual_dashboard:update_dashboard:1512 - DataFrame shape: (623, 6)
2025-04-28 22:13:11.468 | INFO     | views.visual_dashboard:update_dashboard:1513 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:13:11.529 | INFO     | views.visual_dashboard:update_dashboard:1408 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:13:11.530 | INFO     | views.visual_dashboard:update_dashboard:1470 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:13:11.543 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:13:11.545 | INFO     | views.visual_dashboard:update_dashboard:1511 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:13:11.545 | INFO     | views.visual_dashboard:update_dashboard:1512 - DataFrame shape: (623, 6)
2025-04-28 22:13:11.545 | INFO     | views.visual_dashboard:update_dashboard:1513 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:13:22.994 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:22.996 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:53.873 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:13:53.875 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:03.098 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:03.100 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:03.718 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:03.721 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:38.690 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:38.692 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:14:42.300 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:14:42.302 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:42.327 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:14:42.329 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:42.329 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:14:42.329 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:42.473 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:42.473 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:42.495 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:42.495 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:14:42.495 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:42.497 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:42.497 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:14:42.497 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:42.553 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:14:42.559 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:42.560 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:14:42.560 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:47.942 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: source-dropdown
2025-04-28 22:14:47.942 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:47.964 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:47.966 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:47.966 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:47.967 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:48.049 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:48.067 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:48.122 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:48.123 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:48.133 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:48.140 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:48.142 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:48.142 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:48.142 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:48.147 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:48.149 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:48.150 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:51.722 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:51.804 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:51.804 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:51.824 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:51.825 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:51.825 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:51.825 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:51.884 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:51.884 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:51.914 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:51.934 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:51.934 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:51.935 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:52.987 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.063 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.064 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:53.087 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:53.088 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:53.088 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:53.088 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:53.123 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.124 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:53.164 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:53.178 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:53.179 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:53.179 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:53.625 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.700 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.701 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:53.716 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:53.717 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:53.717 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:53.717 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:53.759 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:53.760 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:53.820 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:53.841 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:53.849 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:53.850 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:54.034 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.114 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.114 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:54.134 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:54.135 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:54.136 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:54.136 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:54.168 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.171 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:54.234 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:54.251 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:54.260 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:54.262 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:54.616 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.689 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.690 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:54.710 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:54.712 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:54.713 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:54.713 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:54.749 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:54.755 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:54.790 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:54.812 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:54.824 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:54.824 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.025 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.111 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.112 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.126 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.128 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.128 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.128 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.162 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.164 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.208 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.211 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.212 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.212 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.323 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.412 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.413 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.430 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.431 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.431 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.431 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.470 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.481 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.624 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.626 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.626 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.626 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.683 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.781 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.781 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.798 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.800 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.800 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.800 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:55.822 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:55.832 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:55.904 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:55.906 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:55.912 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:55.919 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:56.269 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.354 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.354 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:56.369 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:56.370 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:56.370 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:56.370 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:56.419 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.420 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:56.460 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:56.461 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:56.462 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:56.462 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:56.731 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.809 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.810 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:56.827 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:56.828 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:56.828 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:56.828 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:14:56.886 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:14:56.886 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:14:56.938 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:14:56.940 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:14:56.940 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:14:56.941 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:02.418 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:02.503 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:02.503 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:02.518 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:02.519 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:02.520 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:02.520 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:02.555 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:02.562 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:02.602 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:02.631 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:02.631 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:02.631 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:02.869 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:02.942 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:02.942 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:02.969 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:02.970 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:02.970 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:02.971 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:03.031 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.032 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:03.077 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:03.079 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:03.080 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:03.081 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:03.277 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.350 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.350 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:03.371 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:03.372 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:03.373 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:03.373 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:03.415 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.426 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:03.481 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:03.484 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:03.490 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:03.504 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:03.818 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.896 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.896 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:03.913 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:03.915 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:03.915 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:03.915 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:03.970 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:03.977 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:04.025 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:04.028 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:04.029 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:04.029 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:05.644 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:05.716 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:05.716 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:05.733 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:05.734 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:05.734 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:05.735 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:05.769 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:05.773 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:05.836 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 719 rows
2025-04-28 22:15:05.857 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-29 00:00:00'), 1: Timestamp('2025-03-29 01:00:00'), 2: Timestamp('2025-03-29 02:00:00'), 3: Timestamp('2025-03-29 03:00:00'), 4: Timestamp('2025-03-29 04:00:00')}, 'open_price': {0: 4219.09, 1: 4219.09, 2: 4219.09, 3: 4219.09, 4: 4219.09}, 'high_price': {0: 4229.21, 1: 4229.21, 2: 4229.21, 3: 4229.21, 4: 4229.21}, 'low_price': {0: 4080.45, 1: 4080.45, 2: 4080.45, 3: 4080.45, 4: 4080.45}, 'close_price': {0: 4130.84, 1: 4130.84, 2: 4130.84, 3: 4130.84, 4: 4130.84}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:05.857 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (719, 6)
2025-04-28 22:15:05.857 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:52.430 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: source-dropdown
2025-04-28 22:15:52.430 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:52.454 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:15:52.460 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:52.460 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:15:52.460 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:52.536 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:52.536 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:52.578 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:15:52.582 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:15:52.610 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:15:52.624 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:52.624 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:15:52.624 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:15:52.646 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:15:52.651 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:15:52.652 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:15:52.652 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:16:03.274 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:16:03.277 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:12.303 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:12.304 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:17.299 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:17.301 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:17.301 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:17.301 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:17.301 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:17.301 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:17.302 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:17.302 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:16:17.302 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:16:19.194 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:16:19.196 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:17:02.828 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:17:02.830 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:17:53.671 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:17:53.673 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:19:06.217 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:19:06.219 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:19:06.828 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:19:06.831 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:19:07.308 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:19:07.308 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:19:07.309 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:19:07.309 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:19:07.309 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:19:07.309 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:19:07.315 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:19:07.317 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:19:07.317 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:19:11.681 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:19:11.682 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:19:11.704 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:19:11.706 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:19:11.706 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:19:11.706 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:19:12.315 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:19:12.315 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:19:12.329 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:19:12.331 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:19:12.331 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:19:12.331 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:19:12.369 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:19:12.388 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:19:12.425 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:19:12.434 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:19:12.435 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:19:12.436 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:19:12.670 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:19:12.757 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:19:12.758 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:19:12.772 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:19:12.773 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:19:12.773 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:19:12.773 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:19:12.811 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:19:12.816 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:19:12.845 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:19:12.847 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:19:12.847 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:19:12.849 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:20:11.006 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:20:11.007 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:20:11.007 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:20:11.007 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:20:11.008 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:20:11.008 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:20:11.008 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:20:11.008 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:20:11.008 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:20:14.677 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:20:14.678 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:20:14.697 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:20:14.699 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:20:14.699 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:20:14.699 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:20:14.881 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:20:14.883 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:20:14.931 | INFO     | views.visual_dashboard:update_dashboard:1441 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:20:14.933 | INFO     | views.visual_dashboard:update_dashboard:1503 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:20:14.933 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:20:14.935 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:20:14.935 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:20:14.935 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:20:14.971 | INFO     | views.visual_dashboard:get_price_data:892 - Returning dataframe with 623 rows
2025-04-28 22:20:14.994 | INFO     | views.visual_dashboard:update_dashboard:1544 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:20:15.000 | INFO     | views.visual_dashboard:update_dashboard:1545 - DataFrame shape: (623, 6)
2025-04-28 22:20:15.024 | INFO     | views.visual_dashboard:update_dashboard:1546 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:21:11.281 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:21:11.283 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:21:25.260 | INFO     | views.visual_dashboard:update_dashboard:1465 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:21:25.261 | INFO     | views.visual_dashboard:update_dashboard:1527 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:21:25.261405, end_date=2025-04-28 22:21:25.261405, timeframe=1H
2025-04-28 22:21:25.408 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:21:25.411 | INFO     | views.visual_dashboard:update_dashboard:1568 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:21:25.411 | INFO     | views.visual_dashboard:update_dashboard:1569 - DataFrame shape: (8686, 6)
2025-04-28 22:21:25.412 | INFO     | views.visual_dashboard:update_dashboard:1570 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:21:43.321 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:21:43.324 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:01.136 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:01.138 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:34.021 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:34.023 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:40.837 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:40.839 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:22:41.736 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:22:41.737 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:22:41.737797, end_date=2025-04-28 22:22:41.737797, timeframe=1H
2025-04-28 22:22:41.875 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:22:41.880 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:41.880 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8686, 6)
2025-04-28 22:22:41.880 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:45.771 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: source-dropdown
2025-04-28 22:22:45.772 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:45.772425, end_date=2025-04-28 22:22:45.772425, timeframe=1H
2025-04-28 22:22:46.007 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:46.008 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:46.008931, end_date=2025-04-28 22:22:46.008931, timeframe=1H
2025-04-28 22:22:46.012 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:46.014 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:46.015 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:46.015 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:46.204 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:46.215 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:46.219 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:46.220 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:48.476 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:48.574 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:48.574 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:48.574907, end_date=2025-04-28 22:22:48.574907, timeframe=1H
2025-04-28 22:22:48.680 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:48.683 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:48.683 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:48.684 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:49.090 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:49.182 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:49.182 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:49.182971, end_date=2025-04-28 22:22:49.182971, timeframe=1H
2025-04-28 22:22:49.334 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:49.341 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:49.341 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:49.341 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:50.456 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:50.545 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:50.545 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:50.545437, end_date=2025-04-28 22:22:50.545437, timeframe=1H
2025-04-28 22:22:50.693 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:50.695 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:50.695 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:50.695 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:51.108 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:51.206 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:51.206 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:51.206784, end_date=2025-04-28 22:22:51.206784, timeframe=1H
2025-04-28 22:22:51.306 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:51.309 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:51.309 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:51.309 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:22:51.377 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:51.478 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:22:51.479 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:22:51.479063, end_date=2025-04-28 22:22:51.479063, timeframe=1H
2025-04-28 22:22:51.734 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:22:51.738 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:22:51.738 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:22:51.738 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:04.698 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:04.783 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:04.783 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:04.783439, end_date=2025-04-28 22:23:04.783439, timeframe=1H
2025-04-28 22:23:04.940 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:04.942 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:04.942 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:04.942 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:05.670 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:05.768 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:05.768 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:05.768517, end_date=2025-04-28 22:23:05.768517, timeframe=1H
2025-04-28 22:23:05.872 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:05.875 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:05.875 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:05.875 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:06.628 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:06.714 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:06.714 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:06.714669, end_date=2025-04-28 22:23:06.714669, timeframe=1H
2025-04-28 22:23:06.869 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:06.872 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:06.872 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:06.872 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:07.473 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:07.568 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:07.569 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:07.569045, end_date=2025-04-28 22:23:07.569045, timeframe=1H
2025-04-28 22:23:07.668 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:07.670 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:07.671 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:07.671 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:09.514 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:23:09.514 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:09.514875, end_date=2025-04-28 22:23:09.514875, timeframe=4H
2025-04-28 22:23:09.582 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:09.582 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:09.582871, end_date=2025-04-28 22:23:09.582871, timeframe=4H
2025-04-28 22:23:09.703 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 2100 rows
2025-04-28 22:23:09.711 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 04:00:00'), 2: Timestamp('2024-05-13 08:00:00'), 3: Timestamp('2024-05-13 12:00:00'), 4: Timestamp('2024-05-13 16:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:09.712 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (2100, 6)
2025-04-28 22:23:09.713 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:09.879 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 2100 rows
2025-04-28 22:23:09.894 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 04:00:00'), 2: Timestamp('2024-05-13 08:00:00'), 3: Timestamp('2024-05-13 12:00:00'), 4: Timestamp('2024-05-13 16:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:09.894 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (2100, 6)
2025-04-28 22:23:09.894 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:11.097 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:23:11.098 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:11.098078, end_date=2025-04-28 22:23:11.098078, timeframe=1H
2025-04-28 22:23:11.179 | INFO     | views.visual_dashboard:update_dashboard:1499 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:23:11.179 | INFO     | views.visual_dashboard:update_dashboard:1561 - Getting data with params: metals=['GOLD'], source=ALPHAVANTAGE_API, start_date=2024-04-28 22:23:11.179588, end_date=2025-04-28 22:23:11.179588, timeframe=1H
2025-04-28 22:23:11.299 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:11.308 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:11.310 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:11.313 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:23:11.431 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8399 rows
2025-04-28 22:23:11.438 | INFO     | views.visual_dashboard:update_dashboard:1602 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-05-13 00:00:00'), 1: Timestamp('2024-05-13 01:00:00'), 2: Timestamp('2024-05-13 02:00:00'), 3: Timestamp('2024-05-13 03:00:00'), 4: Timestamp('2024-05-13 04:00:00')}, 'open_price': {0: 3072.65, 1: 3072.65, 2: 3072.65, 3: 3072.65, 4: 3072.65}, 'high_price': {0: 3172.81, 1: 3172.81, 2: 3172.81, 3: 3172.81, 4: 3172.81}, 'low_price': {0: 3036.93, 1: 3036.93, 2: 3036.93, 3: 3036.93, 4: 3036.93}, 'close_price': {0: 3146.62, 1: 3146.62, 2: 3146.62, 3: 3146.62, 4: 3146.62}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:23:11.441 | INFO     | views.visual_dashboard:update_dashboard:1603 - DataFrame shape: (8399, 6)
2025-04-28 22:23:11.442 | INFO     | views.visual_dashboard:update_dashboard:1604 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:26:27.716 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:26:27.718 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:26:52.625 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:26:52.627 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:27:18.727 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: source-dropdown
2025-04-28 22:27:18.729 | INFO     | views.visual_dashboard:update_dashboard:1600 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:27:18.729257, end_date=2025-04-28 22:27:18.729257, timeframe=1H
2025-04-28 22:27:19.503 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:27:19.505 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:27:19.532 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:27:19.533 | INFO     | views.visual_dashboard:update_dashboard:1600 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:27:19.533239, end_date=2025-04-28 22:27:19.533239, timeframe=1H
2025-04-28 22:27:19.610 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:27:19.612 | INFO     | views.visual_dashboard:update_dashboard:1600 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:27:19.612580, end_date=2025-04-28 22:27:19.612580, timeframe=1H
2025-04-28 22:27:19.760 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:27:19.774 | INFO     | views.visual_dashboard:update_dashboard:1641 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:27:19.774 | INFO     | views.visual_dashboard:update_dashboard:1642 - DataFrame shape: (8686, 6)
2025-04-28 22:27:19.774 | INFO     | views.visual_dashboard:update_dashboard:1643 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:27:19.816 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:27:19.818 | INFO     | views.visual_dashboard:update_dashboard:1641 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:27:19.819 | INFO     | views.visual_dashboard:update_dashboard:1642 - DataFrame shape: (8686, 6)
2025-04-28 22:27:19.819 | INFO     | views.visual_dashboard:update_dashboard:1643 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:27:49.428 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:27:49.429 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:02.214 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:02.216 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:21.022 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:21.024 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:42.851 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:42.853 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:53.662 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:53.664 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:58.436 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:28:58.438 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:29:00.222 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:29:00.224 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:29:01.637 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:01.638 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:01.638970, end_date=2025-04-28 22:29:01.638970, timeframe=1H
2025-04-28 22:29:01.803 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:01.807 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:01.807 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:01.807 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:07.325 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:07.465 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:07.466 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:07.466107, end_date=2025-04-28 22:29:07.466107, timeframe=1H
2025-04-28 22:29:07.609 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:07.611 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:07.611 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:07.611 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:07.890 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:07.957 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:07.957 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:07.957468, end_date=2025-04-28 22:29:07.957468, timeframe=1H
2025-04-28 22:29:08.106 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:08.110 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:08.110 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:08.110 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:08.215 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.327 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.353 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:08.353507, end_date=2025-04-28 22:29:08.353507, timeframe=1H
2025-04-28 22:29:08.468 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.540 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:08.542 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:08.542 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:08.543 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.543 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:08.543 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:08.543710, end_date=2025-04-28 22:29:08.543710, timeframe=1H
2025-04-28 22:29:08.804 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:08.815 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:08.817 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:08.817 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:08.826 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.935 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:08.944 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:08.944895, end_date=2025-04-28 22:29:08.944895, timeframe=1H
2025-04-28 22:29:09.200 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:09.243 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:09.261 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:09.262 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:09.262 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:09.298 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:09.299 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:09.299784, end_date=2025-04-28 22:29:09.299784, timeframe=1H
2025-04-28 22:29:09.653 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:09.657 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:09.658 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (8686, 6)
2025-04-28 22:29:09.658 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:26.619 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:29:26.622 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:29:28.165 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:28.265 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:32.128 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:32.128 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:32.128789, end_date=2025-04-28 22:29:32.128789, timeframe=1H
2025-04-28 22:29:32.199 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:32.200 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:32.200225, end_date=2025-04-28 22:29:32.200225, timeframe=1H
2025-04-28 22:29:32.354 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:32.362 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:32.363 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:32.363 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:32.418 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:32.422 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:32.422 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:32.423 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:34.937 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:35.017 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:44.286 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:44.286 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:44.286775, end_date=2025-04-28 22:29:44.286775, timeframe=1H
2025-04-28 22:29:44.359 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:44.362 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:44.362666, end_date=2025-04-28 22:29:44.362666, timeframe=1H
2025-04-28 22:29:44.489 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:44.493 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:44.493 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:44.493 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:44.578 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:44.583 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:44.586 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:44.591 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:56.074 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:29:56.074 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:56.074499, end_date=2025-04-28 22:29:56.074499, timeframe=1H
2025-04-28 22:29:56.150 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:29:56.156 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:29:56.156950, end_date=2025-04-28 22:29:56.156950, timeframe=1H
2025-04-28 22:29:56.273 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:56.276 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:56.278 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:56.279 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:29:56.358 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:29:56.362 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:29:56.362 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:29:56.363 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:30:05.823 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:30:05.825 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:30:10.699 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:30:10.701 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:30:12.791 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:12.793 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:12.793101, end_date=2025-04-28 22:30:12.793101, timeframe=1H
2025-04-28 22:30:12.935 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:30:12.938 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:30:12.938 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:30:12.938 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:30:16.517 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:30:16.517 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:16.517671, end_date=2025-04-28 22:30:16.517671, timeframe=1H
2025-04-28 22:30:16.607 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:16.607 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:16.607949, end_date=2025-04-28 22:30:16.607949, timeframe=1H
2025-04-28 22:30:16.716 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:30:16.722 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:30:16.724 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:30:16.725 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:30:16.812 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 8686 rows
2025-04-28 22:30:16.817 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2024-04-28 23:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-29 01:00:00'), 3: Timestamp('2024-04-29 02:00:00'), 4: Timestamp('2024-04-29 03:00:00')}, 'open_price': {0: 2346.1, 1: 2347.5, 2: 2343.5, 3: 2342.2, 4: 2335.4}, 'high_price': {0: 2348.4, 1: 2347.8, 2: 2343.5, 3: 2342.9, 4: 2340.3}, 'low_price': {0: 2345.8, 1: 2342.2, 2: 2331.0, 3: 2335.3, 4: 2334.9}, 'close_price': {0: 2347.4, 1: 2343.7, 2: 2342.4, 3: 2335.5, 4: 2339.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:30:16.817 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (8686, 6)
2025-04-28 22:30:16.817 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:30:20.933 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:30:20.933 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:20.933271, end_date=2025-04-28 22:30:20.933271, timeframe=1D
2025-04-28 22:30:21.041 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:21.059 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:21.059272, end_date=2025-04-28 22:30:21.059272, timeframe=1D
2025-04-28 22:30:21.064 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:21.066 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:21.066 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:21.066 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:21.296 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:21.299 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:21.299 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:21.299 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:28.329 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:28.330 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:28.330770, end_date=2025-04-28 22:30:28.330770, timeframe=1D
2025-04-28 22:30:28.418 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:28.420 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:28.420313, end_date=2025-04-28 22:30:28.420313, timeframe=1D
2025-04-28 22:30:28.543 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:28.558 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:28.558 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:28.558 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:28.723 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:28.726 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:28.726 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:28.726 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:34.421 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:34.522 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:36.611 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:36.612 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:36.612701, end_date=2025-04-28 22:30:36.612701, timeframe=1D
2025-04-28 22:30:36.752 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:36.755 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:36.755 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:36.755 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:39.875 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:39.965 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:41.560 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:41.560 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:41.560471, end_date=2025-04-28 22:30:41.560471, timeframe=1D
2025-04-28 22:30:41.653 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:30:41.662 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:30:41.662262, end_date=2025-04-28 22:30:41.662262, timeframe=1D
2025-04-28 22:30:41.734 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:41.742 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:41.743 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:41.743 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:30:41.940 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:30:41.944 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:30:41.944 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:30:41.945 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:31:47.325 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:31:47.326 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:31:47.326020, end_date=2025-04-28 22:31:47.326020, timeframe=1D
2025-04-28 22:31:47.428 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:31:47.431 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:31:47.431239, end_date=2025-04-28 22:31:47.431239, timeframe=1D
2025-04-28 22:31:47.488 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:31:47.509 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:31:47.510 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:31:47.513 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:31:47.649 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:31:47.651 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:31:47.651 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:31:47.652 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:31:56.042 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:31:56.045 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:32:21.895 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:32:21.897 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:32:23.945 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:32:23.945 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:23.945830, end_date=2025-04-28 22:32:23.945830, timeframe=1D
2025-04-28 22:32:24.071 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:24.073 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:24.073635, end_date=2025-04-28 22:32:24.073635, timeframe=1D
2025-04-28 22:32:24.154 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:24.156 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:24.156 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:24.156 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:24.267 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:24.269 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:24.269 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:24.269 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:24.291 | ERROR    | views.visual_dashboard:update_dashboard:1673 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7b0c175a8ca0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 135291032553152)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7b0c175a89d0>
    └ <Thread(Thread-4 (process_request_thread), started daemon 135291032553152)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 135291032553152)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 135291032553152)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7b0be8236f80>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 135291032553152)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42408)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7b0c16e1d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7b0be8236f80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7b0be8236f80>
    │    │                   │        └ ('127.0.0.1', 42408)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7b0be8236f80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7b0c16b863b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7b0be77e4dc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7b0c16de53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7b0be77e4dc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7b0be77e4dc0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7b0be77cb940>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7b0be8236f80>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7b0be77e4dc0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7b0be77083a0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7b0be77169d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7b0be7708310>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7b0be77cb940>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7b0be7708310>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7b0c1662a830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7b0c1662a050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7b0c16629fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7b0be8428670>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7b0c1662a200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7b0be77e8f00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1D', '365D', 'comparison', '2024-04-28', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7b0be81d6e60>
                   └ <function _invoke_callback at 0x7b0c16061ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1D', '365D', 'comparison', '2024-04-28', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7b0be81d6e60>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1642, in update_dashboard
    main_fig = create_comparison_chart(df)
               │                       └      open_price  high_price  low_price  close_price metal_type  timestamp  ...  gain  loss   avg_gain   avg_loss        rs   ...
               └ <function create_comparison_chart at 0x7b0be823d870>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2889, in create_comparison_chart
    fig = px.line(
          │  └ <function line at 0x7b0be924ec20>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 270, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           │                                      └ <module 'plotly.graph_objs' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-pack...
           └ <function make_figure at 0x7b0be94213f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':      open_price  high_price  low_price  close_price metal_type  timestamp  ...  gain  loss   avg_gain   avg_lo...
    └ <function apply_default_cascade at 0x7b0be9420b80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1048, in apply_default_cascade
    args["symbol_sequence"] = [
    └ {'data_frame':      open_price  high_price  low_price  close_price metal_type  timestamp  ...  gain  loss   avg_gain   avg_lo...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1049, in <listcomp>
    scatter.marker.symbol for scatter in args["template"].data.scatter
    │       │                 └ <unprintable Scatter object>
    │       └ <property object at 0x7b0be9374db0>
    └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/scatter/_marker.py", line 1199, in symbol
    return self["symbol"]
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7b0c162ceed0>
         │    │                      │       └ <unprintable Marker object>
         │    │                      └ 'symbol'
         │    └ <property object at 0x7b0c162ceed0>
         └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7b0c162cef70>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7b0c162ceed0>
       └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Scatter object>
           │    └ <property object at 0x7b0c162cef70>
           └ <unprintable Scatter object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Scatter object>
                │          │         └ (Scatter({
                │          │               'fillpattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}
                │          │           }),)
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7b0c162f70a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 22:32:26.293 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:32:26.294 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:26.294706, end_date=2025-04-28 22:32:26.294706, timeframe=1D
2025-04-28 22:32:26.391 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:26.393 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:26.393007, end_date=2025-04-28 22:32:26.393007, timeframe=1D
2025-04-28 22:32:26.551 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:26.561 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:26.565 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:26.565 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:26.689 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:26.706 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:26.706 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:26.706 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:30.276 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:32:30.276 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:30.276790, end_date=2025-04-28 22:32:30.276790, timeframe=1D
2025-04-28 22:32:30.367 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:30.367 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:30.367738, end_date=2025-04-28 22:32:30.367738, timeframe=1D
2025-04-28 22:32:30.528 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:30.538 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:30.538 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:30.538 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:30.640 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:30.665 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:30.682 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:30.682 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:33.060 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:32:33.060 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.060665, end_date=2025-04-28 22:32:33.060665, timeframe=1D
2025-04-28 22:32:33.071 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:32:33.073 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.073822, end_date=2025-04-28 22:32:33.073822, timeframe=1D
2025-04-28 22:32:33.224 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:33.228 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.228261, end_date=2025-04-28 22:32:33.228261, timeframe=1D
2025-04-28 22:32:33.241 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:32:33.241 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.241496, end_date=2025-04-28 22:32:33.241496, timeframe=1D
2025-04-28 22:32:33.333 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:32:33.334 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.334174, end_date=2025-04-28 22:32:33.334174, timeframe=1D
2025-04-28 22:32:33.571 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:33.576 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:33.576918, end_date=2025-04-28 22:32:33.576918, timeframe=1D
2025-04-28 22:32:33.831 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:33.874 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:33.900 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:33.913 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:34.166 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:34.267 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:34.268 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:34.271 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:34.625 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:34.654 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:34.670 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:34.672 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:34.682 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:34.686 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:34.691 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:34.711 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:34.727 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:34.732 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:34.738 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:34.835 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:34.985 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:35.054 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:35.080 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:35.080 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:36.651 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: moving-avg-checklist
2025-04-28 22:32:36.651 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:36.651556, end_date=2025-04-28 22:32:36.651556, timeframe=1D
2025-04-28 22:32:36.739 | INFO     | views.visual_dashboard:update_dashboard:1482 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:32:36.740 | INFO     | views.visual_dashboard:update_dashboard:1571 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:32:36.740675, end_date=2025-04-28 22:32:36.740675, timeframe=1D
2025-04-28 22:32:36.933 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:36.947 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:36.947 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:36.951 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:37.049 | INFO     | views.visual_dashboard:get_price_data:885 - Returning dataframe with 308 rows
2025-04-28 22:32:37.062 | INFO     | views.visual_dashboard:update_dashboard:1612 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:32:37.067 | INFO     | views.visual_dashboard:update_dashboard:1613 - DataFrame shape: (308, 6)
2025-04-28 22:32:37.072 | INFO     | views.visual_dashboard:update_dashboard:1614 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:32:39.063 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:32:39.065 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:33:10.273 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:33:10.274 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:34:45.400 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:34:45.402 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:34:46.009 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:34:46.012 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:34:49.357 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:34:49.358 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:49.358937, end_date=2025-04-28 22:34:49.358937, timeframe=1D
2025-04-28 22:34:49.515 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:49.517 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:49.517 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:49.517 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:53.061 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:34:53.063 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:53.063429, end_date=2025-04-28 22:34:53.063429, timeframe=1D
2025-04-28 22:34:53.150 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:34:53.150 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:53.150935, end_date=2025-04-28 22:34:53.150935, timeframe=1D
2025-04-28 22:34:53.301 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:53.310 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:53.312 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:53.312 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:53.531 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:53.534 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:53.535 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:34:53.536 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:53.540 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:53.540015, end_date=2025-04-28 22:34:53.540015, timeframe=1D
2025-04-28 22:34:53.542 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:53.598 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:34:53.616 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:53.616432, end_date=2025-04-28 22:34:53.616432, timeframe=1D
2025-04-28 22:34:53.805 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:34:53.806 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:53.806355, end_date=2025-04-28 22:34:53.806355, timeframe=1D
2025-04-28 22:34:54.043 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:54.055 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:54.056 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:54.059 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:54.059 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:54.069 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:54.075 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:54.105 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:54.346 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:54.351 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:54.351 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:54.351 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:55.741 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:34:55.741 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:55.741820, end_date=2025-04-28 22:34:55.741820, timeframe=1D
2025-04-28 22:34:55.753 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:34:55.753 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:55.753599, end_date=2025-04-28 22:34:55.753599, timeframe=1D
2025-04-28 22:34:55.834 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:34:55.836 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:55.836063, end_date=2025-04-28 22:34:55.836063, timeframe=1D
2025-04-28 22:34:55.981 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:34:55.983 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:55.983784, end_date=2025-04-28 22:34:55.983784, timeframe=1D
2025-04-28 22:34:56.034 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:34:56.038 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:56.038118, end_date=2025-04-28 22:34:56.038118, timeframe=1D
2025-04-28 22:34:56.345 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:56.456 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:56.473 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:56.475 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:56.562 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:34:56.575 | INFO     | views.visual_dashboard:update_dashboard:1574 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:34:56.575688, end_date=2025-04-28 22:34:56.575688, timeframe=1D
2025-04-28 22:34:56.590 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:56.661 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:56.664 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:56.669 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:56.837 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:56.929 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:56.935 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:56.942 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:57.286 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:57.302 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:57.312 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:57.314 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:57.452 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:57.466 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:57.483 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:57.485 | INFO     | views.visual_dashboard:get_price_data:888 - Returning dataframe with 308 rows
2025-04-28 22:34:57.489 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:34:57.521 | INFO     | views.visual_dashboard:update_dashboard:1615 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:34:57.522 | INFO     | views.visual_dashboard:update_dashboard:1616 - DataFrame shape: (308, 6)
2025-04-28 22:34:57.524 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:35:59.470 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:35:59.632 | INFO     | views.visual_dashboard:update_dashboard:1485 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:36:01.733 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:36:01.735 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:36:04.408 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:36:04.409 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:36:04.409671, end_date=2025-04-28 22:36:04.409671, timeframe=1D
2025-04-28 22:36:04.488 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:36:04.489 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 22:36:04.489809, end_date=2025-04-28 22:36:04.489809, timeframe=1D
2025-04-28 22:36:04.666 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:36:04.706 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:36:04.706 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:36:04.707 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:36:04.732 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:36:04.737 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2346.1, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2348.4, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2345.8, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:36:04.737 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:36:04.738 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:36:31.673 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:36:31.675 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:36:44.479 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:36:44.481 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:02.351 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:02.353 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:10.356 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: time-period-dropdown
2025-04-28 22:37:10.357 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:37:10.454 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:37:10.454 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-04-28 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:37:10.583 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:37:10.603 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:37:10.605 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:37:10.606 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:37:10.677 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:37:10.679 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:37:10.679 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:37:10.679 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:37:24.181 | INFO     | views.visual_dashboard:update_dashboard:1491 - Dashboard update triggered by: dashboard-custom-date-range
2025-04-28 22:37:24.182 | INFO     | views.visual_dashboard:update_dashboard:1580 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:37:24.330 | INFO     | views.visual_dashboard:get_price_data:894 - Returning dataframe with 308 rows
2025-04-28 22:37:24.332 | INFO     | views.visual_dashboard:update_dashboard:1621 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:37:24.332 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame shape: (308, 6)
2025-04-28 22:37:24.332 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:37:42.345 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:42.347 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:55.148 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:37:55.150 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:38:06.586 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:06.586 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:06.599 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:06.599 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:06.840 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:06.841 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:06.846 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:06.847 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:06.847 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:06.848 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:06.848 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:06.849 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:07.053 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:07.054 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:07.057 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:07.061 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:07.434 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:07.451 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:07.455 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:07.456 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:07.462 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:07.505 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:07.506 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:07.506 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:07.574 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:07.574 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:07.707 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:07.731 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:07.731 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:07.731 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:07.854 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:07.854 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:08.025 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:08.027 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:08.027 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:08.027 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:08.767 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:08.767 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:08.869 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:08.872 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:08.872 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:08.872 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:09.241 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:09.242 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:09.410 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:09.413 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:09.413 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:09.413 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:09.706 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:09.706 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:09.715 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:09.717 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:09.959 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:09.964 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:09.967 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:09.968 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:09.974 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:10.001 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:10.025 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:10.028 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:10.277 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:10.277 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:10.295 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:10.301 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:10.539 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:10.549 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:10.549 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:10.549 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:10.596 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:10.615 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:10.639 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:10.665 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:10.833 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:10.833 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:10.984 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:10.986 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:10.986 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:10.986 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:11.233 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:11.233 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:11.333 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:11.336 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:11.337 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:11.337 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:11.692 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:11.692 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:11.796 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:11.799 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:11.799 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:11.799 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:12.290 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:12.290 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:12.308 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:12.315 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:12.545 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:12.547 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:12.549 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:12.549 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:12.550 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:12.554 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:12.559 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:12.559 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:12.966 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:12.966 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:12.977 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:12.982 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:13.196 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:13.225 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:13.229 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:13.229 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:13.257 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:13.275 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:13.345 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:13.350 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:13.612 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:13.612 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:13.620 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:13.620 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2023-04-30 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:13.864 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:13.867 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:13.867 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:13.867 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:13.875 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 308 rows
2025-04-28 22:38:13.889 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 2347.6, 1: 2347.5, 2: 2344.5, 3: 2302.0, 4: 2333.5}, 'high_price': {0: 2349.0, 1: 2358.9, 2: 2347.4, 3: 2339.5, 4: 2336.1}, 'low_price': {0: 2344.0, 1: 2331.0, 2: 2296.2, 3: 2291.7, 4: 2294.3}, 'close_price': {0: 2347.4, 1: 2344.3, 2: 2302.0, 3: 2333.4, 4: 2313.5}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-04-28 00:00:00'), 1: Timestamp('2024-04-29 00:00:00'), 2: Timestamp('2024-04-30 00:00:00'), 3: Timestamp('2024-05-01 00:00:00'), 4: Timestamp('2024-05-02 00:00:00')}}
2025-04-28 22:38:13.911 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (308, 6)
2025-04-28 22:38:13.912 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:22.512 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:22.512 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:22.531 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:22.532 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:22.533 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:22.533 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:22.561 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:22.580 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:22.658 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:22.668 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:22.669 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:22.670 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:22.721 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:22.734 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:22.784 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:22.786 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:22.786 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:22.786 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:23.544 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:23.544 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:23.565 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:23.566 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:23.566 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:23.566 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:23.589 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:23.600 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:23.654 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:23.678 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:23.678 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:23.678 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:27.082 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:38:27.082 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:27.099 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:27.102 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:27.104 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:27.104 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:27.147 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:38:27.147 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:38:27.162 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:38:27.167 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:38:27.168 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:38:27.168 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:38:38.212 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=1
2025-04-28 22:38:42.283 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=2
2025-04-28 22:38:42.646 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=3
2025-04-28 22:38:42.915 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=4
2025-04-28 22:38:43.510 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=5
2025-04-28 22:38:43.879 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=6
2025-04-28 22:39:34.360 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:39:34.362 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:39:37.356 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=7
2025-04-28 22:39:38.073 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=8
2025-04-28 22:39:38.666 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=9
2025-04-28 22:39:39.236 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=10
2025-04-28 22:39:47.286 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:39:47.288 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:39:49.297 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:39:49.297 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:39:49.334 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:39:49.335 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:39:49.338 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:39:49.340 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:39:49.341 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:39:49.341 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:39:49.381 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:39:49.382 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:39:49.383 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:39:49.383 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:39:49.407 | ERROR    | views.visual_dashboard:update_dashboard:1683 - Error in update_dashboard: Invalid value
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7e734fda8ca0>
    └ <Thread(Thread-37 (process_request_thread), started daemon 139032520554176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7e734fda89d0>
    └ <Thread(Thread-37 (process_request_thread), started daemon 139032520554176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 139032520554176)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 139032520554176)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7e73209eaf20>>
    └ <Thread(Thread-37 (process_request_thread), started daemon 139032520554176)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 48000)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7e734f61d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e73209eaf20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e73209eaf20>
    │    │                   │        └ ('127.0.0.1', 48000)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e73209eaf20>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7e734f3563b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e731ffda500>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7e734f5e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e731ffda500>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7e731ffda500>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7e731ffbbaf0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e73209eaf20>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7e731ffda500>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7e731ff14a60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7e731ff3a5e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e731ff15a20>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7e731ffbbaf0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e731ff15a20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7e734edfe830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7e734edfe050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7e734edfdfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7e7320bd4670>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7e734edfe200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7e731ff1f200>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1D', 'custom', 'histogram', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'],...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7e7320986e60>
                   └ <function _invoke_callback at 0x7e734e821ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1D', 'custom', 'histogram', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'],...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7e7320986e60>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1646, in update_dashboard
    main_fig = create_histogram_chart(df)
               │                      └     open_price  high_price  low_price  close_price metal_type  timestamp  ...   gain  loss   avg_gain   avg_loss        rs   ...
               └ <function create_histogram_chart at 0x7e73209f16c0>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2766, in create_histogram_chart
    fig = px.histogram(
          │  └ <function histogram at 0x7e73219fae60>
          └ <module 'plotly.express' from '/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-package...

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_chart_types.py", line 490, in histogram
    return make_figure(
           └ <function make_figure at 0x7e7321bcd3f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 2477, in make_figure
    apply_default_cascade(args)
    │                     └ {'data_frame':     open_price  high_price  low_price  close_price metal_type  timestamp  ...   gain  loss   avg_gain   avg_lo...
    └ <function apply_default_cascade at 0x7e7321bccb80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1071, in apply_default_cascade
    args["pattern_shape_sequence"] = [
    └ {'data_frame':     open_price  high_price  low_price  close_price metal_type  timestamp  ...   gain  loss   avg_gain   avg_lo...
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/express/_core.py", line 1072, in <listcomp>
    bar.marker.pattern.shape for bar in args["template"].data.bar
    │   │                        └ <unprintable Bar object>
    │   └ <property object at 0x7e7321b45260>
    └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/graph_objs/bar/marker/_pattern.py", line 252, in shape
    return self["shape"]
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4734, in __getitem__
    elif self._props is not None and prop in self._props:
         │    │                      │       │    └ <property object at 0x7e734ea96f20>
         │    │                      │       └ <unprintable Pattern object>
         │    │                      └ 'shape'
         │    └ <property object at 0x7e734ea96f20>
         └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Pattern object>
           │    └ <property object at 0x7e734ea96fc0>
           └ <unprintable Pattern object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7e734ea96f20>
       └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Marker object>
           │    └ <property object at 0x7e734ea96fc0>
           └ <unprintable Marker object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4443, in _get_child_props
    if self._props is None:
       │    └ <property object at 0x7e734ea96f20>
       └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4429, in _props
    return self.parent._get_child_props(self)
           │    │                       └ <unprintable Bar object>
           │    └ <property object at 0x7e734ea96fc0>
           └ <unprintable Bar object>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 4463, in _get_child_props
    child_ind = BaseFigure._index_is(children, child)
                │          │         │         └ <unprintable Bar object>
                │          │         └ (Bar({
                │          │               'error_x': {'color': '#2a3f5f'},
                │          │               'error_y': {'color': '#2a3f5f'},
                │          │               'marker': {'line': {'color': '#E5ECF6', ...
                │          └ <staticmethod(<function BaseFigure._index_is at 0x7e734eabf0a0>)>
                └ <class 'plotly.basedatatypes.BaseFigure'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/plotly/basedatatypes.py", line 3957, in _index_is
    raise ValueError("Invalid value")

ValueError: Invalid value
2025-04-28 22:39:56.491 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=1
2025-04-28 22:39:57.060 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=2
2025-04-28 22:39:57.496 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=3
2025-04-28 22:39:58.001 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=4
2025-04-28 22:39:58.599 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=5
2025-04-28 22:40:04.852 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=6
2025-04-28 22:40:05.387 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=7
2025-04-28 22:40:14.884 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=8
2025-04-28 22:41:10.173 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=9
2025-04-28 22:41:10.934 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=10
2025-04-28 22:41:14.164 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:41:14.164 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:41:14.189 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:41:14.190 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:41:14.190 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:41:14.190 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:41:18.093 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:41:18.095 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:41:18.692 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:41:18.695 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:41:29.969 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=1
2025-04-28 22:41:30.951 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=2
2025-04-28 22:41:31.465 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=3
2025-04-28 22:41:31.915 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=4
2025-04-28 22:41:32.214 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=5
2025-04-28 22:41:32.457 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=6
2025-04-28 22:41:32.681 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=7
2025-04-28 22:41:32.932 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=8
2025-04-28 22:41:34.775 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=9
2025-04-28 22:42:10.318 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=10
2025-04-28 22:42:10.564 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=11
2025-04-28 22:42:10.770 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=12
2025-04-28 22:42:11.031 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=13
2025-04-28 22:42:11.526 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=14
2025-04-28 22:42:12.025 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=15
2025-04-28 22:42:12.481 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=16
2025-04-28 22:42:12.929 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=17
2025-04-28 22:42:13.185 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=18
2025-04-28 22:42:56.770 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:42:56.772 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:43:00.873 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:43:00.873 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:43:00.889 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:43:00.889 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:43:00.933 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:43:00.940 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:43:00.942 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:43:00.942 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:43:00.942 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:43:00.942 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:43:00.942 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:43:00.961 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:43:00.998 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:43:00.999 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:43:01.012 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:43:01.014 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:43:01.078 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:43:01.080 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:43:01.080 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:43:01.080 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:43:01.115 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:43:01.117 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:43:01.117 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:43:01.117 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:43:03.522 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=1
2025-04-28 22:43:04.472 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=2
2025-04-28 22:43:04.973 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=3
2025-04-28 22:44:14.902 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:44:14.904 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:44:18.399 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:44:18.400 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:44:18.400 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:44:18.400 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:44:18.401 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:44:18.401 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:44:18.401 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:44:18.401 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:44:18.401 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:44:38.125 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:44:38.127 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:44:38.150 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:44:38.153 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:44:38.155 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:44:38.155 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:44:38.155 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:44:38.155 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:44:38.190 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:44:38.192 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:44:38.192 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:44:38.192 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:45:21.002 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:45:21.005 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:45:27.497 | INFO     | views.visual_dashboard:update_dashboard:1492 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:45:27.498 | INFO     | views.visual_dashboard:update_dashboard:1581 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:45:27.530 | INFO     | views.visual_dashboard:get_price_data:895 - Returning dataframe with 23 rows
2025-04-28 22:45:27.531 | INFO     | views.visual_dashboard:update_dashboard:1622 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:45:27.531 | INFO     | views.visual_dashboard:update_dashboard:1623 - DataFrame shape: (23, 6)
2025-04-28 22:45:27.532 | INFO     | views.visual_dashboard:update_dashboard:1624 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:45:31.106 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=1
2025-04-28 22:45:31.904 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=2
2025-04-28 22:45:32.189 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=3
2025-04-28 22:45:32.977 | INFO     | views.visual_dashboard:trigger_pdf_generation:1961 - PDF generation triggered: n_clicks=4
2025-04-28 22:47:02.332 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:47:02.334 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:47:32.305 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:47:32.307 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:48:03.233 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:48:03.235 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:48:15.082 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:48:15.084 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:48:17.980 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:48:17.981 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:48:18.009 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 23 rows
2025-04-28 22:48:18.010 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:48:18.011 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (23, 6)
2025-04-28 22:48:18.011 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:49:20.178 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:49:20.180 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:49:20.591 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:49:20.593 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:49:20.614 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:49:20.616 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:49:20.634 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 23 rows
2025-04-28 22:49:20.637 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:49:20.637 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (23, 6)
2025-04-28 22:49:20.638 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:49:20.671 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 23 rows
2025-04-28 22:49:20.673 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:49:20.673 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (23, 6)
2025-04-28 22:49:20.673 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:49:31.978 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: chart-type-dropdown
2025-04-28 22:49:31.978 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:49:31.995 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 23 rows
2025-04-28 22:49:31.996 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:49:31.996 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (23, 6)
2025-04-28 22:49:31.996 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:49:32.091 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:49:32.103 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1D
2025-04-28 22:49:32.145 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 23 rows
2025-04-28 22:49:32.147 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'open_price': {0: 3118.8, 1: 3123.4, 2: 3155.5, 3: 3146.8, 4: 3188.2}, 'high_price': {0: 3128.3, 1: 3162.0, 2: 3177.0, 3: 3201.6, 4: 3190.0}, 'low_price': {0: 3091.0, 1: 3086.0, 2: 3104.0, 3: 3122.0, 4: 3052.0}, 'close_price': {0: 3123.5, 1: 3155.7, 2: 3146.7, 3: 3188.3, 4: 3134.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-03-30 00:00:00'), 1: Timestamp('2025-03-31 00:00:00'), 2: Timestamp('2025-04-01 00:00:00'), 3: Timestamp('2025-04-02 00:00:00'), 4: Timestamp('2025-04-03 00:00:00')}}
2025-04-28 22:49:32.147 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (23, 6)
2025-04-28 22:49:32.147 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 22:49:44.098 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 22:49:44.098 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:49:44.117 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 623 rows
2025-04-28 22:49:44.123 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:49:44.123 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (623, 6)
2025-04-28 22:49:44.123 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:49:44.201 | INFO     | views.visual_dashboard:update_dashboard:1487 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:49:44.212 | INFO     | views.visual_dashboard:update_dashboard:1576 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:49:44.271 | INFO     | views.visual_dashboard:get_price_data:890 - Returning dataframe with 623 rows
2025-04-28 22:49:44.277 | INFO     | views.visual_dashboard:update_dashboard:1617 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:49:44.278 | INFO     | views.visual_dashboard:update_dashboard:1618 - DataFrame shape: (623, 6)
2025-04-28 22:49:44.278 | INFO     | views.visual_dashboard:update_dashboard:1619 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:49:58.360 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:49:58.363 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:50:22.393 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:50:22.395 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:50:33.211 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:50:33.213 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:50:35.797 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:50:35.797 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:50:35.818 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 22:50:35.821 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:50:35.838 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 22:50:35.840 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:50:35.840 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 22:50:35.840 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:50:35.857 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 22:50:35.859 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:50:35.861 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 22:50:35.863 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:50:52.892 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: custom-indicators-store
2025-04-28 22:50:52.892 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:50:52.910 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 22:50:52.913 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:50:52.913 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 22:50:52.913 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:52:51.206 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:52:51.206 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:52:51.206 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:52:51.206 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:52:51.207 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:52:51.207 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:52:51.207 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:52:51.207 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 22:52:51.207 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 22:53:05.641 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 22:53:05.643 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 22:53:05.664 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 22:53:05.666 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 22:53:05.667 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 22:53:05.667 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 22:53:32.758 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:53:32.762 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:53:54.669 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:53:54.672 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:54:28.625 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:54:28.628 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:55:01.602 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:55:01.607 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:55:57.562 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:55:57.564 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:56:27.417 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:56:27.418 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:56:55.288 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:56:55.292 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:12.099 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:12.101 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:34.923 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:34.925 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:45.870 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:57:45.872 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:59:39.026 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 22:59:39.030 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:02:22.718 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:02:22.720 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:02.408 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:02.410 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:03.028 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:03.030 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:05.997 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:05.998 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:03:06.027 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:03:06.028 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:03:06.028 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:03:06.028 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:03:06.048 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: name 'create_advanced_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75591a4a4ca0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75591a4a49d0>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 129024500164288)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 129024500164288)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 42816)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x755919d19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │    │                   │        └ ('127.0.0.1', 42816)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755919a363b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558ea6977f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755919ce53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558ea6977f0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7558ea6977f0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7558ea6977f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7558ea69c700>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7558ea61b530>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558ea69caf0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558ea69caf0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7559194da830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7559194da050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7559194d9fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7558eb2c8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7559194da200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7558ea6a3d00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>
                   └ <function _invoke_callback at 0x755918f11ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1618, in update_dashboard
    result = create_advanced_chart(

NameError: name 'create_advanced_chart' is not defined
2025-04-28 23:03:11.451 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:11.562 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:11.576 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:18.892 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:18.892 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:03:18.910 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:03:18.912 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:03:18.913 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:03:18.913 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:03:18.939 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: name 'create_advanced_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75591a4a4ca0>
    └ <Thread(Thread-46 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75591a4a49d0>
    └ <Thread(Thread-46 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 129024500164288)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 129024500164288)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>>
    └ <Thread(Thread-46 (process_request_thread), started daemon 129024500164288)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38864)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x755919d19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │    │                   │        └ ('127.0.0.1', 38864)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755919a363b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6a680>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755919ce53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6a680>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6a680>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6a680>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7558e9c16a70>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7558e9c27d10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558e9c16b00>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558e9c16b00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7559194da830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7559194da050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7559194d9fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7558eb2c8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7559194da200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7558ea6bca80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>
                   └ <function _invoke_callback at 0x755918f11ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1618, in update_dashboard
    result = create_advanced_chart(

NameError: name 'create_advanced_chart' is not defined
2025-04-28 23:03:19.010 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:19.010 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:03:19.025 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:03:19.027 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:03:19.027 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:03:19.029 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:03:19.029 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:03:19.029 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:03:19.105 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:03:19.122 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: name 'create_advanced_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75591a4a4ca0>
    └ <Thread(Thread-56 (process_request_thread), started daemon 129024723244736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75591a4a49d0>
    └ <Thread(Thread-56 (process_request_thread), started daemon 129024723244736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-56 (process_request_thread), started daemon 129024723244736)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-56 (process_request_thread), started daemon 129024723244736)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>>
    └ <Thread(Thread-56 (process_request_thread), started daemon 129024723244736)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38928)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x755919d19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │    │                   │        └ ('127.0.0.1', 38928)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755919a363b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d68a90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755919ce53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d68a90>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d68a90>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d68a90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7558ea69c820>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7558ea61b530>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558ea69d870>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558ea69d870>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7559194da830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7559194da050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7559194d9fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7558eb2c8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7559194da200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7558ea71db40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>
                   └ <function _invoke_callback at 0x755918f11ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1618, in update_dashboard
    result = create_advanced_chart(

NameError: name 'create_advanced_chart' is not defined
2025-04-28 23:03:19.125 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:03:19.126 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:03:19.127 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:03:19.148 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: name 'create_advanced_chart' is not defined
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75591a4a4ca0>
    └ <Thread(Thread-57 (process_request_thread), started daemon 129024737932992)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75591a4a49d0>
    └ <Thread(Thread-57 (process_request_thread), started daemon 129024737932992)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-57 (process_request_thread), started daemon 129024737932992)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-57 (process_request_thread), started daemon 129024737932992)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>>
    └ <Thread(Thread-57 (process_request_thread), started daemon 129024737932992)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38934)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x755919d19900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │    │                   │        └ ('127.0.0.1', 38934)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755919a363b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6bd60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755919ce53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6bd60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6bd60>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7558ea6355d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7558e8d6bd60>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7558e9c16560>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7558e9c27e60>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558e9c16a70>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7558ea60dd80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7558e9c16a70>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7559194da830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7559194da050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7559194d9fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7558eb2c8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7559194da200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7558ea6bca80>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>
                   └ <function _invoke_callback at 0x755918f11ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7558ea601360>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1618, in update_dashboard
    result = create_advanced_chart(

NameError: name 'create_advanced_chart' is not defined
2025-04-28 23:03:25.961 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:25.963 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:31.799 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:03:31.801 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:04:06.648 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:04:06.649 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:04:06.684 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:04:06.686 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:04:06.686 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:04:06.687 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:04:06.731 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:04:06.732 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:04:06.756 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:04:06.757 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:04:06.757 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:04:06.758 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:04:16.582 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:16.582 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:16.582 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:16.582 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:16.582 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:16.584 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:16.584 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:16.584 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:16.584 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:19.585 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:04:19.585 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:04:19.605 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:04:19.606 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:04:19.607 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:04:19.607 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:37.053 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:04:37.054 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:04:37.054 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:11.019 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:11.019 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:05:11.019 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:11.019 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:05:11.019 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:11.020 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:05:11.020 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:11.020 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:05:11.020 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:05:22.135 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:05:22.137 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:05:27.251 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:05:27.252 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:05:27.281 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:05:27.283 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:05:27.283 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:05:27.283 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:05:27.521 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x777f849a4ca0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 131388653156032)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x777f849a49d0>
    └ <Thread(Thread-19 (process_request_thread), started daemon 131388653156032)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 131388653156032)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 131388653156032)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x777f54d5f280>>
    └ <Thread(Thread-19 (process_request_thread), started daemon 131388653156032)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 47092)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x777f84219900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x777f54d5f280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x777f54d5f280>
    │    │                   │        └ ('127.0.0.1', 47092)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x777f54d5f280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x777f83fe23b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x777f54d5d030>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x777f841e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x777f54d5d030>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x777f54d5d030>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x777f54c54130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x777f54d5f280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x777f54d5d030>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x777f54bc57e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x777f54d734c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x777f54bc4c10>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x777f54c54130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x777f54bc4c10>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x777f83a92830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x777f83a92050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x777f83a91fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x777f558684c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x777f83a92200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x777f54d2b480>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x777f54d22b90>
                   └ <function _invoke_callback at 0x777f834c9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x777f54d22b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x777f54d21630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:05:39.015 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:05:39.017 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:05:53.394 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:05:53.394 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:05:53.427 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:05:53.428 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:05:53.428 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:05:53.429 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:05:53.657 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x741be1aa4ca0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 127662286694080)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x741be1aa49d0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 127662286694080)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 127662286694080)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 127662286694080)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x741bb1dbb280>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 127662286694080)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 37326)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x741be1319900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x741bb1dbb280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x741bb1dbb280>
    │    │                   │        └ ('127.0.0.1', 37326)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x741bb1dbb280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x741be10d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x741bb1db8d30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x741be12e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x741bb1db8d30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x741bb1db8d30>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x741bb1cac130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x741bb1dbb280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x741bb1db8d30>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x741bb1c08d30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x741bb1c32f10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x741bb1c09d80>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x741bb1cac130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x741bb1c09d80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x741be0b86830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x741be0b86050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x741be0b85fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x741bb29604c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x741be0b86200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x741bb1da0900>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x741bb1d86b90>
                   └ <function _invoke_callback at 0x741be05bdab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x741bb1d86b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x741bb1d85630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:06:03.939 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:03.941 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:08.033 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:06:08.034 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:06:08.061 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:06:08.062 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:06:08.062 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:06:08.062 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:06:08.112 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:06:08.112 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:06:08.127 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:06:08.132 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:06:08.132 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:06:08.136 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:06:08.136 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:06:08.136 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:06:08.217 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:06:08.218 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:06:08.218 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:06:08.219 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:06:08.670 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7256c0ba8ca0>
    └ <Thread(Thread-40 (process_request_thread), started daemon 125715991205568)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7256c0ba89d0>
    └ <Thread(Thread-40 (process_request_thread), started daemon 125715991205568)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-40 (process_request_thread), started daemon 125715991205568)>
    │    │        │    └ (<socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-40 (process_request_thread), started daemon 125715991205568)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>>
    └ <Thread(Thread-40 (process_request_thread), started daemon 125715991205568)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 46082)
    │    │              └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7256c041d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │    │                   │        └ ('127.0.0.1', 46082)
    │    │                   └ <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7256c01e63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x725690318790>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7256c03e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x725690318790>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x725690318790>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x725690318790>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7256902ce8c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7256904b8200>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7256902ce9e0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7256902ce9e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=11>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7256bfca2830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7256bfca2050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7256bfca1fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x725691a684c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7256bfca2200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x725690ea1980>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>
                   └ <function _invoke_callback at 0x7256bf6d9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x725690f25630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:06:08.666 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7256c0ba8ca0>
    └ <Thread(Thread-41 (process_request_thread), started daemon 125716033169088)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7256c0ba89d0>
    └ <Thread(Thread-41 (process_request_thread), started daemon 125716033169088)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-41 (process_request_thread), started daemon 125716033169088)>
    │    │        │    └ (<socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-41 (process_request_thread), started daemon 125716033169088)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>>
    └ <Thread(Thread-41 (process_request_thread), started daemon 125716033169088)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 46096)
    │    │              └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x7256c041d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │    │                   │        └ ('127.0.0.1', 46096)
    │    │                   └ <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7256c01e63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72569034bac0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7256c03e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72569034bac0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72569034bac0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72569034bac0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72569032e290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7256904b8430>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72569032dfc0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72569032dfc0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=12>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7256bfca2830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7256bfca2050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7256bfca1fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x725691a684c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7256bfca2200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x725690e83800>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>
                   └ <function _invoke_callback at 0x7256bf6d9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x725690f25630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:06:08.667 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7256c0ba8ca0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 125715999598272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7256c0ba89d0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 125715999598272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 125715999598272)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 125715999598272)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 125715999598272)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 45984)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7256c041d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │    │                   │        └ ('127.0.0.1', 45984)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7256c01e63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x725690f1fb50>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7256c03e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x725690f1fb50>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x725690f1fb50>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x725690f63280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x725690f1fb50>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x725690dd1f30>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x725690f73bc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x725690dd1ea0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x725690e58130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x725690dd1ea0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7256bfca2830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7256bfca2050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7256bfca1fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x725691a684c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7256bfca2200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x725690ea0b00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>
                   └ <function _invoke_callback at 0x7256bf6d9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x725690f26b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x725690f25630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:06:22.852 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:22.854 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:35.672 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:35.674 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:49.475 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:49.477 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:06:52.273 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:06:52.277 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:06:52.293 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 23:06:52.293 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:06:52.316 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:06:52.324 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:06:52.326 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:06:52.327 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:06:52.329 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:06:52.331 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:06:52.331 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:06:52.332 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:06:52.705 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x756d670a4ca0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 129111531968192)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x756d670a49d0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 129111531968192)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 129111531968192)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 129111531968192)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 129111531968192)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53718)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x756d66919900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
    │    │                   │        └ ('127.0.0.1', 53718)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x756d666d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x756d37372530>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x756d668e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x756d37372530>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x756d37372530>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x756d372a0130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x756d37372530>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x756d3720db40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x756d37227a00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x756d3720dbd0>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x756d372a0130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x756d3720dbd0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x756d66176830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x756d66176050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x756d66175fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x756d37f3c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x756d66176200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x756d37324980>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x756d3737ab90>
                   └ <function _invoke_callback at 0x756d65badab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x756d3737ab90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x756d37379630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:06:52.702 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x756d670a4ca0>
    └ <Thread(Thread-30 (process_request_thread), started daemon 129111540360896)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x756d670a49d0>
    └ <Thread(Thread-30 (process_request_thread), started daemon 129111540360896)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 129111540360896)>
    │    │        │    └ (<socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 129111540360896)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>>
    └ <Thread(Thread-30 (process_request_thread), started daemon 129111540360896)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53746)
    │    │              └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x756d66919900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
    │    │                   │        └ ('127.0.0.1', 53746)
    │    │                   └ <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x756d666d63b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x756d373ac5b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x756d668e13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x756d373ac5b0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x756d373ac5b0>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x756d372a0130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x756d373af280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x756d373ac5b0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x756d35149990>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x756d37227300>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x756d35149900>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x756d372a0130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x756d35149900>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x756d66176830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x756d66176050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x756d66175fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (OPTIONS, POST) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x756d37f3c4c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x756d66176200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x756d372fbcc0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x756d3737ab90>
                   └ <function _invoke_callback at 0x756d65badab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x756d3737ab90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x756d37379630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:07:25.481 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:25.483 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:32.322 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:32.324 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:38.131 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:38.133 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:40.624 | INFO     | views.visual_dashboard:update_dashboard:1454 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:07:40.625 | INFO     | views.visual_dashboard:update_dashboard:1543 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:07:40.654 | INFO     | views.visual_dashboard:get_price_data:857 - Returning dataframe with 623 rows
2025-04-28 23:07:40.655 | INFO     | views.visual_dashboard:update_dashboard:1584 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:07:40.655 | INFO     | views.visual_dashboard:update_dashboard:1585 - DataFrame shape: (623, 6)
2025-04-28 23:07:40.655 | INFO     | views.visual_dashboard:update_dashboard:1586 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:07:40.879 | ERROR    | views.visual_dashboard:update_dashboard:1645 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f7a46ba8ca0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 140161945949888)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f7a46ba89d0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 140161945949888)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 140161945949888)>
    │    │        │    └ (<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 140161945949888)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f7a1782b280>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 140161945949888)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 38712)
    │    │              └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <function BaseServer.finish_request at 0x7f7a4641d900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7a1782b280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7a1782b280>
    │    │                   │        └ ('127.0.0.1', 38712)
    │    │                   └ <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('1...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7a1782b280>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f7a461563b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7a177ea020>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f7a463e53f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7a177ea020>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f7a177ea020>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x7f7a16db8130>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7a1782b280>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7a177ea020>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f7a16d15b40>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x7f7a16d3b290>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f7a16d14a60>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x7f7a16db8130>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f7a16d14a60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=9>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f7a45bfe830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f7a45bfe050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f7a45bfdfc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f7a179d8940>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7f7a45bfe200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f7a16d2aec0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x7f7a177f2b90>
                   └ <function _invoke_callback at 0x7f7a45621ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x7f7a177f2b90>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1633, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x7f7a177f1630>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2815, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:07:43.131 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:07:43.134 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:25.314 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:25.316 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:25.932 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:25.934 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:28.637 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:09:28.638 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:09:28.666 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:09:28.668 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:09:28.668 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:09:28.668 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:09:28.898 | ERROR    | views.visual_dashboard:update_dashboard:1642 - Error in update_dashboard: 'NoneType' object has no attribute 'append'
Traceback (most recent call last):

  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 973, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7812673a4ca0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 132019623290560)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7812673a49d0>
    └ <Thread(Thread-28 (process_request_thread), started daemon 132019623290560)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 132019623290560)>
    │    │        │    └ (<socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=(...
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 132019623290560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x781237465690>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 132019623290560)>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 683, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60034)
    │    │              └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <function BaseServer.finish_request at 0x781266c15900>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x781237465690>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x781237465690>
    │    │                   │        └ ('127.0.0.1', 60034)
    │    │                   └ <socket.socket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5001), raddr=('...
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x781237465690>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/socketserver.py", line 747, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7812669323b0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7812374c1f00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 398, in handle
    super().handle()
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 433, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x781266be13f0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7812374c1f00>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/http/server.py", line 421, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7812374c1f00>>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 370, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <werkzeug.debug.DebuggedApplication object at 0x78123742f8e0>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x781237465690>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7812374c1f00>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7812374c9ab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/serving.py", line 333, in execute
    for data in application_iter:
                └ <generator object DebuggedApplication.debug_application at 0x781237446f10>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/werkzeug/debug/__init__.py", line 343, in debug_application
    app_iter = self.app(environ, start_response)
               │    │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7812374c9360>
               │    │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
               │    └ <Flask 'app'>
               └ <werkzeug.debug.DebuggedApplication object at 0x78123742f8e0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7812374c9360>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=10>, 'wsgi.errors': <_io.TextIOWra...
           │    └ <function Flask.wsgi_app at 0x7812663d6830>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7812663d6050>
               └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7812663d5fc0>
         └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/dashboard/_dash-update-component'
           │    │           │    │              └ <Rule '/dashboard/_dash-update-component' (POST, OPTIONS) -> /dashboard/_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7812381c04c0>, '_dashboard_dash_assets.static': <bound method Blue...
           │    │           └ <Flask 'app'>
           │    └ <function Flask.ensure_sync at 0x7812663d6200>
           └ <Flask 'app'>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/dash.py", line 1414, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7812374ec9c0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 525, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)  # type: ignore[reportArgumentType]
                   │                │      │            └ {}
                   │                │      └ [['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
                   │                └ <function register_callbacks.<locals>.update_dashboard at 0x781237593be0>
                   └ <function _invoke_callback at 0x781265e0dab0>
  File "/home/vanusha/.pyenv/versions/anaconda3-2024.10-1/envs/program_ing/lib/python3.10/site-packages/dash/_callback.py", line 47, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (['GOLD'], 'YFINANCE', '1H', 'custom', 'advanced', '2025-03-29', '2025-04-28', ['close', 'high', 'open', 'low'], [], ['bb'], ...
           └ <function register_callbacks.<locals>.update_dashboard at 0x781237593be0>

> File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 1630, in update_dashboard
    table_component = create_data_table(df)
                      │                 └               timestamp  open_price  high_price  low_price  close_price metal_type  ...  gain loss  avg_gain  avg_loss       ...
                      └ <function create_data_table at 0x781237591480>

  File "/home/vanusha/unik/program_ing/views/visual_dashboard.py", line 2745, in create_data_table
    export_section.children[1].children.append(export_button)
    │              │                           └ Button(children='Export gold Data as Excel', id={'type': 'export-metal-button', 'metal': 'gold'}, className='me-2 mb-2', colo...
    │              └ [H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3')]
    └ Div([H5(children='Exports', className='mt-4 mb-3'), Div(id='export-buttons-container', className='d-flex flex-wrap gap-2 mb-3...

AttributeError: 'NoneType' object has no attribute 'append'
2025-04-28 23:09:59.921 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:09:59.924 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:15.803 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:15.805 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:19.570 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:10:19.570 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:10:19.601 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:10:19.604 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:10:19.604 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:10:19.604 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:10:44.894 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:44.896 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:46.727 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:10:46.729 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:11:34.697 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:11:34.699 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:11:50.509 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:11:50.511 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:11:52.037 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:11:52.038 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:11:52.069 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:11:52.071 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:11:52.071 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:11:52.071 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:11:54.154 | INFO     | views.visual_dashboard:export_metal_data_excel:1879 - Excel export triggered for gold: n_clicks=1
2025-04-28 23:11:54.166 | INFO     | views.visual_dashboard:export_metal_data_excel:1922 - Exporting gold data to Excel: 27 records
2025-04-28 23:11:54.169 | ERROR    | views.visual_dashboard:export_metal_data_excel:1934 - Error exporting gold data to Excel: No module named 'openpyxl'
2025-04-28 23:11:55.224 | INFO     | views.visual_dashboard:export_metal_data_excel:1879 - Excel export triggered for gold: n_clicks=2
2025-04-28 23:11:55.235 | INFO     | views.visual_dashboard:export_metal_data_excel:1922 - Exporting gold data to Excel: 27 records
2025-04-28 23:11:55.236 | ERROR    | views.visual_dashboard:export_metal_data_excel:1934 - Error exporting gold data to Excel: No module named 'openpyxl'
2025-04-28 23:11:55.857 | INFO     | views.visual_dashboard:export_metal_data_excel:1879 - Excel export triggered for gold: n_clicks=3
2025-04-28 23:11:55.875 | INFO     | views.visual_dashboard:export_metal_data_excel:1922 - Exporting gold data to Excel: 27 records
2025-04-28 23:11:55.876 | ERROR    | views.visual_dashboard:export_metal_data_excel:1934 - Error exporting gold data to Excel: No module named 'openpyxl'
2025-04-28 23:12:08.892 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:12:08.894 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:12:09.497 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:12:09.499 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:12:12.049 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:12:12.049 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:12:12.084 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:12:12.085 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:12:12.086 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:12:12.086 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:12:12.091 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:12:12.092 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:12:12.128 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:12:12.130 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:12:12.130 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:12:12.130 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:12:14.192 | INFO     | views.visual_dashboard:export_metal_data_excel:1879 - Excel export triggered for gold: n_clicks=1
2025-04-28 23:12:14.205 | INFO     | views.visual_dashboard:export_metal_data_excel:1922 - Exporting gold data to Excel: 27 records
2025-04-28 23:12:49.730 | INFO     | views.visual_dashboard:export_metal_data_excel:1879 - Excel export triggered for gold: n_clicks=2
2025-04-28 23:12:49.741 | INFO     | views.visual_dashboard:export_metal_data_excel:1922 - Exporting gold data to Excel: 27 records
2025-04-28 23:13:47.765 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:13:47.767 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:12.667 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:12.669 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:16.465 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:16.467 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:22.297 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:22.299 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:37.229 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:37.231 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:14:45.111 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:14:45.112 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:14:45.138 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:14:45.139 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:14:45.139 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:14:45.139 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:15:36.375 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:15:36.377 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:15:53.254 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:15:53.257 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:16:11.095 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:16:11.097 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:16:32.070 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:16:32.072 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:19:55.638 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:19:55.640 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:19:56.254 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:19:56.256 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:19:58.556 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:19:58.558 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:19:58.586 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:19:58.589 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:19:58.589 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:19:58.589 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:19:58.637 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:19:58.637 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-03-29 00:00:00, end_date=2025-04-28 00:00:00, timeframe=1H
2025-04-28 23:19:58.652 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 623 rows
2025-04-28 23:19:58.659 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-03-30 22:00:00'), 1: Timestamp('2025-03-30 23:00:00'), 2: Timestamp('2025-03-31 00:00:00'), 3: Timestamp('2025-03-31 01:00:00'), 4: Timestamp('2025-03-31 02:00:00')}, 'open_price': {0: 3118.8, 1: 3123.2, 2: 3123.4, 3: 3114.8, 4: 3127.5}, 'high_price': {0: 3128.3, 1: 3124.9, 2: 3123.9, 3: 3129.1, 4: 3140.2}, 'low_price': {0: 3091.0, 1: 3094.7, 2: 3086.0, 3: 3087.0, 4: 3100.3}, 'close_price': {0: 3123.0, 1: 3123.5, 2: 3114.7, 3: 3127.6, 4: 3138.8}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:19:58.659 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (623, 6)
2025-04-28 23:19:58.660 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:02.679 | INFO     | views.visual_dashboard:export_metal_data_excel:1884 - Excel export triggered for gold: n_clicks=1
2025-04-28 23:20:02.679 | INFO     | views.visual_dashboard:export_metal_data_excel:1895 - Using filtered data for export: 27 records
2025-04-28 23:20:08.065 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: time-period-dropdown
2025-04-28 23:20:08.069 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:08.069468, end_date=2025-04-28 23:20:08.069468, timeframe=1H
2025-04-28 23:20:08.117 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 2085 rows
2025-04-28 23:20:08.118 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 01:00:00'), 2: Timestamp('2025-01-29 02:00:00'), 3: Timestamp('2025-01-29 03:00:00'), 4: Timestamp('2025-01-29 04:00:00')}, 'open_price': {0: 2769.8, 1: 2770.9, 2: 2772.0, 3: 2771.8, 4: 2770.0}, 'high_price': {0: 2771.9, 1: 2773.8, 2: 2773.8, 3: 2772.0, 4: 2772.4}, 'low_price': {0: 2769.5, 1: 2770.9, 2: 2771.6, 3: 2769.6, 4: 2769.0}, 'close_price': {0: 2771.0, 1: 2772.1, 2: 2771.9, 3: 2770.0, 4: 2770.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:08.119 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (2085, 6)
2025-04-28 23:20:08.119 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:08.169 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:20:08.182 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:08.182210, end_date=2025-04-28 23:20:08.182210, timeframe=1H
2025-04-28 23:20:08.322 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 2085 rows
2025-04-28 23:20:08.325 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 01:00:00'), 2: Timestamp('2025-01-29 02:00:00'), 3: Timestamp('2025-01-29 03:00:00'), 4: Timestamp('2025-01-29 04:00:00')}, 'open_price': {0: 2769.8, 1: 2770.9, 2: 2772.0, 3: 2771.8, 4: 2770.0}, 'high_price': {0: 2771.9, 1: 2773.8, 2: 2773.8, 3: 2772.0, 4: 2772.4}, 'low_price': {0: 2769.5, 1: 2770.9, 2: 2771.6, 3: 2769.6, 4: 2769.0}, 'close_price': {0: 2771.0, 1: 2772.1, 2: 2771.9, 3: 2770.0, 4: 2770.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:08.326 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (2085, 6)
2025-04-28 23:20:08.326 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:14.325 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 23:20:14.325 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:14.325933, end_date=2025-04-28 23:20:14.325933, timeframe=4H
2025-04-28 23:20:14.367 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 522 rows
2025-04-28 23:20:14.369 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 04:00:00'), 2: Timestamp('2025-01-29 08:00:00'), 3: Timestamp('2025-01-29 12:00:00'), 4: Timestamp('2025-01-29 16:00:00')}, 'open_price': {0: 2769.8, 1: 2770.0, 2: 2765.7, 3: 2768.9, 4: 2772.7}, 'high_price': {0: 2773.8, 1: 2772.4, 2: 2775.5, 3: 2778.1, 4: 2775.4}, 'low_price': {0: 2769.5, 1: 2763.7, 2: 2765.3, 3: 2764.7, 4: 2761.0}, 'close_price': {0: 2770.0, 1: 2765.5, 2: 2769.0, 3: 2772.6, 4: 2773.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:14.370 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (522, 6)
2025-04-28 23:20:14.370 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:14.418 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:20:14.424 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:14.424164, end_date=2025-04-28 23:20:14.424164, timeframe=4H
2025-04-28 23:20:14.508 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 522 rows
2025-04-28 23:20:14.530 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 04:00:00'), 2: Timestamp('2025-01-29 08:00:00'), 3: Timestamp('2025-01-29 12:00:00'), 4: Timestamp('2025-01-29 16:00:00')}, 'open_price': {0: 2769.8, 1: 2770.0, 2: 2765.7, 3: 2768.9, 4: 2772.7}, 'high_price': {0: 2773.8, 1: 2772.4, 2: 2775.5, 3: 2778.1, 4: 2775.4}, 'low_price': {0: 2769.5, 1: 2763.7, 2: 2765.3, 3: 2764.7, 4: 2761.0}, 'close_price': {0: 2770.0, 1: 2765.5, 2: 2769.0, 3: 2772.6, 4: 2773.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:14.532 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (522, 6)
2025-04-28 23:20:14.532 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:18.115 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 23:20:18.115 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:18.115837, end_date=2025-04-28 23:20:18.115837, timeframe=1H
2025-04-28 23:20:18.167 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 2085 rows
2025-04-28 23:20:18.175 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 01:00:00'), 2: Timestamp('2025-01-29 02:00:00'), 3: Timestamp('2025-01-29 03:00:00'), 4: Timestamp('2025-01-29 04:00:00')}, 'open_price': {0: 2769.8, 1: 2770.9, 2: 2772.0, 3: 2771.8, 4: 2770.0}, 'high_price': {0: 2771.9, 1: 2773.8, 2: 2773.8, 3: 2772.0, 4: 2772.4}, 'low_price': {0: 2769.5, 1: 2770.9, 2: 2771.6, 3: 2769.6, 4: 2769.0}, 'close_price': {0: 2771.0, 1: 2772.1, 2: 2771.9, 3: 2770.0, 4: 2770.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:18.177 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (2085, 6)
2025-04-28 23:20:18.177 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:18.187 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:20:18.187 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:20:18.187953, end_date=2025-04-28 23:20:18.187953, timeframe=1H
2025-04-28 23:20:18.270 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 2085 rows
2025-04-28 23:20:18.273 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 01:00:00'), 2: Timestamp('2025-01-29 02:00:00'), 3: Timestamp('2025-01-29 03:00:00'), 4: Timestamp('2025-01-29 04:00:00')}, 'open_price': {0: 2769.8, 1: 2770.9, 2: 2772.0, 3: 2771.8, 4: 2770.0}, 'high_price': {0: 2771.9, 1: 2773.8, 2: 2773.8, 3: 2772.0, 4: 2772.4}, 'low_price': {0: 2769.5, 1: 2770.9, 2: 2771.6, 3: 2769.6, 4: 2769.0}, 'close_price': {0: 2771.0, 1: 2772.1, 2: 2771.9, 3: 2770.0, 4: 2770.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:20:18.273 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (2085, 6)
2025-04-28 23:20:18.273 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:20:20.648 | INFO     | views.visual_dashboard:export_metal_data_excel:1884 - Excel export triggered for gold: n_clicks=1
2025-04-28 23:20:20.648 | INFO     | views.visual_dashboard:export_metal_data_excel:1895 - Using filtered data for export: 87 records
2025-04-28 23:20:35.665 | INFO     | views.visual_dashboard:export_metal_data_excel:1884 - Excel export triggered for gold: n_clicks=2
2025-04-28 23:20:35.666 | INFO     | views.visual_dashboard:export_metal_data_excel:1895 - Using filtered data for export: 10 records
2025-04-28 23:21:58.909 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:21:58.913 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:22:20.792 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:22:20.795 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:22:31.636 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:22:31.637 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:23:23.599 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:23:23.601 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:23:28.439 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:23:28.440 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:23:30.315 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:23:30.316 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:23:30.316139, end_date=2025-04-28 23:23:30.316139, timeframe=1H
2025-04-28 23:23:30.363 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 2085 rows
2025-04-28 23:23:30.364 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 01:00:00'), 2: Timestamp('2025-01-29 02:00:00'), 3: Timestamp('2025-01-29 03:00:00'), 4: Timestamp('2025-01-29 04:00:00')}, 'open_price': {0: 2769.8, 1: 2770.9, 2: 2772.0, 3: 2771.8, 4: 2770.0}, 'high_price': {0: 2771.9, 1: 2773.8, 2: 2773.8, 3: 2772.0, 4: 2772.4}, 'low_price': {0: 2769.5, 1: 2770.9, 2: 2771.6, 3: 2769.6, 4: 2769.0}, 'close_price': {0: 2771.0, 1: 2772.1, 2: 2771.9, 3: 2770.0, 4: 2770.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:23:30.364 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (2085, 6)
2025-04-28 23:23:30.364 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:23:38.860 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 23:23:38.860 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:23:38.860759, end_date=2025-04-28 23:23:38.860759, timeframe=4H
2025-04-28 23:23:38.913 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 522 rows
2025-04-28 23:23:38.922 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 04:00:00'), 2: Timestamp('2025-01-29 08:00:00'), 3: Timestamp('2025-01-29 12:00:00'), 4: Timestamp('2025-01-29 16:00:00')}, 'open_price': {0: 2769.8, 1: 2770.0, 2: 2765.7, 3: 2768.9, 4: 2772.7}, 'high_price': {0: 2773.8, 1: 2772.4, 2: 2775.5, 3: 2778.1, 4: 2775.4}, 'low_price': {0: 2769.5, 1: 2763.7, 2: 2765.3, 3: 2764.7, 4: 2761.0}, 'close_price': {0: 2770.0, 1: 2765.5, 2: 2769.0, 3: 2772.6, 4: 2773.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:23:38.923 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (522, 6)
2025-04-28 23:23:38.923 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:23:38.987 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:23:38.988 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:23:38.988649, end_date=2025-04-28 23:23:38.988649, timeframe=4H
2025-04-28 23:23:39.070 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 522 rows
2025-04-28 23:23:39.107 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-29 04:00:00'), 2: Timestamp('2025-01-29 08:00:00'), 3: Timestamp('2025-01-29 12:00:00'), 4: Timestamp('2025-01-29 16:00:00')}, 'open_price': {0: 2769.8, 1: 2770.0, 2: 2765.7, 3: 2768.9, 4: 2772.7}, 'high_price': {0: 2773.8, 1: 2772.4, 2: 2775.5, 3: 2778.1, 4: 2775.4}, 'low_price': {0: 2769.5, 1: 2763.7, 2: 2765.3, 3: 2764.7, 4: 2761.0}, 'close_price': {0: 2770.0, 1: 2765.5, 2: 2769.0, 3: 2772.6, 4: 2773.3}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}}
2025-04-28 23:23:39.107 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (522, 6)
2025-04-28 23:23:39.107 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['timestamp', 'open_price', 'high_price', 'low_price', 'close_price', 'metal_type']
2025-04-28 23:23:44.676 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: timeframe-dropdown
2025-04-28 23:23:44.677 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:23:44.677097, end_date=2025-04-28 23:23:44.677097, timeframe=1D
2025-04-28 23:23:44.736 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 74 rows
2025-04-28 23:23:44.741 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2769.8, 1: 2773.7, 2: 2856.5, 3: 2846.5, 4: 2834.3}, 'high_price': {0: 2778.1, 1: 2857.7, 2: 2862.9, 3: 2861.5, 4: 2872.0}, 'low_price': {0: 2761.0, 1: 2770.0, 2: 2804.0, 3: 2802.0, 4: 2780.9}, 'close_price': {0: 2773.6, 1: 2856.6, 2: 2831.5, 3: 2834.1, 4: 2849.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-30 00:00:00'), 2: Timestamp('2025-01-31 00:00:00'), 3: Timestamp('2025-02-02 00:00:00'), 4: Timestamp('2025-02-03 00:00:00')}}
2025-04-28 23:23:44.741 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (74, 6)
2025-04-28 23:23:44.741 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:23:44.760 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:23:44.779 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:23:44.779718, end_date=2025-04-28 23:23:44.779718, timeframe=1D
2025-04-28 23:23:44.871 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 74 rows
2025-04-28 23:23:44.873 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2769.8, 1: 2773.7, 2: 2856.5, 3: 2846.5, 4: 2834.3}, 'high_price': {0: 2778.1, 1: 2857.7, 2: 2862.9, 3: 2861.5, 4: 2872.0}, 'low_price': {0: 2761.0, 1: 2770.0, 2: 2804.0, 3: 2802.0, 4: 2780.9}, 'close_price': {0: 2773.6, 1: 2856.6, 2: 2831.5, 3: 2834.1, 4: 2849.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-30 00:00:00'), 2: Timestamp('2025-01-31 00:00:00'), 3: Timestamp('2025-02-02 00:00:00'), 4: Timestamp('2025-02-03 00:00:00')}}
2025-04-28 23:23:44.873 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (74, 6)
2025-04-28 23:23:44.873 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:24:08.542 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:24:08.544 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:24:10.160 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:24:10.160 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:24:10.160261, end_date=2025-04-28 23:24:10.160261, timeframe=1D
2025-04-28 23:24:10.175 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:24:10.175 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2025-01-28 23:24:10.175910, end_date=2025-04-28 23:24:10.175910, timeframe=1D
2025-04-28 23:24:10.276 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 74 rows
2025-04-28 23:24:10.278 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 74 rows
2025-04-28 23:24:10.280 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2769.8, 1: 2773.7, 2: 2856.5, 3: 2846.5, 4: 2834.3}, 'high_price': {0: 2778.1, 1: 2857.7, 2: 2862.9, 3: 2861.5, 4: 2872.0}, 'low_price': {0: 2761.0, 1: 2770.0, 2: 2804.0, 3: 2802.0, 4: 2780.9}, 'close_price': {0: 2773.6, 1: 2856.6, 2: 2831.5, 3: 2834.1, 4: 2849.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-30 00:00:00'), 2: Timestamp('2025-01-31 00:00:00'), 3: Timestamp('2025-02-02 00:00:00'), 4: Timestamp('2025-02-03 00:00:00')}}
2025-04-28 23:24:10.281 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2769.8, 1: 2773.7, 2: 2856.5, 3: 2846.5, 4: 2834.3}, 'high_price': {0: 2778.1, 1: 2857.7, 2: 2862.9, 3: 2861.5, 4: 2872.0}, 'low_price': {0: 2761.0, 1: 2770.0, 2: 2804.0, 3: 2802.0, 4: 2780.9}, 'close_price': {0: 2773.6, 1: 2856.6, 2: 2831.5, 3: 2834.1, 4: 2849.7}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2025-01-29 00:00:00'), 1: Timestamp('2025-01-30 00:00:00'), 2: Timestamp('2025-01-31 00:00:00'), 3: Timestamp('2025-02-02 00:00:00'), 4: Timestamp('2025-02-03 00:00:00')}}
2025-04-28 23:24:10.281 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (74, 6)
2025-04-28 23:24:10.282 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (74, 6)
2025-04-28 23:24:10.282 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:24:10.282 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:24:26.232 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: time-period-dropdown
2025-04-28 23:24:26.232 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:24:26.232793, end_date=2025-04-28 23:24:26.232793, timeframe=1D
2025-04-28 23:24:26.378 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:24:26.381 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:24:26.381865, end_date=2025-04-28 23:24:26.381865, timeframe=1D
2025-04-28 23:24:26.388 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:24:26.390 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:24:26.390 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:24:26.390 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:24:26.544 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:24:26.546 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:24:26.546 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:24:26.546 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:24:39.128 | INFO     | views.visual_dashboard:export_metal_data_excel:1891 - Excel export triggered for gold with timeframe 1D: n_clicks=1
2025-04-28 23:24:39.128 | INFO     | views.visual_dashboard:export_metal_data_excel:1902 - Using filtered data for export: 50 records
2025-04-28 23:25:13.988 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:25:13.989 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:25:13.989 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:25:13.989 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:25:13.989 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:25:13.990 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:25:13.990 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:25:13.990 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:25:13.990 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:28:27.442 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:28:27.444 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:28:44.323 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:28:44.325 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:28:55.240 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:28:55.242 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:29:52.447 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:29:52.449 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:31:34.661 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:31:34.663 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:34:48.039 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:34:48.042 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:35:04.912 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:35:04.914 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:35:53.004 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:53.005 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:53.006 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:57.990 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:57.992 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:57.992 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:35:57.993 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:01.296 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:01.297 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:02.519 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:02.519 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:02.519 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:02.520 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:03.497 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:07.955 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:07.958 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:08.507 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:08.507 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:08.507 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:08.508 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:10.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:10.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:10.109 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:10.110 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:11.289 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:11.290 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:11.291 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:18.770 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:18.772 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:34.731 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:34.734 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:36:36.070 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:36:51.636 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:36:51.639 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:37:08.974 | ERROR    | views.database_management:update_table_data:377 - Error updating table data: string indices must be integers
2025-04-28 23:37:13.950 | ERROR    | views.database_management:update_table_data:377 - Error updating table data: string indices must be integers
2025-04-28 23:37:51.032 | ERROR    | views.database_management:update_table_data:377 - Error updating table data: string indices must be integers
2025-04-28 23:37:52.924 | ERROR    | views.database_management:update_table_data:377 - Error updating table data: string indices must be integers
2025-04-28 23:38:02.657 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:38:02.659 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:38:15.529 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:38:15.531 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:38:31.055 | ERROR    | views.database_management:update_table_data:437 - Error updating table data: string indices must be integers
2025-04-28 23:39:59.654 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:39:59.657 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:31.523 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:31.524 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:43.282 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:43.284 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:50.047 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:40:50.050 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:41:02.851 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:41:02.853 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:50:35.460 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:50:35.462 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:51:14.139 | ERROR    | views.database_management:update_table_data:361 - Failed to identify primary keys: string indices must be integers
2025-04-28 23:51:14.208 | INFO     | views.database_management:save_edited_data:762 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:51:18.799 | ERROR    | views.database_management:update_table_data:361 - Failed to identify primary keys: string indices must be integers
2025-04-28 23:51:18.874 | INFO     | views.database_management:save_edited_data:762 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:51:50.554 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:51:50.556 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:51:54.400 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:51:54.403 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:51:55.805 | INFO     | views.database_management:save_edited_data:792 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:52:02.252 | INFO     | views.database_management:save_edited_data:792 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:52:24.354 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:52:24.356 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:52:31.155 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:52:31.157 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:52:49.371 | INFO     | views.database_management:save_edited_data:816 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:52:53.703 | INFO     | views.database_management:save_edited_data:816 - Successfully saved data: Successfully updated 100 records
2025-04-28 23:52:59.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:52:59.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:52:59.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:52:59.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:04.262 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:04.263 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:04.263 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:04.263 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:04.263 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:04.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:04.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:04.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:04.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:09.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:09.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:09.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:09.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:14.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:19.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:19.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:24.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:24.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:29.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:29.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:29.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:29.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:34.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:39.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:39.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:39.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:39.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:39.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:39.274 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:39.274 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:39.274 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:39.274 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:44.264 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:44.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:44.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:44.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:49.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:54.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:54.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:54.272 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:59.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:59.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:53:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:04.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:04.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:04.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:04.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:09.273 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:09.275 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:09.275 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:09.275 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:09.275 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:09.275 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:09.276 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:09.276 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:09.276 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:14.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:19.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:19.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:19.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:19.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:24.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:24.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:29.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:29.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:29.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:34.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:39.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:44.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:44.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:44.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:44.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:44.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:44.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:44.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:44.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:44.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:49.265 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:49.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:49.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:54.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:54.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:54.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:54.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:54.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:54.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:54.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:54.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:54.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:59.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:59.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:54:59.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:04.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:04.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:04.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:04.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:09.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:09.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:09.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:09.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:09.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:09.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:09.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:09.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:09.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:14.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:14.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:14.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:19.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:19.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:19.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:19.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:19.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:19.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:19.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:19.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:19.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:24.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:24.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:24.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:24.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:24.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:24.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:24.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:24.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:24.271 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:29.266 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:29.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:29.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:29.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:29.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:34.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:34.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:34.267 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:34.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:34.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:39.268 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:39.269 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:55:39.270 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:55:45.302 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:45.302 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:45.302391, end_date=2025-04-28 23:55:45.302391, timeframe=1D
2025-04-28 23:55:45.427 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:45.429 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:45.429 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:45.429 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:45.690 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: other-indicators-checklist
2025-04-28 23:55:45.691 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:45.691149, end_date=2025-04-28 23:55:45.691149, timeframe=1D
2025-04-28 23:55:45.809 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:45.810 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:45.810 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:45.810 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:48.587 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:48.587 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:48.587484, end_date=2025-04-28 23:55:48.587484, timeframe=1D
2025-04-28 23:55:48.648 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:48.649 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:48.649 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:48.650 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:49.004 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:49.004 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:49.004747, end_date=2025-04-28 23:55:49.004747, timeframe=1D
2025-04-28 23:55:49.062 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:49.064 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:49.064 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:49.064 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:49.449 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:49.449 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:49.449358, end_date=2025-04-28 23:55:49.449358, timeframe=1D
2025-04-28 23:55:49.563 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:49.565 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:49.565 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:49.565 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:49.846 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:49.846 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:49.846503, end_date=2025-04-28 23:55:49.846503, timeframe=1D
2025-04-28 23:55:49.902 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:49.903 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:49.904 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:49.904 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:50.232 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:50.232 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:50.232628, end_date=2025-04-28 23:55:50.232628, timeframe=1D
2025-04-28 23:55:50.289 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:50.290 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:50.291 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:50.291 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:50.577 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:50.577 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:50.577507, end_date=2025-04-28 23:55:50.577507, timeframe=1D
2025-04-28 23:55:50.581 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:50.581 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:50.581792, end_date=2025-04-28 23:55:50.581792, timeframe=1D
2025-04-28 23:55:50.745 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:50.747 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:50.748 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:50.749 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:50.751 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:50.751 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:50.755 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:50.756 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:51.059 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:51.060 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:51.059986, end_date=2025-04-28 23:55:51.059986, timeframe=1D
2025-04-28 23:55:51.116 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:51.117 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:51.117 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:51.117 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:51.353 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:51.353 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:51.353515, end_date=2025-04-28 23:55:51.353515, timeframe=1D
2025-04-28 23:55:51.408 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:51.409 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:51.409 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:51.409 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:51.737 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:51.738 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:51.738082, end_date=2025-04-28 23:55:51.738082, timeframe=1D
2025-04-28 23:55:51.795 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:51.797 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:51.797 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:51.798 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:52.084 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:52.085 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:52.085028, end_date=2025-04-28 23:55:52.085028, timeframe=1D
2025-04-28 23:55:52.147 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:52.149 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:52.149 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:52.149 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:52.513 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:52.514 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:52.514055, end_date=2025-04-28 23:55:52.514055, timeframe=1D
2025-04-28 23:55:52.630 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:52.632 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:52.632 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:52.632 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:52.908 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:52.909 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:52.909208, end_date=2025-04-28 23:55:52.909208, timeframe=1D
2025-04-28 23:55:52.967 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:52.968 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:52.968 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:52.968 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:53.318 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:53.318 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:53.318827, end_date=2025-04-28 23:55:53.318827, timeframe=1D
2025-04-28 23:55:53.379 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:53.382 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:53.382 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:53.382 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:53.754 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:53.754 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:53.754746, end_date=2025-04-28 23:55:53.754746, timeframe=1D
2025-04-28 23:55:53.866 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:53.868 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:53.868 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:53.868 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:54.337 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:54.337 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:54.337423, end_date=2025-04-28 23:55:54.337423, timeframe=1D
2025-04-28 23:55:54.404 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:54.406 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:54.406 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:54.406 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:54.878 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:55:54.878 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:55:54.878459, end_date=2025-04-28 23:55:54.878459, timeframe=1D
2025-04-28 23:55:54.939 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:55:54.940 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:55:54.940 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:55:54.940 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:55:59.850 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:55:59.852 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:01.177 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-28 23:56:01.177 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-30 23:56:01.177388, end_date=2025-04-28 23:56:01.177388, timeframe=1D
2025-04-28 23:56:01.283 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-28 23:56:01.284 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2796.5, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-28 23:56:01.284 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-28 23:56:01.284 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:07.820 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:07.824 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:07.843 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:07.848 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:07.848 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:07.849 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:12.752 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:12.753 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:12.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:17.753 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:17.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:17.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:17.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:17.754 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:17.755 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:17.755 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:17.755 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:17.755 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:22.759 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:22.760 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:22.761 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:22.761 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:22.761 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:22.761 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:22.762 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:22.762 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:22.762 | ERROR    | views.data_collection:update_collection_status:505 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:25.727 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:25.731 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:27.756 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:27.756 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:27.757 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:27.757 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:27.762 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:27.768 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:27.768 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:27.768 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:27.768 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:32.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:32.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:32.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:32.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:32.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:32.765 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:32.765 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:32.765 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:32.765 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:37.762 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:37.764 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:42.758 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:42.758 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:42.759 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:47.761 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:47.762 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:56:47.763 | ERROR    | views.data_collection:update_collection_status:535 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:56:49.612 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:56:49.616 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:09.589 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:09.594 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:14.517 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:14.522 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:17.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:17.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:17.770 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:22.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:22.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:22.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:27.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:27.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:27.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:27.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:30.383 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:30.385 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:57:32.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:32.764 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:32.764 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:32.765 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:37.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:37.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:37.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:37.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:37.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:37.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:37.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:37.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:37.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:42.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:42.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:42.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:42.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:47.757 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:47.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:47.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:47.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:47.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:47.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:47.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:47.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:47.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:52.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:52.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:52.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:52.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:52.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:52.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:52.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:52.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:52.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:57.756 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:57.757 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:57:57.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:02.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:02.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:02.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:07.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:07.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:07.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:07.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:07.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:07.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:07.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:07.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:07.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:12.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:12.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:12.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:12.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:17.758 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:17.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:17.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:22.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:22.760 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:27.759 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:27.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:27.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:27.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:27.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:27.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:27.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:32.761 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:32.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:32.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:32.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:32.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:32.762 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:32.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:32.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:32.763 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:35.408 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:58:35.410 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:58:59.379 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:58:59.380 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:02.228 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:02.229 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:02.230 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:03.539 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:03.541 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:20.879 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:20.879 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for gold from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:20.879 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:20.879 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for silver from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:20.879 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:20.880 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for platinum from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:20.880 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:20.880 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for palladium from alphavantage_api: name 'MetalPrice' is not defined
2025-04-28 23:59:20.880 | ERROR    | views.data_collection:update_collection_status:504 - Error getting latest price for copper from yfinance: name 'MetalPrice' is not defined
2025-04-28 23:59:23.424 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:59:23.429 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:59:31.258 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:59:31.260 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:59:47.144 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-28 23:59:47.148 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-29 00:00:38.138 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-29 00:00:38.143 | INFO     | database.data_collector:__init__:30 - DataCollector initialized with database connection
2025-04-29 00:03:30.120 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:03:30.134 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:07:12.621 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:07:12.635 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:10:00.303 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:10:00.318 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:10:00.336 | INFO     | __main__:scheduler_thread:46 - Scheduler background thread started
2025-04-29 00:10:00.337 | INFO     | __main__:<module>:310 - Started background scheduler thread
2025-04-29 00:10:00.337 | INFO     | __main__:scheduler_thread:51 - Checking for scheduled tasks...
2025-04-29 00:10:00.347 | INFO     | database.data_collector:run_scheduled_tasks:1132 - Schedule 2 has never run before, running now
2025-04-29 00:10:00.348 | INFO     | database.data_collector:update:70 - Начало обновления данных для GC=F из yfinance за 1 дней
2025-04-29 00:10:00.348 | INFO     | database.data_collector:_find_missing_hours:148 - Поиск пропущенных часов с 2025-04-28 00:00:00 по 2025-04-29 00:00:00
2025-04-29 00:10:00.348 | INFO     | database.data_collector:_find_missing_hours:158 - Всего 25 часов в запрошенном периоде
2025-04-29 00:10:00.348 | INFO     | database.data_collector:_find_missing_hours:163 - Запрос существующих записей из базы данных
2025-04-29 00:10:00.362 | INFO     | database.data_collector:_find_missing_hours:188 - Найдено 0 существующих записей в базе
2025-04-29 00:10:00.362 | INFO     | database.data_collector:_find_missing_hours:199 - Выявлено 25 пропущенных часов
2025-04-29 00:10:00.362 | INFO     | database.data_collector:update:81 - Found 25 missing hourly data points for GC=F
2025-04-29 00:10:00.476 | INFO     | database.data_collector:_update_from_yfinance:688 - Identified 1 blocks of missing data for GC=F
2025-04-29 00:10:00.476 | INFO     | database.data_collector:_update_from_yfinance:690 - Block 1: 25 hours from 2025-04-28 00:00:00 to 2025-04-29 00:00:00
2025-04-29 00:10:00.476 | INFO     | database.data_collector:_update_from_yfinance:851 - Processing smaller block 1/1 with 25 hours using chunked approach
2025-04-29 00:10:00.476 | INFO     | database.data_collector:_process_yfinance_block:918 - Processing GC=F chunk from 2025-04-28 to 2025-04-29 (25 hours)
2025-04-29 00:10:00.667 | WARNING  | database.data_collector:_process_yfinance_block:933 - No data returned from yfinance for chunk 2025-04-28 to 2025-04-29
2025-04-29 00:10:00.685 | INFO     | database.data_collector:_save_batch_yfinance_prices:618 - Saved batch of 25 records
2025-04-29 00:10:00.686 | INFO     | database.data_collector:_update_from_yfinance:864 - Total filled: 0 historical hours with data for GC=F
2025-04-29 00:10:00.686 | INFO     | database.data_collector:run_scheduled_tasks:1202 - Successfully updated gold from yfinance
2025-04-29 00:10:00.691 | INFO     | __main__:scheduler_thread:55 - Scheduled tasks executed: 1
2025-04-29 00:10:00.691 | INFO     | __main__:scheduler_thread:57 - Task gold_yfinance: Success
2025-04-29 00:10:00.946 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:10:00.956 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:10:00.968 | INFO     | __main__:scheduler_thread:46 - Scheduler background thread started
2025-04-29 00:10:00.968 | INFO     | __main__:<module>:310 - Started background scheduler thread
2025-04-29 00:10:00.968 | INFO     | __main__:scheduler_thread:51 - Checking for scheduled tasks...
2025-04-29 00:10:00.980 | INFO     | __main__:scheduler_thread:59 - No scheduled tasks were executed
2025-04-29 00:11:51.528 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:11:51.529 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:11:51.529228, end_date=2025-04-29 00:11:51.529228, timeframe=1D
2025-04-29 00:11:51.645 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:11:51.647 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:11:51.647 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:11:51.647 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:00.780 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: custom-indicators-store
2025-04-29 00:12:00.781 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:00.781171, end_date=2025-04-29 00:12:00.781171, timeframe=1D
2025-04-29 00:12:00.804 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: other-indicators-checklist
2025-04-29 00:12:00.810 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:00.810912, end_date=2025-04-29 00:12:00.810912, timeframe=1D
2025-04-29 00:12:00.947 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:00.949 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:00.949467, end_date=2025-04-29 00:12:00.949467, timeframe=1D
2025-04-29 00:12:00.963 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:00.975 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:00.976 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:01.048 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:01.134 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: custom-indicators-store
2025-04-29 00:12:01.142 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:01.142438, end_date=2025-04-29 00:12:01.142438, timeframe=1D
2025-04-29 00:12:01.163 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:01.173 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: other-indicators-checklist
2025-04-29 00:12:01.179 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:01.179496, end_date=2025-04-29 00:12:01.179496, timeframe=1D
2025-04-29 00:12:01.185 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:01.190 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:01.191 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:01.505 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:01.507 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:01.507966, end_date=2025-04-29 00:12:01.507966, timeframe=1D
2025-04-29 00:12:01.569 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:01.592 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:01.594 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:01.596 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:01.803 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:01.836 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:01.838 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:01.839 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:01.863 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:01.897 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:01.922 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:01.922 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:02.093 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:02.114 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:02.114 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:02.114 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:13.689 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:13.689 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:13.689940, end_date=2025-04-29 00:12:13.689940, timeframe=1D
2025-04-29 00:12:13.782 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:13.788 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:13.794 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:13.795 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:13.802 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:13.818 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:13.818307, end_date=2025-04-29 00:12:13.818307, timeframe=1D
2025-04-29 00:12:14.057 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:14.062 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:14.062 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:14.062 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:15.050 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:15.060 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:15.069 | INFO     | __main__:scheduler_thread:46 - Scheduler background thread started
2025-04-29 00:12:15.069 | INFO     | __main__:<module>:310 - Started background scheduler thread
2025-04-29 00:12:15.070 | INFO     | __main__:scheduler_thread:51 - Checking for scheduled tasks...
2025-04-29 00:12:15.080 | INFO     | __main__:scheduler_thread:59 - No scheduled tasks were executed
2025-04-29 00:12:17.364 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:17.364 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:17.364304, end_date=2025-04-29 00:12:17.364304, timeframe=1D
2025-04-29 00:12:17.442 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:17.443 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:17.443104, end_date=2025-04-29 00:12:17.443104, timeframe=1D
2025-04-29 00:12:17.526 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:17.527 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:17.527 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:17.527 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:17.593 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:17.595 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:17.596 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:17.596 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:19.235 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:19.236 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:19.236754, end_date=2025-04-29 00:12:19.236754, timeframe=1D
2025-04-29 00:12:19.390 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:19.392 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:19.393 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:19.393 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:19.393 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:19.393768, end_date=2025-04-29 00:12:19.393768, timeframe=1D
2025-04-29 00:12:19.393 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:19.536 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:19.538 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:19.539 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:19.539 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:20.942 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:20.942 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:20.942549, end_date=2025-04-29 00:12:20.942549, timeframe=1D
2025-04-29 00:12:21.012 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:21.017 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:21.017267, end_date=2025-04-29 00:12:21.017267, timeframe=1D
2025-04-29 00:12:21.060 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:21.072 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:21.078 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:21.079 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:21.248 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:21.251 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:21.251 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:21.251 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:22.300 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:22.300 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:22.300307, end_date=2025-04-29 00:12:22.300307, timeframe=1D
2025-04-29 00:12:22.382 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:22.389 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:22.389 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:22.389 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:22.413 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:22.414 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:22.414976, end_date=2025-04-29 00:12:22.414976, timeframe=1D
2025-04-29 00:12:22.535 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:22.543 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:22.543 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:22.543 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:24.404 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:24.414 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:24.425 | INFO     | __main__:scheduler_thread:46 - Scheduler background thread started
2025-04-29 00:12:24.425 | INFO     | __main__:<module>:310 - Started background scheduler thread
2025-04-29 00:12:24.425 | INFO     | __main__:scheduler_thread:51 - Checking for scheduled tasks...
2025-04-29 00:12:24.439 | INFO     | __main__:scheduler_thread:59 - No scheduled tasks were executed
2025-04-29 00:12:24.454 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: chart-type-dropdown
2025-04-29 00:12:24.454 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:24.454674, end_date=2025-04-29 00:12:24.454674, timeframe=1D
2025-04-29 00:12:24.590 | INFO     | views.visual_dashboard:update_dashboard:1451 - Dashboard update triggered by: metals-dropdown
2025-04-29 00:12:24.591 | INFO     | views.visual_dashboard:update_dashboard:1540 - Getting data with params: metals=['GOLD'], source=YFINANCE, start_date=2024-10-31 00:12:24.591206, end_date=2025-04-29 00:12:24.591206, timeframe=1D
2025-04-29 00:12:24.597 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:24.600 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:24.601 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:24.601 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:24.669 | INFO     | views.visual_dashboard:get_price_data:854 - Returning dataframe with 149 rows
2025-04-29 00:12:24.673 | INFO     | views.visual_dashboard:update_dashboard:1581 - DataFrame head before plotting: {'open_price': {0: 2798.7, 1: 2756.6, 2: 2743.5, 3: 2747.6, 4: 2744.8}, 'high_price': {0: 2800.8, 1: 2772.4, 2: 2749.5, 3: 2757.5, 4: 2759.5}, 'low_price': {0: 2742.6, 1: 2742.6, 2: 2739.4, 3: 2740.7, 4: 2733.4}, 'close_price': {0: 2756.5, 1: 2745.9, 2: 2747.4, 3: 2744.8, 4: 2754.4}, 'metal_type': {0: 'gold', 1: 'gold', 2: 'gold', 3: 'gold', 4: 'gold'}, 'timestamp': {0: Timestamp('2024-10-31 00:00:00'), 1: Timestamp('2024-11-01 00:00:00'), 2: Timestamp('2024-11-03 00:00:00'), 3: Timestamp('2024-11-04 00:00:00'), 4: Timestamp('2024-11-05 00:00:00')}}
2025-04-29 00:12:24.673 | INFO     | views.visual_dashboard:update_dashboard:1582 - DataFrame shape: (149, 6)
2025-04-29 00:12:24.673 | INFO     | views.visual_dashboard:update_dashboard:1583 - DataFrame columns: ['open_price', 'high_price', 'low_price', 'close_price', 'metal_type', 'timestamp']
2025-04-29 00:12:43.463 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:43.474 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:12:43.483 | INFO     | __main__:scheduler_thread:46 - Scheduler background thread started
2025-04-29 00:12:43.483 | INFO     | __main__:<module>:310 - Started background scheduler thread
2025-04-29 00:12:43.483 | INFO     | __main__:scheduler_thread:51 - Checking for scheduled tasks...
2025-04-29 00:12:43.495 | INFO     | __main__:scheduler_thread:59 - No scheduled tasks were executed
2025-04-29 00:13:41.526 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
2025-04-29 00:13:41.536 | INFO     | database.data_collector:__init__:40 - DataCollector initialized with database connection
